#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SelectablePipButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_SelectablePipButton.WBP_SelectablePipButton_C.ExecuteUbergraph_WBP_SelectablePipButton
// 0x0138 (0x0138 - 0x0000)
struct WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0040(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00B8(0x0078)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton) == 0x000008, "Wrong alignment on WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton");
static_assert(sizeof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton) == 0x000138, "Wrong size on WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, EntryPoint) == 0x000000, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, K2Node_Event_MyGeometry) == 0x000008, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, K2Node_Event_MouseEvent_1) == 0x000040, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, K2Node_Event_MouseEvent) == 0x0000B8, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, CallFunc_IsValid_ReturnValue_2) == 0x000130, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton, K2Node_Event_IsDesignTime) == 0x000131, "Member 'WBP_SelectablePipButton_C_ExecuteUbergraph_WBP_SelectablePipButton::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_SelectablePipButton.WBP_SelectablePipButton_C.OnMouseButtonUp
// 0x02E8 (0x02E8 - 0x0000)
struct WBP_SelectablePipButton_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0228(0x00B8)()
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectablePipButton_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_SelectablePipButton_C_OnMouseButtonUp");
static_assert(sizeof(WBP_SelectablePipButton_C_OnMouseButtonUp) == 0x0002E8, "Wrong size on WBP_SelectablePipButton_C_OnMouseButtonUp");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue_1) == 0x000169, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue_1) == 0x000228, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseButtonUp, CallFunc_IsHovered_ReturnValue) == 0x0002E0, "Member 'WBP_SelectablePipButton_C_OnMouseButtonUp::CallFunc_IsHovered_ReturnValue' has a wrong offset!");

// Function WBP_SelectablePipButton.WBP_SelectablePipButton_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_SelectablePipButton_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_SelectablePipButton_C_OnMouseEnter) == 0x000008, "Wrong alignment on WBP_SelectablePipButton_C_OnMouseEnter");
static_assert(sizeof(WBP_SelectablePipButton_C_OnMouseEnter) == 0x0000B0, "Wrong size on WBP_SelectablePipButton_C_OnMouseEnter");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WBP_SelectablePipButton_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WBP_SelectablePipButton_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function WBP_SelectablePipButton.WBP_SelectablePipButton_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WBP_SelectablePipButton_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_SelectablePipButton_C_OnMouseLeave) == 0x000008, "Wrong alignment on WBP_SelectablePipButton_C_OnMouseLeave");
static_assert(sizeof(WBP_SelectablePipButton_C_OnMouseLeave) == 0x000078, "Wrong size on WBP_SelectablePipButton_C_OnMouseLeave");
static_assert(offsetof(WBP_SelectablePipButton_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WBP_SelectablePipButton_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WBP_SelectablePipButton.WBP_SelectablePipButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SelectablePipButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SelectablePipButton_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SelectablePipButton_C_PreConstruct");
static_assert(sizeof(WBP_SelectablePipButton_C_PreConstruct) == 0x000001, "Wrong size on WBP_SelectablePipButton_C_PreConstruct");
static_assert(offsetof(WBP_SelectablePipButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SelectablePipButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

