#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bard_EnsureNoteLimit

#include "Basic.hpp"

#include "GameSystemsPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Bard_EnsureNoteLimit.Bard_EnsureNoteLimit_C.RunScript
// 0x0230 (0x0230 - 0x0000)
struct Bard_EnsureNoteLimit_C_RunScript final
{
public:
	struct FScriptActorInfo                       Target;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Instigator;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Source;                                            // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                AttackOrigin;                                      // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScriptTriggerInfo                     TriggerInfo;                                       // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         earliestIndex;                                     // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        earliestStart;                                     // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         noteCount;                                         // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEffectInst>                    CallFunc_GetCurrentEffects_ReturnValue;            // 0x0080(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectInst                            CallFunc_Array_Get_Item;                           // 0x00A0(0x0168)(ContainsInstancedReference)
	struct FEffectId                              K2Node_MakeStruct_EffectId;                        // 0x0208(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Bard_EnsureNoteLimit_C_RunScript) == 0x000008, "Wrong alignment on Bard_EnsureNoteLimit_C_RunScript");
static_assert(sizeof(Bard_EnsureNoteLimit_C_RunScript) == 0x000230, "Wrong size on Bard_EnsureNoteLimit_C_RunScript");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Target) == 0x000000, "Member 'Bard_EnsureNoteLimit_C_RunScript::Target' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Instigator) == 0x000010, "Member 'Bard_EnsureNoteLimit_C_RunScript::Instigator' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Source) == 0x000020, "Member 'Bard_EnsureNoteLimit_C_RunScript::Source' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, AttackOrigin) == 0x000030, "Member 'Bard_EnsureNoteLimit_C_RunScript::AttackOrigin' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, TriggerInfo) == 0x000048, "Member 'Bard_EnsureNoteLimit_C_RunScript::TriggerInfo' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, ReturnValue) == 0x000060, "Member 'Bard_EnsureNoteLimit_C_RunScript::ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, earliestIndex) == 0x000064, "Member 'Bard_EnsureNoteLimit_C_RunScript::earliestIndex' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, earliestStart) == 0x000068, "Member 'Bard_EnsureNoteLimit_C_RunScript::earliestStart' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, noteCount) == 0x000070, "Member 'Bard_EnsureNoteLimit_C_RunScript::noteCount' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'Bard_EnsureNoteLimit_C_RunScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_GetCurrentEffects_ReturnValue) == 0x000080, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_GetCurrentEffects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Temp_int_Array_Index_Variable) == 0x000098, "Member 'Bard_EnsureNoteLimit_C_RunScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, K2Node_MakeStruct_EffectId) == 0x000208, "Member 'Bard_EnsureNoteLimit_C_RunScript::K2Node_MakeStruct_EffectId' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Set_Contains_ReturnValue) == 0x000220, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, Temp_int_Variable) == 0x000224, "Member 'Bard_EnsureNoteLimit_C_RunScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Greater_IntInt_ReturnValue) == 0x000228, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000229, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Bard_EnsureNoteLimit_C_RunScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x00022C, "Member 'Bard_EnsureNoteLimit_C_RunScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

