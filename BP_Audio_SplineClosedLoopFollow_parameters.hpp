#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_SplineClosedLoopFollow

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow
// 0x0478 (0x0478 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate;         // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInsideSpline_IsInsideSpine_;           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInsideSpline_IsInsideSplineChanged_;   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_1; // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_2; // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2; // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate_1;       // 0x0138(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation; // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint_1; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0190(0x0018)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x01B0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1; // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0238(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x0250(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x02A0(0x0018)()
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x02C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x0310(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0320(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0348(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0358(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0368(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0460(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow) == 0x000478, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, EntryPoint) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_OutputDelegate) == 0x000004, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x000038, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000040, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000058, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetInsideSpline_IsInsideSpine_) == 0x000070, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetInsideSpline_IsInsideSpine_' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetInsideSpline_IsInsideSplineChanged_) == 0x000071, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetInsideSpline_IsInsideSplineChanged_' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_HasAuthority_ReturnValue) == 0x000072, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnReference_1) == 0x000078, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnReference_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000080, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetActorForwardVector_ReturnValue) == 0x000098, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_IsServer_ReturnValue) == 0x0000B0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_Y) == 0x0000F0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnReference_2) == 0x000100, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnReference_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2) == 0x000108, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_X_1) == 0x000120, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_OutputDelegate_1) == 0x000138, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation) == 0x000160, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint) == 0x000178, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint_1) == 0x000180, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetDistanceFromPlayerToClosestSplintPoint_DistanceToPlayerFromClosestSpawnPoint_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_MapRangeClamped_ReturnValue) == 0x000188, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000190, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_FormatArgumentData) == 0x0001B0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000200, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000201, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1) == 0x000208, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000220, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Conv_BoolToText_ReturnValue) == 0x000238, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x000250, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0002A0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_HasAuthority_ReturnValue_1) == 0x0002B8, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x0002C0, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, UniqueObjectNameForCooking_Array) == 0x000310, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Format_ReturnValue) == 0x000320, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Conv_TextToString_ReturnValue) == 0x000338, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, Temp_delegate_Variable) == 0x000348, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000358, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_IsServer_ReturnValue_1) == 0x000360, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000368, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_PostAkEvent_ReturnValue) == 0x000450, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000460, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000468, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00046C, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x000470, "Member 'BP_Audio_SplineClosedLoopFollow_C_ExecuteUbergraph_BP_Audio_SplineClosedLoopFollow::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.GetControlledPawnLocation
// 0x0050 (0x0050 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation final
{
public:
	class APawn*                                  ControlledPawnReference;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ControlledPawnLocation;                            // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation) == 0x000050, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, ControlledPawnReference) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, ControlledPawnLocation) == 0x000008, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetControlledPawnLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.GetDistanceFromPlayerToClosestSplintPoint
// 0x0058 (0x0058 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint final
{
public:
	double                                        DistanceToPlayerFromClosestSpawnPoint;             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint) == 0x000058, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, DistanceToPlayerFromClosestSpawnPoint) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::DistanceToPlayerFromClosestSpawnPoint' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetDistanceFromPlayerToClosestSplintPoint::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.GetInsideSpline
// 0x0088 (0x0088 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline final
{
public:
	bool                                          IsInsideSpine_;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInsideSplineChanged_;                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline) == 0x000088, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, IsInsideSpine_) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::IsInsideSpine_' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, IsInsideSplineChanged_) == 0x000001, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::IsInsideSplineChanged_' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x000008, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000010, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference_1) == 0x000028, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000030, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000048, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_Dot_VectorVector_ReturnValue) == 0x000078, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000080, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000081, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetInsideSpline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.GetPlayerControllerCameraRotation
// 0x0038 (0x0038 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation final
{
public:
	struct FRotator                               PlayerControllerCameraRotation;                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation) == 0x000038, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation, PlayerControllerCameraRotation) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation::PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation, CallFunc_GetCameraRotation_ReturnValue) == 0x000020, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetPlayerControllerCameraRotation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.GetSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent final
{
public:
	class USplineComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent) == 0x000008, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent) == 0x000008, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent, ReturnValue) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_GetSplineComponent::ReturnValue' has a wrong offset!");

// Function BP_Audio_SplineClosedLoopFollow.BP_Audio_SplineClosedLoopFollow_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Audio_SplineClosedLoopFollow_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Audio_SplineClosedLoopFollow_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Audio_SplineClosedLoopFollow_C_ReceiveTick");
static_assert(sizeof(BP_Audio_SplineClosedLoopFollow_C_ReceiveTick) == 0x000004, "Wrong size on BP_Audio_SplineClosedLoopFollow_C_ReceiveTick");
static_assert(offsetof(BP_Audio_SplineClosedLoopFollow_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Audio_SplineClosedLoopFollow_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

