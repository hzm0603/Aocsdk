#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PCFlagsInterface

#include "Basic.hpp"


namespace SDK::Params
{

// Function PCFlagsInterface.PCFlagsInterface_C.PCFlag_Clear
// 0x000C (0x000C - 0x0000)
struct PCFlagsInterface_C_PCFlag_Clear final
{
public:
	class FName                                   FlagName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCFlagsInterface_C_PCFlag_Clear) == 0x000004, "Wrong alignment on PCFlagsInterface_C_PCFlag_Clear");
static_assert(sizeof(PCFlagsInterface_C_PCFlag_Clear) == 0x00000C, "Wrong size on PCFlagsInterface_C_PCFlag_Clear");
static_assert(offsetof(PCFlagsInterface_C_PCFlag_Clear, FlagName) == 0x000000, "Member 'PCFlagsInterface_C_PCFlag_Clear::FlagName' has a wrong offset!");
static_assert(offsetof(PCFlagsInterface_C_PCFlag_Clear, Success) == 0x000008, "Member 'PCFlagsInterface_C_PCFlag_Clear::Success' has a wrong offset!");

// Function PCFlagsInterface.PCFlagsInterface_C.PCFlag_Set
// 0x000C (0x000C - 0x0000)
struct PCFlagsInterface_C_PCFlag_Set final
{
public:
	class FName                                   FlagName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PCFlagsInterface_C_PCFlag_Set) == 0x000004, "Wrong alignment on PCFlagsInterface_C_PCFlag_Set");
static_assert(sizeof(PCFlagsInterface_C_PCFlag_Set) == 0x00000C, "Wrong size on PCFlagsInterface_C_PCFlag_Set");
static_assert(offsetof(PCFlagsInterface_C_PCFlag_Set, FlagName) == 0x000000, "Member 'PCFlagsInterface_C_PCFlag_Set::FlagName' has a wrong offset!");
static_assert(offsetof(PCFlagsInterface_C_PCFlag_Set, Success) == 0x000008, "Member 'PCFlagsInterface_C_PCFlag_Set::Success' has a wrong offset!");

}

