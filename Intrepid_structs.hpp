#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Intrepid

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum Intrepid.ETickScheduleTiming
// NumValues: 0x0003
enum class ETickScheduleTiming : uint8
{
	None                                     = 0,
	Budget                                   = 1,
	ETickScheduleTiming_MAX                  = 2,
};

// Enum Intrepid.ETickScheduleMethod
// NumValues: 0x0003
enum class ETickScheduleMethod : uint8
{
	None                                     = 0,
	RoundRobin                               = 1,
	ETickScheduleMethod_MAX                  = 2,
};

// Enum Intrepid.ETickPriorityMethod
// NumValues: 0x0004
enum class ETickPriorityMethod : uint8
{
	None                                     = 0,
	Significance                             = 1,
	LastTickedTime                           = 2,
	ETickPriorityMethod_MAX                  = 3,
};

// ScriptStruct Intrepid.IntrepidSystemObjectParams
// 0x0002 (0x0002 - 0x0000)
struct FIntrepidSystemObjectParams final
{
public:
	uint8                                         Pad_0[0x2];                                        // 0x0000(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIntrepidSystemObjectParams) == 0x000001, "Wrong alignment on FIntrepidSystemObjectParams");
static_assert(sizeof(FIntrepidSystemObjectParams) == 0x000002, "Wrong size on FIntrepidSystemObjectParams");

// ScriptStruct Intrepid.IntrepidSystemObject
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FIntrepidSystemObject final
{
public:
	uint8                                         Pad_0[0x28];                                       // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIntrepidSystemObject) == 0x000008, "Wrong alignment on FIntrepidSystemObject");
static_assert(sizeof(FIntrepidSystemObject) == 0x000028, "Wrong size on FIntrepidSystemObject");

// ScriptStruct Intrepid.IntrepidSystemConfigData
// 0x0018 (0x0018 - 0x0000)
struct FIntrepidSystemConfigData final
{
public:
	class FString                                 ClassName;                                         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GoalCompletionTime;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnabled;                                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIntrepidSystemConfigData) == 0x000008, "Wrong alignment on FIntrepidSystemConfigData");
static_assert(sizeof(FIntrepidSystemConfigData) == 0x000018, "Wrong size on FIntrepidSystemConfigData");
static_assert(offsetof(FIntrepidSystemConfigData, ClassName) == 0x000000, "Member 'FIntrepidSystemConfigData::ClassName' has a wrong offset!");
static_assert(offsetof(FIntrepidSystemConfigData, GoalCompletionTime) == 0x000010, "Member 'FIntrepidSystemConfigData::GoalCompletionTime' has a wrong offset!");
static_assert(offsetof(FIntrepidSystemConfigData, bEnabled) == 0x000014, "Member 'FIntrepidSystemConfigData::bEnabled' has a wrong offset!");

// ScriptStruct Intrepid.IntrepidSystemTickFunction
// 0x0008 (0x0030 - 0x0028)
struct FIntrepidSystemTickFunction final : public FTickFunction
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FIntrepidSystemTickFunction) == 0x000008, "Wrong alignment on FIntrepidSystemTickFunction");
static_assert(sizeof(FIntrepidSystemTickFunction) == 0x000030, "Wrong size on FIntrepidSystemTickFunction");

}

