#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Accumulator_Gorilla_PowerSmack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STT_Accumulator_Gorilla_PowerSmack.STT_Accumulator_Gorilla_PowerSmack_C.Accumulate
// 0x0020 (0x0020 - 0x0000)
struct STT_Accumulator_Gorilla_PowerSmack_C_Accumulate final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetAdditionalAccumulation_ExtraCoefficient; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate) == 0x000008, "Wrong alignment on STT_Accumulator_Gorilla_PowerSmack_C_Accumulate");
static_assert(sizeof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate) == 0x000020, "Wrong size on STT_Accumulator_Gorilla_PowerSmack_C_Accumulate");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate, DeltaTime) == 0x000000, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_Accumulate::DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate, CallFunc_GetAdditionalAccumulation_ExtraCoefficient) == 0x000008, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_Accumulate::CallFunc_GetAdditionalAccumulation_ExtraCoefficient' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_Accumulate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_Accumulate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_Accumulate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function STT_Accumulator_Gorilla_PowerSmack.STT_Accumulator_Gorilla_PowerSmack_C.GetAdditionalAccumulation
// 0x0180 (0x0180 - 0x0000)
struct STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation final
{
public:
	double                                        ExtraCoefficient;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FHateEntry>         CallFunc_GetHatedCharacters_ReturnValue;           // 0x0058(0x0050)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHateEntry>                     CallFunc_Map_Values_Values;                        // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHateEntry                             CallFunc_Array_Get_Item;                           // 0x00D4(0x0014)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation) == 0x000008, "Wrong alignment on STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation");
static_assert(sizeof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation) == 0x000180, "Wrong size on STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, ExtraCoefficient) == 0x000000, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::ExtraCoefficient' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, Count) == 0x000008, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::Count' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, Temp_int_Variable) == 0x00000C, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, Temp_int_Array_Index_Variable) == 0x000018, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Max_ReturnValue) == 0x000028, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_GetHatedCharacters_ReturnValue) == 0x000058, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_GetHatedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A8, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Map_Values_Values) == 0x0000C0, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000F0, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000108, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_BreakVector_X) == 0x000120, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_BreakVector_Y) == 0x000128, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_BreakVector_Z) == 0x000130, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_MakeVector_ReturnValue) == 0x000138, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_VSize_ReturnValue) == 0x000150, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Dot_VectorVector_ReturnValue) == 0x000158, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000160, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_DegAcos_ReturnValue) == 0x000170, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000178, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'STT_Accumulator_Gorilla_PowerSmack_C_GetAdditionalAccumulation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

