#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BuckFloatingText

#include "Basic.hpp"

#include "WBP_BuckFloatingText_classes.hpp"
#include "WBP_BuckFloatingText_parameters.hpp"


namespace SDK
{

// Function WBP_BuckFloatingText.WBP_BuckFloatingText_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_BuckFloatingText_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingText_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_BuckFloatingText.WBP_BuckFloatingText_C.ExecuteUbergraph_WBP_BuckFloatingText
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingText_C::ExecuteUbergraph_WBP_BuckFloatingText(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingText_C", "ExecuteUbergraph_WBP_BuckFloatingText");

	Params::WBP_BuckFloatingText_C_ExecuteUbergraph_WBP_BuckFloatingText Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingText.WBP_BuckFloatingText_C.GetFloaterBaseOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    isText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    hitting                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHealing                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    resist                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector*                         Offset_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingText_C::GetFloaterBaseOffset(class AActor* Owner_0, bool isText, bool hitting, bool IsHealing, bool resist, struct FVector* Offset_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingText_C", "GetFloaterBaseOffset");

	Params::WBP_BuckFloatingText_C_GetFloaterBaseOffset Parms{};

	Parms.Owner_0 = Owner_0;
	Parms.isText = isText;
	Parms.hitting = hitting;
	Parms.IsHealing = IsHealing;
	Parms.resist = resist;

	UObject::ProcessEvent(Func, &Parms);

	if (Offset_0 != nullptr)
		*Offset_0 = std::move(Parms.Offset_0);
}


// Function WBP_BuckFloatingText.WBP_BuckFloatingText_C.SetFloater
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    isCrit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMiss                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isBlock                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isResist                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isImmune                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   StatModGuid_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RawValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   SourceRecordType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    hitting_OtherwiseGettingHit_                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   statGuid                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    weaponHit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isPhysical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMagical                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingText_C::SetFloater(class AActor* Owner_0, bool isCrit, bool isMiss, bool isBlock, bool isResist, bool isImmune, int64 StatModGuid_0, double Value_0, double RawValue, int64 SourceRecordType, bool hitting_OtherwiseGettingHit_, int64 statGuid, const class FString& Str, bool weaponHit, bool isPhysical, bool isMagical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingText_C", "SetFloater");

	Params::WBP_BuckFloatingText_C_SetFloater Parms{};

	Parms.Owner_0 = Owner_0;
	Parms.isCrit = isCrit;
	Parms.isMiss = isMiss;
	Parms.isBlock = isBlock;
	Parms.isResist = isResist;
	Parms.isImmune = isImmune;
	Parms.StatModGuid_0 = StatModGuid_0;
	Parms.Value_0 = Value_0;
	Parms.RawValue = RawValue;
	Parms.SourceRecordType = SourceRecordType;
	Parms.hitting_OtherwiseGettingHit_ = hitting_OtherwiseGettingHit_;
	Parms.statGuid = statGuid;
	Parms.Str = std::move(Str);
	Parms.weaponHit = weaponHit;
	Parms.isPhysical = isPhysical;
	Parms.isMagical = isMagical;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingText.WBP_BuckFloatingText_C.SetFloaterVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    hitting                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isCrit                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   statGuid                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  SizeMult                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ColorOverride                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FLinearColor&              OverrideColor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    weaponHit                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isPhysical                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMagical                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingText_C::SetFloaterVisuals(bool hitting, bool isCrit, int64 statGuid, double Value_0, double SizeMult, bool isText, bool ColorOverride, const struct FLinearColor& OverrideColor, bool weaponHit, bool isPhysical, bool isMagical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingText_C", "SetFloaterVisuals");

	Params::WBP_BuckFloatingText_C_SetFloaterVisuals Parms{};

	Parms.hitting = hitting;
	Parms.isCrit = isCrit;
	Parms.statGuid = statGuid;
	Parms.Value_0 = Value_0;
	Parms.SizeMult = SizeMult;
	Parms.isText = isText;
	Parms.ColorOverride = ColorOverride;
	Parms.OverrideColor = std::move(OverrideColor);
	Parms.weaponHit = weaponHit;
	Parms.isPhysical = isPhysical;
	Parms.isMagical = isMagical;

	UObject::ProcessEvent(Func, &Parms);
}

}

