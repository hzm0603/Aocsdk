#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_FloatDifference

#include "Basic.hpp"

#include "DesignDataPlugin_structs.hpp"
#include "GeometryCollectionNodes_structs.hpp"
#include "StateTreeModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STC_FloatDifference.STC_FloatDifference_C
// 0x0118 (0x0180 - 0x0068)
class USTC_FloatDifference_C final : public UStateTreeConditionBlueprintBase
{
public:
	class ABaseCharacter*                         Agent;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FAoCExpression                         Left_Expression;                                   // 0x0070(0x0050)(Edit, BlueprintVisible)
	double                                        Left;                                              // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAoCExpression                         Right_Expression;                                  // 0x00C8(0x0050)(Edit, BlueprintVisible)
	double                                        Right;                                             // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAoCExpression                         Difference_Expression;                             // 0x0120(0x0050)(Edit, BlueprintVisible)
	double                                        Difference;                                        // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECompareOperationEnum                         Compare_Operation;                                 // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Print() const;
	bool ReceiveTestCondition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STC_FloatDifference_C">();
	}
	static class USTC_FloatDifference_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTC_FloatDifference_C>();
	}
};
static_assert(alignof(USTC_FloatDifference_C) == 0x000008, "Wrong alignment on USTC_FloatDifference_C");
static_assert(sizeof(USTC_FloatDifference_C) == 0x000180, "Wrong size on USTC_FloatDifference_C");
static_assert(offsetof(USTC_FloatDifference_C, Agent) == 0x000068, "Member 'USTC_FloatDifference_C::Agent' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Left_Expression) == 0x000070, "Member 'USTC_FloatDifference_C::Left_Expression' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Left) == 0x0000C0, "Member 'USTC_FloatDifference_C::Left' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Right_Expression) == 0x0000C8, "Member 'USTC_FloatDifference_C::Right_Expression' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Right) == 0x000118, "Member 'USTC_FloatDifference_C::Right' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Difference_Expression) == 0x000120, "Member 'USTC_FloatDifference_C::Difference_Expression' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Difference) == 0x000170, "Member 'USTC_FloatDifference_C::Difference' has a wrong offset!");
static_assert(offsetof(USTC_FloatDifference_C, Compare_Operation) == 0x000178, "Member 'USTC_FloatDifference_C::Compare_Operation' has a wrong offset!");

}

