#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VerraWorld_GlobalSky

#include "Basic.hpp"

#include "BP_VerraWorld_GlobalSky_classes.hpp"
#include "BP_VerraWorld_GlobalSky_parameters.hpp"


namespace SDK
{

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Adjust Weather
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Custom_Humidity_Max                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Humidity_Min                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Precipitation_Amount_Max                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Precipitation_Amount_Min                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Temp_Max                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Temp_Min                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_WindSpeed_Max                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Wind_Speed_Min                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Chance_Of_Precip_Max                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Custom_Chance_Of_Precip_Min                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Adjust_Weather(double Custom_Humidity_Max, double Custom_Humidity_Min, double Custom_Precipitation_Amount_Max, double Custom_Precipitation_Amount_Min, double Custom_Temp_Max, double Custom_Temp_Min, double Custom_WindSpeed_Max, double Custom_Wind_Speed_Min, double Custom_Chance_Of_Precip_Max, double Custom_Chance_Of_Precip_Min)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Adjust Weather");

	Params::BP_VerraWorld_GlobalSky_C_Adjust_Weather Parms{};

	Parms.Custom_Humidity_Max = Custom_Humidity_Max;
	Parms.Custom_Humidity_Min = Custom_Humidity_Min;
	Parms.Custom_Precipitation_Amount_Max = Custom_Precipitation_Amount_Max;
	Parms.Custom_Precipitation_Amount_Min = Custom_Precipitation_Amount_Min;
	Parms.Custom_Temp_Max = Custom_Temp_Max;
	Parms.Custom_Temp_Min = Custom_Temp_Min;
	Parms.Custom_WindSpeed_Max = Custom_WindSpeed_Max;
	Parms.Custom_Wind_Speed_Min = Custom_Wind_Speed_Min;
	Parms.Custom_Chance_Of_Precip_Max = Custom_Chance_Of_Precip_Max;
	Parms.Custom_Chance_Of_Precip_Min = Custom_Chance_Of_Precip_Min;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.AdjustTOD
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::AdjustTOD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "AdjustTOD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Apply Niagara and Material Params
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Apply_Niagara_and_Material_Params()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Apply Niagara and Material Params");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Apply Weather Override
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSingleDayClimate                StructRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FSingleDayClimate                Output_Get                                             (Parm, OutParm)

void ABP_VerraWorld_GlobalSky_C::Apply_Weather_Override(struct FSingleDayClimate& StructRef, struct FSingleDayClimate* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Apply Weather Override");

	Params::BP_VerraWorld_GlobalSky_C_Apply_Weather_Override Parms{};

	Parms.StructRef = std::move(StructRef);

	UObject::ProcessEvent(Func, &Parms);

	StructRef = std::move(Parms.StructRef);

	if (Output_Get != nullptr)
		*Output_Get = std::move(Parms.Output_Get);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Bind Events
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Bind_Events()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Bind Events");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.BiomePostProcessBlend
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::BiomePostProcessBlend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "BiomePostProcessBlend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.BiomePPVValidChecks
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTRUCT_PostProcessDefaultSettingsSTRUCT_PostProcessDefaultSettings                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class FString                           Biome_Color                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   BiomeAmount                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::BiomePPVValidChecks(const struct FSTRUCT_PostProcessDefaultSettings& STRUCT_PostProcessDefaultSettings, const class FString& Biome_Color, float BiomeAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "BiomePPVValidChecks");

	Params::BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks Parms{};

	Parms.STRUCT_PostProcessDefaultSettings = std::move(STRUCT_PostProcessDefaultSettings);
	Parms.Biome_Color = std::move(Biome_Color);
	Parms.BiomeAmount = BiomeAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Blend Current Atmosphere With Biomes
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Blend_Current_Atmosphere_With_Biomes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Blend Current Atmosphere With Biomes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Blend Current Atmosphere With Overrides
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Blend_Current_Atmosphere_With_Overrides()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Blend Current Atmosphere With Overrides");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Calculate WInd
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Calculate_WInd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Calculate WInd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Cast
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Cast_Is_Valid                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Cast(bool* Cast_Is_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Cast");

	Params::BP_VerraWorld_GlobalSky_C_Cast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cast_Is_Valid != nullptr)
		*Cast_Is_Valid = Parms.Cast_Is_Valid;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Clear Weather RT
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Clear_Weather_RT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Clear Weather RT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.NightPostProcessLerp
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::NightPostProcessLerp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "NightPostProcessLerp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.End Adjust Weather
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::End_Adjust_Weather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "End Adjust Weather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Add Blend Settings
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAtmoBlendSettings               Blend_Settings                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// int32                                   Override_Volmume_Hash                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Event___Add_Blend_Settings(const struct FAtmoBlendSettings& Blend_Settings, int32 Override_Volmume_Hash)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Event - Add Blend Settings");

	Params::BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings Parms{};

	Parms.Blend_Settings = std::move(Blend_Settings);
	Parms.Override_Volmume_Hash = Override_Volmume_Hash;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Current Tranistion
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hash_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Current_Transition                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Event___Current_Tranistion(int32 Hash_Name, double Current_Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Event - Current Tranistion");

	Params::BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion Parms{};

	Parms.Hash_Name = Hash_Name;
	Parms.Current_Transition = Current_Transition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Remove Blend
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Hash_Name                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Event___Remove_Blend(int32 Hash_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Event - Remove Blend");

	Params::BP_VerraWorld_GlobalSky_C_Event___Remove_Blend Parms{};

	Parms.Hash_Name = Hash_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event Set Biome
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Set_Biome                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EBiomeType                              Biome                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Event_Set_Biome(bool Set_Biome, EBiomeType Biome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Event Set Biome");

	Params::BP_VerraWorld_GlobalSky_C_Event_Set_Biome Parms{};

	Parms.Set_Biome = Set_Biome;
	Parms.Biome = Biome;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ExecuteUbergraph_BP_VerraWorld_GlobalSky
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::ExecuteUbergraph_BP_VerraWorld_GlobalSky(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ExecuteUbergraph_BP_VerraWorld_GlobalSky");

	Params::BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ExposureComp
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::ExposureComp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ExposureComp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ExtendBPtoDebug
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::ExtendBPtoDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ExtendBPtoDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Finalize Atmosphere Output
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Finalize_Atmosphere_Output()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Finalize Atmosphere Output");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.FlashLighting
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::FlashLighting()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "FlashLighting");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.FlashLightingEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::FlashLightingEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "FlashLightingEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Force In Editor Tick
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Force_In_Editor_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Force In Editor Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ForceEditorTick
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::ForceEditorTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ForceEditorTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Get 0-1 TimeOfDay Normalized
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Zero_1_Time_of_Day_Normalized                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Get_0_1_TimeOfDay_Normalized(double* Zero_1_Time_of_Day_Normalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Get 0-1 TimeOfDay Normalized");

	Params::BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Zero_1_Time_of_Day_Normalized != nullptr)
		*Zero_1_Time_of_Day_Normalized = Parms.Zero_1_Time_of_Day_Normalized;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Get Month
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EMonth                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EMonth ABP_VerraWorld_GlobalSky_C::Get_Month()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Get Month");

	Params::BP_VerraWorld_GlobalSky_C_Get_Month Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Get World Sample Locaiton and Biome Update
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Get_World_Sample_Locaiton_and_Biome_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Get World Sample Locaiton and Biome Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GetMaxPrecip
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EBiomeType                              Biome                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxTemp                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::GetMaxPrecip(EBiomeType Biome, double* MaxTemp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "GetMaxPrecip");

	Params::BP_VerraWorld_GlobalSky_C_GetMaxPrecip Parms{};

	Parms.Biome = Biome;

	UObject::ProcessEvent(Func, &Parms);

	if (MaxTemp != nullptr)
		*MaxTemp = Parms.MaxTemp;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GetWeatherType
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EWeatherType                            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

EWeatherType ABP_VerraWorld_GlobalSky_C::GetWeatherType(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "GetWeatherType");

	Params::BP_VerraWorld_GlobalSky_C_GetWeatherType Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GlobalSkyEditorTick
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::GlobalSkyEditorTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "GlobalSkyEditorTick");

	Params::BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Height Based Fog Update
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Height_Based_Fog_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Height Based Fog Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initalize BiomeManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Returned_Correct_Biome                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Initalize_BiomeManager(bool* Returned_Correct_Biome)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initalize BiomeManager");

	Params::BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Returned_Correct_Biome != nullptr)
		*Returned_Correct_Biome = Parms.Returned_Correct_Biome;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initalize First Blend
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Initalize_First_Blend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initalize First Blend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initalize Player LOC
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Initalize_Player_LOC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initalize Player LOC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initialize Global Atmosphere
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sun_is_in_the_RIght_Spot                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Initialize_Global_Atmosphere(bool* Sun_is_in_the_RIght_Spot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initialize Global Atmosphere");

	Params::BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sun_is_in_the_RIght_Spot != nullptr)
		*Sun_is_in_the_RIght_Spot = Parms.Sun_is_in_the_RIght_Spot;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initialize PPV
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Initialize_PPV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initialize PPV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initialize Weather
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Initialize_Weather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Initialize Weather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Lerp 4Vector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector4                         in_Vector_A                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector4                         in_Vector_B                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector4                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector4 ABP_VerraWorld_GlobalSky_C::Lerp_4Vector(const struct FVector4& in_Vector_A, const struct FVector4& in_Vector_B, double ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Lerp 4Vector");

	Params::BP_VerraWorld_GlobalSky_C_Lerp_4Vector Parms{};

	Parms.in_Vector_A = std::move(in_Vector_A);
	Parms.in_Vector_B = std::move(in_Vector_B);
	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Lerp Color Grade Per Range
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FColorGradePerRangeSettings      ColorGradePerRangeSettings_A                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// struct FColorGradePerRangeSettings      ColorGradePerRangeSettings_B                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FColorGradePerRangeSettings      StructOut                                              (Parm, OutParm, NoDestructor)

void ABP_VerraWorld_GlobalSky_C::Lerp_Color_Grade_Per_Range(const struct FColorGradePerRangeSettings& ColorGradePerRangeSettings_A, const struct FColorGradePerRangeSettings& ColorGradePerRangeSettings_B, double ALPHA, struct FColorGradePerRangeSettings* StructOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Lerp Color Grade Per Range");

	Params::BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range Parms{};

	Parms.ColorGradePerRangeSettings_A = std::move(ColorGradePerRangeSettings_A);
	Parms.ColorGradePerRangeSettings_B = std::move(ColorGradePerRangeSettings_B);
	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);

	if (StructOut != nullptr)
		*StructOut = std::move(Parms.StructOut);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Manage BP_LocalFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Manage_BP_LocalFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Manage BP_LocalFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Neutral Env
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Neutral_Env(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Neutral Env");

	Params::BP_VerraWorld_GlobalSky_C_Neutral_Env Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.On Scalability Changed
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::On_Scalability_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "On Scalability Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.OnInteriorAmountUpdated_Event
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::OnInteriorAmountUpdated_Event(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "OnInteriorAmountUpdated_Event");

	Params::BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Post Process Blend Day Night
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Post_Process_Blend_Day_Night(double ALPHA, double* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Post Process Blend Day Night");

	Params::BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.PostProcessBlendDayNightNative
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_VerraWorld_GlobalSky_C::PostProcessBlendDayNightNative(float ALPHA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "PostProcessBlendDayNightNative");

	Params::BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.PreThrottleTick
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::PreThrottleTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "PreThrottleTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ReceiveParticleData
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FBasicParticleData>       Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UNiagaraSystem*                   NiagaraSystem                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SimulationPositionOffset                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ReceiveParticleData");

	Params::BP_VerraWorld_GlobalSky_C_ReceiveParticleData Parms{};

	Parms.Data = std::move(Data);
	Parms.NiagaraSystem = NiagaraSystem;
	Parms.SimulationPositionOffset = std::move(SimulationPositionOffset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ReceiveTick");

	Params::BP_VerraWorld_GlobalSky_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Refresh
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Refresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Refresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Register InfoWaterRender
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_WaterInfoRenderer_C*          Ref                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Register_InfoWaterRender(class ABP_WaterInfoRenderer_C* Ref)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Register InfoWaterRender");

	Params::BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender Parms{};

	Parms.Ref = Ref;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Set Final Outputs
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Current_Temp                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Precipitation_Amount                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Normalized_Temperature                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Final_Humidity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Set_Final_Outputs(double Current_Temp, double Precipitation_Amount, double Normalized_Temperature, double Final_Humidity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Set Final Outputs");

	Params::BP_VerraWorld_GlobalSky_C_Set_Final_Outputs Parms{};

	Parms.Current_Temp = Current_Temp;
	Parms.Precipitation_Amount = Precipitation_Amount;
	Parms.Normalized_Temperature = Normalized_Temperature;
	Parms.Final_Humidity = Final_Humidity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetAudioInEditor
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetAudioInEditor(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetAudioInEditor");

	Params::BP_VerraWorld_GlobalSky_C_SetAudioInEditor Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetChanceOfRain
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ChanceOfPrecipitation                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetChanceOfRain(float ChanceOfPrecipitation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetChanceOfRain");

	Params::BP_VerraWorld_GlobalSky_C_SetChanceOfRain Parms{};

	Parms.ChanceOfPrecipitation = ChanceOfPrecipitation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameDay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TimeOfDay24h                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetGameDay(float TimeOfDay24h)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetGameDay");

	Params::BP_VerraWorld_GlobalSky_C_SetGameDay Parms{};

	Parms.TimeOfDay24h = TimeOfDay24h;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameTime
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  InGameTimeSeconds                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetGameTime(double InGameTimeSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetGameTime");

	Params::BP_VerraWorld_GlobalSky_C_SetGameTime Parms{};

	Parms.InGameTimeSeconds = InGameTimeSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameYear
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   GameTimeNormalized                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetGameYear(float GameTimeNormalized)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetGameYear");

	Params::BP_VerraWorld_GlobalSky_C_SetGameYear Parms{};

	Parms.GameTimeNormalized = GameTimeNormalized;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetHumidity
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Humidity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetHumidity(float Humidity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetHumidity");

	Params::BP_VerraWorld_GlobalSky_C_SetHumidity Parms{};

	Parms.Humidity = Humidity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetPrecipitation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Precipitation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetPrecipitation(float Precipitation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetPrecipitation");

	Params::BP_VerraWorld_GlobalSky_C_SetPrecipitation Parms{};

	Parms.Precipitation = Precipitation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetServerIsAuth
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEnbabled                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetServerIsAuth(bool bIsEnbabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetServerIsAuth");

	Params::BP_VerraWorld_GlobalSky_C_SetServerIsAuth Parms{};

	Parms.bIsEnbabled = bIsEnbabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetTemperature
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Temperature                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetTemperature(float Temperature)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetTemperature");

	Params::BP_VerraWorld_GlobalSky_C_SetTemperature Parms{};

	Parms.Temperature = Temperature;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetUseLuts
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsEnabled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetUseLuts(bool bIsEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetUseLuts");

	Params::BP_VerraWorld_GlobalSky_C_SetUseLuts Parms{};

	Parms.bIsEnabled = bIsEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetWindDirection
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WindDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetWindDirection(float WindDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetWindDirection");

	Params::BP_VerraWorld_GlobalSky_C_SetWindDirection Parms{};

	Parms.WindDirection = WindDirection;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetWindSpeed
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   WindSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::SetWindSpeed(float WindSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SetWindSpeed");

	Params::BP_VerraWorld_GlobalSky_C_SetWindSpeed Parms{};

	Parms.WindSpeed = WindSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SpawnLightning
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::SpawnLightning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "SpawnLightning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Sun Positions Function
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Sun_Positions_Function()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Sun Positions Function");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.TEST_LightningRT
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::TEST_LightningRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "TEST_LightningRT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Toggle Volumetric Clouds 2
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Toggle_Volumetric_Clouds_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Toggle Volumetric Clouds 2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ToggleVolumetricClouds
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::ToggleVolumetricClouds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "ToggleVolumetricClouds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Audio
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Update_Audio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update Audio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Cloud Blend
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ALPHA                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVerraGlobalSkyVolumetricCloudSettingsReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor)
// double                                  ReturnValue1                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVerraGlobalSkyVolumetricCloudSettings ABP_VerraWorld_GlobalSky_C::Update_Cloud_Blend(float ALPHA, double* ReturnValue1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update Cloud Blend");

	Params::BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend Parms{};

	Parms.ALPHA = ALPHA;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnValue1 != nullptr)
		*ReturnValue1 = Parms.ReturnValue1;

	return Parms.ReturnValue;
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Global Atmosphere Settings
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Update_Global_Atmosphere_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update Global Atmosphere Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update MPC
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Update_MPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update MPC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Weather
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Update_Weather()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update Weather");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Wind
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::Update_Wind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Update Wind");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.UpdateClouds
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::UpdateClouds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "UpdateClouds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.UpdateDirectionalLights
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::UpdateDirectionalLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "UpdateDirectionalLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.WeatherRT
// (BlueprintCallable, BlueprintEvent)

void ABP_VerraWorld_GlobalSky_C::WeatherRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "WeatherRT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.WeatherTransition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Transition                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::WeatherTransition(double Transition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "WeatherTransition");

	Params::BP_VerraWorld_GlobalSky_C_WeatherTransition Parms{};

	Parms.Transition = Transition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Wind Override
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  WindSpeedFromRT_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Output_Get                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VerraWorld_GlobalSky_C::Wind_Override(double WindSpeedFromRT_0, double* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VerraWorld_GlobalSky_C", "Wind Override");

	Params::BP_VerraWorld_GlobalSky_C_Wind_Override Parms{};

	Parms.WindSpeedFromRT_0 = WindSpeedFromRT_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = Parms.Output_Get;
}

}

