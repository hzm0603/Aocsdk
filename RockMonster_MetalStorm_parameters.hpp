#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RockMonster_MetalStorm

#include "Basic.hpp"


namespace SDK::Params
{

// Function RockMonster_MetalStorm.RockMonster_MetalStorm_C.ExecuteUbergraph_RockMonster_MetalStorm
// 0x0010 (0x0010 - 0x0000)
struct RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm) == 0x000004, "Wrong alignment on RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm");
static_assert(sizeof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm) == 0x000010, "Wrong size on RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm");
static_assert(offsetof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm, EntryPoint) == 0x000000, "Member 'RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm::EntryPoint' has a wrong offset!");
static_assert(offsetof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'RockMonster_MetalStorm_C_ExecuteUbergraph_RockMonster_MetalStorm::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function RockMonster_MetalStorm.RockMonster_MetalStorm_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct RockMonster_MetalStorm_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RockMonster_MetalStorm_C_ReceiveTick) == 0x000004, "Wrong alignment on RockMonster_MetalStorm_C_ReceiveTick");
static_assert(sizeof(RockMonster_MetalStorm_C_ReceiveTick) == 0x000004, "Wrong size on RockMonster_MetalStorm_C_ReceiveTick");
static_assert(offsetof(RockMonster_MetalStorm_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'RockMonster_MetalStorm_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

