#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Trebuchet_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PC_Trebuchet_AnimBP_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass PC_Trebuchet_AnimBP.PC_Trebuchet_AnimBP_C
// 0x1210 (0x22F0 - 0x10E0)
class UPC_Trebuchet_AnimBP_C : public UAoCAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x10E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct PC_Trebuchet_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;          // 0x10E8(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x10F8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x1100(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1108(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x1128(0x00F0)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1218(0x00F0)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x1308(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x1350(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1378(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x13A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x13C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x13F0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x1418(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1440(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x1460(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x14A8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x14C8(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x14F0(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1510(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1530(0x00C8)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x15F8(0x0070)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x1668(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x16E8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x1710(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1738(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1780(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x1800(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x1828(0x0028)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x1850(0x0280)()
	struct FAnimNode_HandIKRetargeting            AnimGraphNode_HandIKRetargeting;                   // 0x1AD0(0x0120)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1BF0(0x0280)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x1E70(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x1E90(0x0020)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1EB0(0x0048)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x1EF8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1F18(0x0080)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x1F98(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x1FB8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1FE0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2008(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x2088(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x20B0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x20D8(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x2200(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x2220(0x0020)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x2240(0x0048)()
	double                                        Direction;                                         // 0x2288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x2290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Velocity;                                          // 0x2298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESiegeWeaponState                             CurrentState;                                      // 0x22A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A1[0x7];                                     // 0x22A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Hand_Favoring;                                     // 0x22A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_IKWeight;                                     // 0x22B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ik_hand_l_effector;                                // 0x22B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ik_hand_r_effector;                                // 0x22D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FireCommand;                                       // 0x22E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_Start();
	void AnimNotify_Stop();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_BlendListByBool_38FD0AE94FDC0627D02DF7904481AB61();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_TransitionResult_0CE15D7F47C55F32FE51E7B7CD9AE054();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_TransitionResult_4972B8FA4A40E468B172BDA8CCD228D7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_TransitionResult_740CF7784ACA3AC17811D3AACCCE15CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_TransitionResult_7520A04244A9D4A920B78F831209346C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_PC_Trebuchet_AnimBP_AnimGraphNode_TransitionResult_B4C1EB6844DC396661B44796EA13B96B();
	void ExecuteUbergraph_PC_Trebuchet_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PC_Trebuchet_AnimBP_C">();
	}
	static class UPC_Trebuchet_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPC_Trebuchet_AnimBP_C>();
	}
};
static_assert(alignof(UPC_Trebuchet_AnimBP_C) == 0x000010, "Wrong alignment on UPC_Trebuchet_AnimBP_C");
static_assert(sizeof(UPC_Trebuchet_AnimBP_C) == 0x0022F0, "Wrong size on UPC_Trebuchet_AnimBP_C");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, UberGraphFrame) == 0x0010E0, "Member 'UPC_Trebuchet_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, __AnimBlueprintMutables) == 0x0010E8, "Member 'UPC_Trebuchet_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0010F8, "Member 'UPC_Trebuchet_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimBlueprintExtension_Base) == 0x001100, "Member 'UPC_Trebuchet_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_Root) == 0x001108, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x001128, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x001218, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x001308, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x001350, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x001378, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x0013A0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0013C8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0013F0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x001418, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_StateResult_3) == 0x001440, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x001460, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_StateResult_2) == 0x0014A8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x0014C8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_StateResult_1) == 0x0014F0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_StateResult) == 0x001510, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_StateMachine) == 0x001530, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x0015F8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SaveCachedPose_3) == 0x001668, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x0016E8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x001710, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001738, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x001780, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x001800, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x001828, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TwoBoneIK_1) == 0x001850, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_HandIKRetargeting) == 0x001AD0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_HandIKRetargeting' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_TwoBoneIK) == 0x001BF0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_LocalToComponentSpace_2) == 0x001E70, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x001E90, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x001EB0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x001EF8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x001F18, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x001F98, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x001FB8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x001FE0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x002008, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x002088, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x0020B0, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_ModifyBone) == 0x0020D8, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x002200, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x002220, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x002240, "Member 'UPC_Trebuchet_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, Direction) == 0x002288, "Member 'UPC_Trebuchet_AnimBP_C::Direction' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, Speed) == 0x002290, "Member 'UPC_Trebuchet_AnimBP_C::Speed' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, Velocity) == 0x002298, "Member 'UPC_Trebuchet_AnimBP_C::Velocity' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, CurrentState) == 0x0022A0, "Member 'UPC_Trebuchet_AnimBP_C::CurrentState' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, Hand_Favoring) == 0x0022A8, "Member 'UPC_Trebuchet_AnimBP_C::Hand_Favoring' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, Hand_IKWeight) == 0x0022B0, "Member 'UPC_Trebuchet_AnimBP_C::Hand_IKWeight' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, ik_hand_l_effector) == 0x0022B8, "Member 'UPC_Trebuchet_AnimBP_C::ik_hand_l_effector' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, ik_hand_r_effector) == 0x0022D0, "Member 'UPC_Trebuchet_AnimBP_C::ik_hand_r_effector' has a wrong offset!");
static_assert(offsetof(UPC_Trebuchet_AnimBP_C, FireCommand) == 0x0022E8, "Member 'UPC_Trebuchet_AnimBP_C::FireCommand' has a wrong offset!");

}

