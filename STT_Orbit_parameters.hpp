#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Orbit

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STT_Orbit.STT_Orbit_C.AdjustDirectionByNav
// 0x0170 (0x0170 - 0x0000)
struct STT_Orbit_C_AdjustDirectionByNav final
{
public:
	struct FVector                                Original_Direction;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Length;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedDirection;                                 // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Projected_Location;                                // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetNavAgentLocation_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_AdjustDirectionByNav) == 0x000008, "Wrong alignment on STT_Orbit_C_AdjustDirectionByNav");
static_assert(sizeof(STT_Orbit_C_AdjustDirectionByNav) == 0x000170, "Wrong size on STT_Orbit_C_AdjustDirectionByNav");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, Original_Direction) == 0x000000, "Member 'STT_Orbit_C_AdjustDirectionByNav::Original_Direction' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, Length) == 0x000018, "Member 'STT_Orbit_C_AdjustDirectionByNav::Length' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, AdjustedDirection) == 0x000020, "Member 'STT_Orbit_C_AdjustDirectionByNav::AdjustedDirection' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, Valid) == 0x000038, "Member 'STT_Orbit_C_AdjustDirectionByNav::Valid' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, Projected_Location) == 0x000040, "Member 'STT_Orbit_C_AdjustDirectionByNav::Projected_Location' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000070, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000A0, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_GetActorOfClass_ReturnValue) == 0x0000B8, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C0, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_GetNavAgentLocation_ReturnValue) == 0x0000D8, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_GetNavAgentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000108, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000120, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000128, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_BreakVector_X) == 0x000140, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_BreakVector_Y) == 0x000148, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_BreakVector_Z) == 0x000150, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_AdjustDirectionByNav, CallFunc_MakeVector_ReturnValue_1) == 0x000158, "Member 'STT_Orbit_C_AdjustDirectionByNav::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.CheckOrbitDirection
// 0x0150 (0x0150 - 0x0000)
struct STT_Orbit_C_CheckOrbitDirection final
{
public:
	struct FVector                                NewDestination;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Orbit_Pivot_0;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Clockwise_0;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Character_Closest_Nav_Location_Location; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_CheckOrbitDirection) == 0x000008, "Wrong alignment on STT_Orbit_C_CheckOrbitDirection");
static_assert(sizeof(STT_Orbit_C_CheckOrbitDirection) == 0x000150, "Wrong size on STT_Orbit_C_CheckOrbitDirection");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, NewDestination) == 0x000000, "Member 'STT_Orbit_C_CheckOrbitDirection::NewDestination' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, Orbit_Pivot_0) == 0x000018, "Member 'STT_Orbit_C_CheckOrbitDirection::Orbit_Pivot_0' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, Clockwise_0) == 0x000030, "Member 'STT_Orbit_C_CheckOrbitDirection::Clockwise_0' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Get_Character_Closest_Nav_Location_Location) == 0x000038, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Get_Character_Closest_Nav_Location_Location' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000080, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_X) == 0x000098, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_X_1) == 0x0000B0, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_Y_1) == 0x0000B8, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_BreakVector_Z_1) == 0x0000C0, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_MakeVector_ReturnValue_1) == 0x0000E0, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Normal_ReturnValue) == 0x0000F8, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_RotateAngleAxis_ReturnValue) == 0x000110, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Normal_ReturnValue_1) == 0x000128, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Dot_VectorVector_ReturnValue) == 0x000140, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_CheckOrbitDirection, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000148, "Member 'STT_Orbit_C_CheckOrbitDirection::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.ExecuteUbergraph_STT_Orbit
// 0x0890 (0x0890 - 0x0000)
struct STT_Orbit_C_ExecuteUbergraph_STT_Orbit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ANPCCharacter*                          K2Node_DynamicCast_AsNPCCharacter;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         K2Node_DynamicCast_AsBase_Character;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPCCharacter*                          K2Node_DynamicCast_AsNPCCharacter_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18B[0x1];                                      // 0x018B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AdjustDirectionByNav_AdjustedDirection;   // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdjustDirectionByNav_Valid;               // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_AdjustDirectionByNav_Projected_Location;  // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_AdjustDirectionByNav_AdjustedDirection_1; // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AdjustDirectionByNav_Valid_1;             // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_AdjustDirectionByNav_Projected_Location_1; // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOrbitDirection_Clockwise;            // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckOrbitDirection_Clockwise_1;          // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue_1;        // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition_1;                         // 0x03BC(0x002E)(ConstParm, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EB[0x5];                                      // 0x03EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FExprValue                             CallFunc_EvaluateExpression_Source_ReturnValue;    // 0x03F8(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateExpression_Source_ReturnValue_1;  // 0x04C0(0x00C8)()
	class ABaseCharacter*                         CallFunc_FindCharacter_ReturnValue;                // 0x0588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0592(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_593[0x5];                                      // 0x0593(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue;           // 0x0598(0x00C8)()
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x0660(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_68E[0x2];                                      // 0x068E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_Source_ReturnValue_2;  // 0x06A0(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateExpression_Source_ReturnValue_3;  // 0x0768(0x00C8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetRealMoveAngle_Real_Move_Angle;         // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_844[0x4];                                      // 0x0844(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_DeltaTime_ImplicitCast;         // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2;   // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1;    // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalSpeed_ImplicitCast;     // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit) == 0x000008, "Wrong alignment on STT_Orbit_C_ExecuteUbergraph_STT_Orbit");
static_assert(sizeof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit) == 0x000890, "Wrong size on STT_Orbit_C_ExecuteUbergraph_STT_Orbit");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, EntryPoint) == 0x000000, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_AsNPCCharacter) == 0x000010, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_AsNPCCharacter' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_AsBase_Character) == 0x000020, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeLiteralByte_ReturnValue) == 0x000029, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00002A, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000030, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Conv_IntToByte_ReturnValue) == 0x000034, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000035, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_Event_DeltaTime) == 0x000038, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_AsNPCCharacter_1) == 0x000040, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_AsNPCCharacter_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000068, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_X) == 0x000070, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Y) == 0x000078, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Z) == 0x000080, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeVector_ReturnValue) == 0x000090, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BooleanAND_ReturnValue) == 0x0000E9, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BooleanOR_ReturnValue) == 0x0000EA, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000EB, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BooleanAND_ReturnValue_1) == 0x0000EC, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BooleanOR_ReturnValue_1) == 0x0000ED, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000F8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000110, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Normal_ReturnValue) == 0x000120, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_SwitchEnum_CmpSuccess) == 0x000138, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakRotator_Roll) == 0x00013C, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakRotator_Pitch) == 0x000140, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakRotator_Yaw) == 0x000144, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000148, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000160, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000168, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Normal_ReturnValue_1) == 0x000170, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000188, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000189, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BooleanAND_ReturnValue_2) == 0x00018A, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x00018C, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000190, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_IsValid_ReturnValue) == 0x000198, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_IsValid_ReturnValue_1) == 0x000199, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0001A0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001B8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Y_1) == 0x0001D8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Z_1) == 0x0001E0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001E8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeVector_ReturnValue_1) == 0x000200, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_X_2) == 0x000218, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Y_2) == 0x000220, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Z_2) == 0x000228, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_RotateAngleAxis_ReturnValue) == 0x000230, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeVector_ReturnValue_2) == 0x000248, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000260, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000278, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_X_3) == 0x000290, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Y_3) == 0x000298, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Z_3) == 0x0002A0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_X_4) == 0x0002A8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Y_4) == 0x0002B0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_BreakVector_Z_4) == 0x0002B8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0002C0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeVector_ReturnValue_3) == 0x0002C8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_MakeVector_ReturnValue_4) == 0x0002E0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_VSize_ReturnValue) == 0x0002F8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Vector_Distance_ReturnValue) == 0x000300, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000308, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000310, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000318, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000320, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_DegAcos_ReturnValue) == 0x000328, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000330, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000338, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000340, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_AdjustedDirection) == 0x000348, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_AdjustedDirection' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_Valid) == 0x000360, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_Valid' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_Projected_Location) == 0x000368, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_Projected_Location' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_AdjustedDirection_1) == 0x000380, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_AdjustedDirection_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_Valid_1) == 0x000398, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_Valid_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_AdjustDirectionByNav_Projected_Location_1) == 0x0003A0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_AdjustDirectionByNav_Projected_Location_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_CheckOrbitDirection_Clockwise) == 0x0003B8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_CheckOrbitDirection_Clockwise' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_CheckOrbitDirection_Clockwise_1) == 0x0003B9, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_CheckOrbitDirection_Clockwise_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x0003BA, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EqualEqual_BoolBool_ReturnValue_1) == 0x0003BB, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EqualEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_Event_Transition_1) == 0x0003BC, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_Event_Transition_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003EA, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0003F0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EvaluateExpression_Source_ReturnValue) == 0x0003F8, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EvaluateExpression_Source_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EvaluateExpression_Source_ReturnValue_1) == 0x0004C0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EvaluateExpression_Source_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_FindCharacter_ReturnValue) == 0x000588, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_FindCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000590, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_IsValid_ReturnValue_2) == 0x000591, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_IsValid_ReturnValue_3) == 0x000592, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EvaluateExpression_ReturnValue) == 0x000598, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EvaluateExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_Event_Transition) == 0x000660, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000690, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_SwitchEnum_CmpSuccess_2) == 0x000698, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EvaluateExpression_Source_ReturnValue_2) == 0x0006A0, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EvaluateExpression_Source_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EvaluateExpression_Source_ReturnValue_3) == 0x000768, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EvaluateExpression_Source_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000830, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_GetRealMoveAngle_Real_Move_Angle) == 0x000838, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_GetRealMoveAngle_Real_Move_Angle' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000840, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_VariableSet_DeltaTime_ImplicitCast) == 0x000848, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_VariableSet_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000850, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000858, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000860, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000868, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000870, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2) == 0x000878, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000880, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1) == 0x000884, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_ExecuteUbergraph_STT_Orbit, K2Node_VariableSet_OriginalSpeed_ImplicitCast) == 0x000888, "Member 'STT_Orbit_C_ExecuteUbergraph_STT_Orbit::K2Node_VariableSet_OriginalSpeed_ImplicitCast' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.Get Character Closest Nav Location
// 0x0078 (0x0078 - 0x0000)
struct STT_Orbit_C_Get_Character_Closest_Nav_Location final
{
public:
	class ABaseCharacter*                         Agent_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetNavAgentLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ARecastNavMesh*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_Get_Character_Closest_Nav_Location) == 0x000008, "Wrong alignment on STT_Orbit_C_Get_Character_Closest_Nav_Location");
static_assert(sizeof(STT_Orbit_C_Get_Character_Closest_Nav_Location) == 0x000078, "Wrong size on STT_Orbit_C_Get_Character_Closest_Nav_Location");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, Agent_0) == 0x000000, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::Agent_0' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, Location) == 0x000008, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::Location' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, CallFunc_GetNavAgentLocation_ReturnValue) == 0x000038, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::CallFunc_GetNavAgentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, CallFunc_GetActorOfClass_ReturnValue) == 0x000050, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000058, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_Get_Character_Closest_Nav_Location, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x000070, "Member 'STT_Orbit_C_Get_Character_Closest_Nav_Location::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.GetRealMoveAngle
// 0x0078 (0x0078 - 0x0000)
struct STT_Orbit_C_GetRealMoveAngle final
{
public:
	double                                        Target_Angle;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Delta_Time;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Move_Angle;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_GetRealMoveAngle) == 0x000008, "Wrong alignment on STT_Orbit_C_GetRealMoveAngle");
static_assert(sizeof(STT_Orbit_C_GetRealMoveAngle) == 0x000078, "Wrong size on STT_Orbit_C_GetRealMoveAngle");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, Target_Angle) == 0x000000, "Member 'STT_Orbit_C_GetRealMoveAngle::Target_Angle' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, Delta_Time) == 0x000008, "Member 'STT_Orbit_C_GetRealMoveAngle::Delta_Time' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, Real_Move_Angle) == 0x000010, "Member 'STT_Orbit_C_GetRealMoveAngle::Real_Move_Angle' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000070, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_GetRealMoveAngle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000071, "Member 'STT_Orbit_C_GetRealMoveAngle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.ReceiveExitState
// 0x002E (0x002E - 0x0000)
struct STT_Orbit_C_ReceiveExitState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Orbit_C_ReceiveExitState) == 0x000002, "Wrong alignment on STT_Orbit_C_ReceiveExitState");
static_assert(sizeof(STT_Orbit_C_ReceiveExitState) == 0x00002E, "Wrong size on STT_Orbit_C_ReceiveExitState");
static_assert(offsetof(STT_Orbit_C_ReceiveExitState, Transition) == 0x000000, "Member 'STT_Orbit_C_ReceiveExitState::Transition' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_Orbit_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Orbit_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_Orbit_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_Orbit_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_Orbit_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_Orbit_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_Orbit_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_Orbit_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime_0;                                       // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_Orbit_C_ReceiveLatentTick");
static_assert(sizeof(STT_Orbit_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_Orbit_C_ReceiveLatentTick");
static_assert(offsetof(STT_Orbit_C_ReceiveLatentTick, DeltaTime_0) == 0x000000, "Member 'STT_Orbit_C_ReceiveLatentTick::DeltaTime_0' has a wrong offset!");

// Function STT_Orbit.STT_Orbit_C.RotateToTarget
// 0x0190 (0x0190 - 0x0000)
struct STT_Orbit_C_RotateToTarget final
{
public:
	struct FVector                                TargetVec;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        YawDelta;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RealYawDelta;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawDiff;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Orbit_C_RotateToTarget) == 0x000008, "Wrong alignment on STT_Orbit_C_RotateToTarget");
static_assert(sizeof(STT_Orbit_C_RotateToTarget) == 0x000190, "Wrong size on STT_Orbit_C_RotateToTarget");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, TargetVec) == 0x000000, "Member 'STT_Orbit_C_RotateToTarget::TargetVec' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, Source) == 0x000018, "Member 'STT_Orbit_C_RotateToTarget::Source' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, YawDelta) == 0x000020, "Member 'STT_Orbit_C_RotateToTarget::YawDelta' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, RealYawDelta) == 0x000028, "Member 'STT_Orbit_C_RotateToTarget::RealYawDelta' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, YawDiff) == 0x000030, "Member 'STT_Orbit_C_RotateToTarget::YawDiff' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000090, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakVector_X) == 0x0000A8, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Roll_1) == 0x0000C0, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Pitch_1) == 0x0000C4, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Yaw_1) == 0x0000C8, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_MakeRotFromX_ReturnValue) == 0x0000E8, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Roll_2) == 0x000108, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Pitch_2) == 0x00010C, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_BreakRotator_Yaw_2) == 0x000110, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000138, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Abs_ReturnValue) == 0x000148, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_FMax_ReturnValue) == 0x000160, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_FMin_ReturnValue) == 0x000168, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000170, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000180, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Orbit_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'STT_Orbit_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

