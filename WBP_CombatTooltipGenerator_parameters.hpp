#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CombatTooltipGenerator

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "Engine_structs.hpp"
#include "DesignDataPlugin_structs.hpp"


namespace SDK::Params
{

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.RecurseFindRecord
// 0x3E028 (0x3E028 - 0x0000)
struct WBP_CombatTooltipGenerator_C_RecurseFindRecord final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FAoCAbilityRecord                      AbilityRecord;                                     // 0x0010(0x1020)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FAbilityHitRecord                      HitRecord;                                         // 0x1030(0x0A30)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEffectRecord                          EffectRecord;                                      // 0x1A60(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FStatModRecord                         StatModRecord;                                     // 0x21E8(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FLingeringEffectRecord                 LingeringEffectRecord;                             // 0x22F8(0x03B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FProjectileRecord                      ProjectileRecord;                                  // 0x26B0(0x0460)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FReactionRecord                        ReactionRecord;                                    // 0x2B10(0x00C0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FAbilityHitRecord                      Hit;                                               // 0x2BD0(0x0A30)(Parm, OutParm)
	struct FEffectRecord                          Effect;                                            // 0x3600(0x0788)(Parm, OutParm)
	struct FStatModRecord                         StatMod;                                           // 0x3D88(0x0110)(Parm, OutParm)
	struct FLingeringEffectRecord                 LingeringEffect;                                   // 0x3E98(0x03B8)(Parm, OutParm)
	struct FProjectileRecord                      Projectile;                                        // 0x4250(0x0460)(Parm, OutParm)
	struct FReactionRecord                        reaction;                                          // 0x46B0(0x00C0)(Parm, OutParm)
	class FString                                 rest;                                              // 0x4770(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 argDelim;                                          // 0x4780(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 typeDelim;                                         // 0x4790(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Name_0;                                            // 0x47A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 argers;                                            // 0x47B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x47C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_1;        // 0x47C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_2;        // 0x47C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_3;        // 0x47C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_4;        // 0x47C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_5;        // 0x47C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_6;        // 0x47C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C7[0x1];                                     // 0x47C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDelimRest_left;                        // 0x47C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest;                        // 0x47D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FAbilityHitRecord                      K2Node_MakeStruct_AbilityHitRecord;                // 0x47E8(0x0A30)()
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x5218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x5228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5229[0x3];                                     // 0x5229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x522C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x5230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x5231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5232[0x6];                                     // 0x5232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue;           // 0x5238(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x5C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C69[0x7];                                     // 0x5C69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit;                    // 0x5C70(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect;                 // 0x66A0(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod;                // 0x6E28(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect;        // 0x6F38(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile;             // 0x72F0(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction;               // 0x7750(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x7810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x7811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7812[0x6];                                     // 0x7812(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x7818(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x7828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7829[0x3];                                     // 0x7829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x782C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x7830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7831[0x7];                                     // 0x7831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReactionRecord                        CallFunc_GetReactionRecordByGuid_ReturnValue;      // 0x7838(0x00C0)(ConstParm)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x78F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78F9[0x7];                                     // 0x78F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_1;                  // 0x7900(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_1;               // 0x8330(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_1;              // 0x8AB8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_1;      // 0x8BC8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_1;           // 0x8F80(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_1;             // 0x93E0(0x00C0)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x94A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_1;                  // 0x94A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x94A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x94A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94A4[0x4];                                     // 0x94A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDelimRest_left_1;                      // 0x94A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_1;                      // 0x94B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x94C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x94D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x94E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94E4[0x4];                                     // 0x94E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FReactionRecord                        CallFunc_GetReactionRecordByName_ReturnValue;      // 0x94E8(0x00C0)(ConstParm)
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_2;                  // 0x95A8(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_2;               // 0x9FD8(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_2;              // 0xA760(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_2;      // 0xA870(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_2;           // 0xAC28(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_2;             // 0xB088(0x00C0)()
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0xB148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B149[0x7];                                     // 0xB149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectRecord                          CallFunc_GetEffectRecordByGuid_ReturnValue;        // 0xB150(0x0788)(ConstParm)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0xB8D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_2;                  // 0xB8D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0xB8DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0xB8DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0xB8DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8DD[0x3];                                     // 0xB8DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_3;                    // 0xB8E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0xB8F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8F1[0x3];                                     // 0xB8F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_3;           // 0xB8F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0xB8F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0xB8F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8FA[0x6];                                     // 0xB8FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_1;         // 0xB900(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0xC330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C331[0x7];                                     // 0xC331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_3;                  // 0xC338(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_3;               // 0xCD68(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_3;              // 0xD4F0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_3;      // 0xD600(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_3;           // 0xD9B8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_3;             // 0xDE18(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_3;                  // 0xDED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0xDED9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DEDA[0x6];                                     // 0xDEDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_4;                    // 0xDEE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_8;                   // 0xDEF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DEF1[0x3];                                     // 0xDEF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_4;           // 0xDEF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_4;         // 0xDEF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_9;                   // 0xDEF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DEFA[0x6];                                     // 0xDEFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_2;         // 0xDF00(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0xE930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E931[0x7];                                     // 0xE931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_4;                  // 0xE938(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_4;               // 0xF368(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_4;              // 0xFAF0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_4;      // 0xFC00(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_4;           // 0xFFB8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_4;             // 0x10418(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_4;                  // 0x104D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x104D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104DA[0x6];                                    // 0x104DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_5;                    // 0x104E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_10;                  // 0x104F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104F1[0x3];                                    // 0x104F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_5;           // 0x104F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_5;         // 0x104F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_11;                  // 0x104F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104FA[0x6];                                    // 0x104FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_3;         // 0x10500(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x10F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F31[0x7];                                    // 0x10F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_5;                  // 0x10F38(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_5;               // 0x11968(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_5;              // 0x120F0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_5;      // 0x12200(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_5;           // 0x125B8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_5;             // 0x12A18(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_5;                  // 0x12AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x12AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12ADA[0x6];                                    // 0x12ADA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_6;                    // 0x12AE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_12;                  // 0x12AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AF1[0x3];                                    // 0x12AF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_6;           // 0x12AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_6;         // 0x12AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_13;                  // 0x12AF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12AFA[0x6];                                    // 0x12AFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_4;         // 0x12B00(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x13530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13531[0x7];                                    // 0x13531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_6;                  // 0x13538(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_6;               // 0x13F68(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_6;              // 0x146F0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_6;      // 0x14800(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_6;           // 0x14BB8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_6;             // 0x15018(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_6;                  // 0x150D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x150D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150DA[0x6];                                    // 0x150DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_7;                    // 0x150E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_14;                  // 0x150F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150F1[0x3];                                    // 0x150F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_7;           // 0x150F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_7;         // 0x150F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_15;                  // 0x150F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_150FA[0x6];                                    // 0x150FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_5;         // 0x15100(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x15B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15B31[0x7];                                    // 0x15B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_7;                  // 0x15B38(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_7;               // 0x16568(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_7;              // 0x16CF0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_7;      // 0x16E00(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_7;           // 0x171B8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_7;             // 0x17618(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_7;                  // 0x176D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x176D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176DA[0x6];                                    // 0x176DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_8;                    // 0x176E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_16;                  // 0x176F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176F1[0x3];                                    // 0x176F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_8;           // 0x176F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_8;         // 0x176F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_17;                  // 0x176F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176FA[0x6];                                    // 0x176FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_6;         // 0x17700(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x18130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18131[0x7];                                    // 0x18131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_8;                  // 0x18138(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_8;               // 0x18B68(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_8;              // 0x192F0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_8;      // 0x19400(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_8;           // 0x197B8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_8;             // 0x19C18(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_8;                  // 0x19CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x19CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19CDA[0x6];                                    // 0x19CDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_9;                    // 0x19CE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_18;                  // 0x19CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19CF1[0x3];                                    // 0x19CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_9;           // 0x19CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_9;         // 0x19CF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_19;                  // 0x19CF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19CFA[0x6];                                    // 0x19CFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectRecord                          CallFunc_GetEffectRecordByGuid_ReturnValue_1;      // 0x19D00(0x0788)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x1A488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_9;                  // 0x1A489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x1A48A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x1A48B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A48C[0x4];                                    // 0x1A48C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDelimRest_left_2;                      // 0x1A490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_2;                      // 0x1A4A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x1A4B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatModRecord                         CallFunc_GetStatModRecordByName_ReturnValue;       // 0x1A4B8(0x0110)(ConstParm)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x1A5C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5C9[0x7];                                    // 0x1A5C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_9;                  // 0x1A5D0(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_9;               // 0x1B000(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_9;              // 0x1B788(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_9;      // 0x1B898(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_9;           // 0x1BC50(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_9;             // 0x1C0B0(0x00C0)()
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_3;        // 0x1C170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_4;        // 0x1C171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C172[0x6];                                    // 0x1C172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDelimRest_left_3;                      // 0x1C178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_3;                      // 0x1C188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_left_4;                      // 0x1C198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_4;                      // 0x1C1A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x1C1B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x1C1C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProjectileRecord                      CallFunc_GetProjectileRecordByName_ReturnValue;    // 0x1C1C8(0x0460)(ConstParm)
	struct FLingeringEffectRecord                 CallFunc_GetLingeringEffectRecordByName_ReturnValue; // 0x1C628(0x03B8)(ConstParm)
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_10;                 // 0x1C9E0(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_10;              // 0x1D410(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_10;             // 0x1DB98(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_10;     // 0x1DCA8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_10;          // 0x1E060(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_10;            // 0x1E4C0(0x00C0)()
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_11;                 // 0x1E580(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_11;              // 0x1EFB0(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_11;             // 0x1F738(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_11;     // 0x1F848(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_11;          // 0x1FC00(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_11;            // 0x20060(0x00C0)()
	class FString                                 CallFunc_GetDelimRest_left_5;                      // 0x20120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_5;                      // 0x20130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_left_6;                      // 0x20140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDelimRest_rest_6;                      // 0x20150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x20160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x20168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEffectRecord                          CallFunc_GetEffectRecordByName_ReturnValue;        // 0x20170(0x0788)(ConstParm)
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByName_ReturnValue;           // 0x208F8(0x0A30)(ConstParm)
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_12;                 // 0x21328(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_12;              // 0x21D58(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_12;             // 0x224E0(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_12;     // 0x225F0(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_12;          // 0x229A8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_12;            // 0x22E08(0x00C0)()
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_13;                 // 0x22EC8(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_13;              // 0x238F8(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_13;             // 0x24080(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_13;     // 0x24190(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_13;          // 0x24548(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_13;            // 0x249A8(0x00C0)()
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_5;        // 0x24A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A69[0x7];                                    // 0x24A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_10;                   // 0x24A70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_10;          // 0x24A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_20;                  // 0x24A84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_10;        // 0x24A85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x24A86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_10;                 // 0x24A87(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x24A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24A89[0x7];                                    // 0x24A89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatModRecord                         CallFunc_GetStatModRecordByGuid_ReturnValue;       // 0x24A90(0x0110)(ConstParm)
	bool                                          CallFunc_Contains_ReturnValue_21;                  // 0x24BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BA1[0x7];                                    // 0x24BA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_11;                   // 0x24BA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_22;                  // 0x24BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BB9[0x3];                                    // 0x24BB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_11;          // 0x24BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_11;        // 0x24BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_23;                  // 0x24BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24BC2[0x6];                                    // 0x24BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_7;         // 0x24BC8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x255F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255F9[0x7];                                    // 0x255F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_14;                 // 0x25600(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_14;              // 0x26030(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_14;             // 0x267B8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_14;     // 0x268C8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_14;          // 0x26C80(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_14;            // 0x270E0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_11;                 // 0x271A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x271A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271A2[0x6];                                    // 0x271A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_12;                   // 0x271A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_24;                  // 0x271B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271B9[0x3];                                    // 0x271B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_12;          // 0x271BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_12;        // 0x271C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_25;                  // 0x271C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271C2[0x6];                                    // 0x271C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_8;         // 0x271C8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x27BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27BF9[0x7];                                    // 0x27BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_15;                 // 0x27C00(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_15;              // 0x28630(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_15;             // 0x28DB8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_15;     // 0x28EC8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_15;          // 0x29280(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_15;            // 0x296E0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_12;                 // 0x297A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x297A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297A2[0x6];                                    // 0x297A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_13;                   // 0x297A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_26;                  // 0x297B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297B9[0x3];                                    // 0x297B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_13;          // 0x297BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_13;        // 0x297C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_27;                  // 0x297C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_297C2[0x6];                                    // 0x297C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_9;         // 0x297C8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x2A1F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1F9[0x7];                                    // 0x2A1F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_16;                 // 0x2A200(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_16;              // 0x2AC30(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_16;             // 0x2B3B8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_16;     // 0x2B4C8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_16;          // 0x2B880(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_16;            // 0x2BCE0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_13;                 // 0x2BDA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x2BDA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDA2[0x6];                                    // 0x2BDA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_14;                   // 0x2BDA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_28;                  // 0x2BDB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDB9[0x3];                                    // 0x2BDB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_14;          // 0x2BDBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_14;        // 0x2BDC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_29;                  // 0x2BDC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BDC2[0x6];                                    // 0x2BDC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_10;        // 0x2BDC8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_14;               // 0x2C7F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C7F9[0x7];                                    // 0x2C7F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_17;                 // 0x2C800(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_17;              // 0x2D230(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_17;             // 0x2D9B8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_17;     // 0x2DAC8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_17;          // 0x2DE80(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_17;            // 0x2E2E0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_14;                 // 0x2E3A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x2E3A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3A2[0x6];                                    // 0x2E3A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_15;                   // 0x2E3A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_30;                  // 0x2E3B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3B9[0x3];                                    // 0x2E3B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_15;          // 0x2E3BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_15;        // 0x2E3C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_31;                  // 0x2E3C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3C2[0x6];                                    // 0x2E3C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_11;        // 0x2E3C8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_15;               // 0x2EDF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EDF9[0x7];                                    // 0x2EDF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_18;                 // 0x2EE00(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_18;              // 0x2F830(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_18;             // 0x2FFB8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_18;     // 0x300C8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_18;          // 0x30480(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_18;            // 0x308E0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_15;                 // 0x309A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x309A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309A2[0x6];                                    // 0x309A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_16;                   // 0x309A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_32;                  // 0x309B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309B9[0x3];                                    // 0x309B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_16;          // 0x309BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_16;        // 0x309C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_33;                  // 0x309C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309C2[0x6];                                    // 0x309C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_12;        // 0x309C8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_16;               // 0x313F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_313F9[0x7];                                    // 0x313F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_19;                 // 0x31400(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_19;              // 0x31E30(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_19;             // 0x325B8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_19;     // 0x326C8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_19;          // 0x32A80(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_19;            // 0x32EE0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_16;                 // 0x32FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x32FA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FA2[0x6];                                    // 0x32FA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_17;                   // 0x32FA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_34;                  // 0x32FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FB9[0x3];                                    // 0x32FB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_17;          // 0x32FBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_17;        // 0x32FC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_35;                  // 0x32FC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32FC2[0x6];                                    // 0x32FC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_13;        // 0x32FC8(0x0A30)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_17;               // 0x339F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339F9[0x7];                                    // 0x339F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_20;                 // 0x33A00(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_20;              // 0x34430(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_20;             // 0x34BB8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_20;     // 0x34CC8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_20;          // 0x35080(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_20;            // 0x354E0(0x00C0)()
	bool                                          CallFunc_IsNumeric_ReturnValue_17;                 // 0x355A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x355A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355A2[0x6];                                    // 0x355A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_18;                   // 0x355A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_36;                  // 0x355B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355B9[0x3];                                    // 0x355B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_18;          // 0x355BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_18;        // 0x355C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_37;                  // 0x355C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355C2[0x6];                                    // 0x355C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatModRecord                         CallFunc_GetStatModRecordByGuid_ReturnValue_1;     // 0x355C8(0x0110)(ConstParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue_18;               // 0x356D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_18;                 // 0x356D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x356DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_356DB[0x5];                                    // 0x356DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_19;                   // 0x356E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_20;                   // 0x356F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_19;          // 0x35700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_20;          // 0x35704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FProjectileId                          CallFunc_Map_Find_Value;                           // 0x35708(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x35720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35721[0x7];                                    // 0x35721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLingeringEffectId                     CallFunc_Map_Find_Value_1;                         // 0x35728(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x35740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35741[0x7];                                    // 0x35741(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLingeringEffectRecord                 CallFunc_GetLingeringEffectRecordByGuid_ReturnValue; // 0x35748(0x03B8)(ConstParm)
	struct FProjectileRecord                      CallFunc_GetProjectileRecordByGuid_ReturnValue;    // 0x35B00(0x0460)(ConstParm)
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_21;                 // 0x35F60(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_21;              // 0x36990(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_21;             // 0x37118(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_21;     // 0x37228(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_21;          // 0x375E0(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_21;            // 0x37A40(0x00C0)()
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_22;                 // 0x37B00(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_22;              // 0x38530(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_22;             // 0x38CB8(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_22;     // 0x38DC8(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_22;          // 0x39180(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_22;            // 0x395E0(0x00C0)()
	bool                                          CallFunc_Contains_ReturnValue_38;                  // 0x396A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_19;                 // 0x396A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_19;               // 0x396A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_39;                  // 0x396A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x396A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_20;               // 0x396A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_20;                 // 0x396A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_40;                  // 0x396A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x396A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_41;                  // 0x396A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396AA[0x6];                                    // 0x396AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue_21;                   // 0x396B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_42;                  // 0x396C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396C1[0x3];                                    // 0x396C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_21;          // 0x396C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEffectId                              CallFunc_Map_Find_Value_2;                         // 0x396C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x396E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_43;                  // 0x396E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_21;               // 0x396E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_21;                 // 0x396E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396E4[0x4];                                    // 0x396E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectRecord                          CallFunc_GetEffectRecordByGuid_ReturnValue_2;      // 0x396E8(0x0788)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x39E70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E71[0x7];                                    // 0x39E71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_23;                 // 0x39E78(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_23;              // 0x3A8A8(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_23;             // 0x3B030(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_23;     // 0x3B140(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_23;          // 0x3B4F8(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_23;            // 0x3B958(0x00C0)()
	class FString                                 CallFunc_Replace_ReturnValue_22;                   // 0x3BA18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_44;                  // 0x3BA28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA29[0x3];                                    // 0x3BA29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_22;          // 0x3BA2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAbilityHitId                          CallFunc_Map_Find_Value_3;                         // 0x3BA30(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x3BA48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_45;                  // 0x3BA49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_22;               // 0x3BA4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue_22;                 // 0x3BA4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA4C[0x4];                                    // 0x3BA4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_GetHitRecordByGuid_ReturnValue_14;        // 0x3BA50(0x0A30)(ConstParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x3C480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C481[0x7];                                    // 0x3C481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit_24;                 // 0x3C488(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect_24;              // 0x3CEB8(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod_24;             // 0x3D640(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect_24;     // 0x3D750(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile_24;          // 0x3DB08(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction_24;            // 0x3DF68(0x00C0)()
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_RecurseFindRecord) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_RecurseFindRecord");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_RecurseFindRecord) == 0x03E028, "Wrong size on WBP_CombatTooltipGenerator_C_RecurseFindRecord");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, Input) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::Input' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, AbilityRecord) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::AbilityRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, HitRecord) == 0x001030, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::HitRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, EffectRecord) == 0x001A60, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::EffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, StatModRecord) == 0x0021E8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::StatModRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, LingeringEffectRecord) == 0x0022F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::LingeringEffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, ProjectileRecord) == 0x0026B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::ProjectileRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, ReactionRecord) == 0x002B10, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::ReactionRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, Hit) == 0x002BD0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::Hit' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, Effect) == 0x003600, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::Effect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, StatMod) == 0x003D88, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::StatMod' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, LingeringEffect) == 0x003E98, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::LingeringEffect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, Projectile) == 0x004250, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::Projectile' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, reaction) == 0x0046B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::reaction' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, rest) == 0x004770, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::rest' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, argDelim) == 0x004780, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::argDelim' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, typeDelim) == 0x004790, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::typeDelim' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, Name_0) == 0x0047A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::Name_0' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, argers) == 0x0047B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::argers' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x0047C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_1) == 0x0047C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_2) == 0x0047C2, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_3) == 0x0047C3, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_4) == 0x0047C4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_5) == 0x0047C5, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_NotEqual_Int64Int64_ReturnValue_6) == 0x0047C6, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_NotEqual_Int64Int64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left) == 0x0047C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest) == 0x0047D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, K2Node_MakeStruct_AbilityHitRecord) == 0x0047E8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::K2Node_MakeStruct_AbilityHitRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue) == 0x005218, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue) == 0x005228, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue) == 0x00522C, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue) == 0x005230, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_1) == 0x005231, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue) == 0x005238, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue) == 0x005C68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit) == 0x005C70, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect) == 0x0066A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod) == 0x006E28, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect) == 0x006F38, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile) == 0x0072F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction) == 0x007750, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue) == 0x007810, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue) == 0x007811, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_1) == 0x007818, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_2) == 0x007828, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x00782C, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x007830, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetReactionRecordByGuid_ReturnValue) == 0x007838, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetReactionRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_3) == 0x0078F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_1) == 0x007900, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_1) == 0x008330, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_1) == 0x008AB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_1) == 0x008BC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_1) == 0x008F80, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_1) == 0x0093E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_1) == 0x0094A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_1) == 0x0094A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_1) == 0x0094A2, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0094A3, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_1) == 0x0094A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_1) == 0x0094B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_2) == 0x0094C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue) == 0x0094D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x0094E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetReactionRecordByName_ReturnValue) == 0x0094E8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetReactionRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_2) == 0x0095A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_2) == 0x009FD8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_2) == 0x00A760, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_2) == 0x00A870, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_2) == 0x00AC28, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_2) == 0x00B088, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x00B148, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetEffectRecordByGuid_ReturnValue) == 0x00B150, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetEffectRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_4) == 0x00B8D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_2) == 0x00B8D9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_2) == 0x00B8DA, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_5) == 0x00B8DB, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_2) == 0x00B8DC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_3) == 0x00B8E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_6) == 0x00B8F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_3) == 0x00B8F4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x00B8F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_7) == 0x00B8F9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_1) == 0x00B900, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_3) == 0x00C330, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_3) == 0x00C338, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_3) == 0x00CD68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_3) == 0x00D4F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_3) == 0x00D600, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_3) == 0x00D9B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_3) == 0x00DE18, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_3) == 0x00DED8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_3) == 0x00DED9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_4) == 0x00DEE0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_8) == 0x00DEF0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_4) == 0x00DEF4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_4) == 0x00DEF8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_9) == 0x00DEF9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_2) == 0x00DF00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_4) == 0x00E930, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_4) == 0x00E938, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_4) == 0x00F368, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_4) == 0x00FAF0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_4) == 0x00FC00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_4) == 0x00FFB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_4) == 0x010418, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_4) == 0x0104D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_4) == 0x0104D9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_5) == 0x0104E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_10) == 0x0104F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_5) == 0x0104F4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_5) == 0x0104F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_11) == 0x0104F9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_3) == 0x010500, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_5) == 0x010F30, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_5) == 0x010F38, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_5) == 0x011968, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_5) == 0x0120F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_5) == 0x012200, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_5) == 0x0125B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_5) == 0x012A18, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_5) == 0x012AD8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_5) == 0x012AD9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_6) == 0x012AE0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_12) == 0x012AF0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_6) == 0x012AF4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_6) == 0x012AF8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_13) == 0x012AF9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_4) == 0x012B00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_6) == 0x013530, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_6) == 0x013538, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_6) == 0x013F68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_6) == 0x0146F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_6) == 0x014800, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_6) == 0x014BB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_6) == 0x015018, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_6) == 0x0150D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_6) == 0x0150D9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_7) == 0x0150E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_14) == 0x0150F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_7) == 0x0150F4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_7) == 0x0150F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_15) == 0x0150F9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_5) == 0x015100, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_7) == 0x015B30, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_7) == 0x015B38, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_7) == 0x016568, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_7) == 0x016CF0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_7) == 0x016E00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_7) == 0x0171B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_7) == 0x017618, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_7) == 0x0176D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_7) == 0x0176D9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_8) == 0x0176E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_16) == 0x0176F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_8) == 0x0176F4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_8) == 0x0176F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_17) == 0x0176F9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_6) == 0x017700, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_8) == 0x018130, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_8) == 0x018138, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_8) == 0x018B68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_8) == 0x0192F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_8) == 0x019400, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_8) == 0x0197B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_8) == 0x019C18, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_8) == 0x019CD8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_8) == 0x019CD9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_9) == 0x019CE0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_18) == 0x019CF0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_9) == 0x019CF4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_9) == 0x019CF8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_19) == 0x019CF9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetEffectRecordByGuid_ReturnValue_1) == 0x019D00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetEffectRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_9) == 0x01A488, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_9) == 0x01A489, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_9) == 0x01A48A, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x01A48B, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_2) == 0x01A490, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_2) == 0x01A4A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue_1) == 0x01A4B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetStatModRecordByName_ReturnValue) == 0x01A4B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetStatModRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x01A5C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_9) == 0x01A5D0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_9) == 0x01B000, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_9) == 0x01B788, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_9) == 0x01B898, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_9) == 0x01BC50, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_9) == 0x01C0B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue_3) == 0x01C170, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue_4) == 0x01C171, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_3) == 0x01C178, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_3) == 0x01C188, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_4) == 0x01C198, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_4) == 0x01C1A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue_2) == 0x01C1B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue_3) == 0x01C1C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetProjectileRecordByName_ReturnValue) == 0x01C1C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetProjectileRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetLingeringEffectRecordByName_ReturnValue) == 0x01C628, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetLingeringEffectRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_10) == 0x01C9E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_10) == 0x01D410, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_10) == 0x01DB98, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_10) == 0x01DCA8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_10) == 0x01E060, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_10) == 0x01E4C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_11) == 0x01E580, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_11) == 0x01EFB0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_11) == 0x01F738, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_11) == 0x01F848, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_11) == 0x01FC00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_11) == 0x020060, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_5) == 0x020120, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_5) == 0x020130, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_left_6) == 0x020140, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_left_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetDelimRest_rest_6) == 0x020150, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetDelimRest_rest_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue_4) == 0x020160, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToName_ReturnValue_5) == 0x020168, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetEffectRecordByName_ReturnValue) == 0x020170, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetEffectRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByName_ReturnValue) == 0x0208F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_12) == 0x021328, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_12) == 0x021D58, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_12) == 0x0224E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_12) == 0x0225F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_12) == 0x0229A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_12) == 0x022E08, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_13) == 0x022EC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_13) == 0x0238F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_13) == 0x024080, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_13) == 0x024190, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_13) == 0x024548, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_13) == 0x0249A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_EqualEqual_StriStri_ReturnValue_5) == 0x024A68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_EqualEqual_StriStri_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_10) == 0x024A70, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_10) == 0x024A80, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_20) == 0x024A84, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_10) == 0x024A85, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_10) == 0x024A86, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_10) == 0x024A87, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_10) == 0x024A88, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetStatModRecordByGuid_ReturnValue) == 0x024A90, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetStatModRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_21) == 0x024BA0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_11) == 0x024BA8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_22) == 0x024BB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_11) == 0x024BBC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_11) == 0x024BC0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_23) == 0x024BC1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_7) == 0x024BC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_11) == 0x0255F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_14) == 0x025600, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_14) == 0x026030, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_14) == 0x0267B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_14) == 0x0268C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_14) == 0x026C80, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_14) == 0x0270E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_11) == 0x0271A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_11) == 0x0271A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_12) == 0x0271A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_24) == 0x0271B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_12) == 0x0271BC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_12) == 0x0271C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_25) == 0x0271C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_8) == 0x0271C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_12) == 0x027BF8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_15) == 0x027C00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_15) == 0x028630, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_15) == 0x028DB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_15) == 0x028EC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_15) == 0x029280, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_15) == 0x0296E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_12) == 0x0297A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_12) == 0x0297A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_13) == 0x0297A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_26) == 0x0297B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_13) == 0x0297BC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_13) == 0x0297C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_27) == 0x0297C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_9) == 0x0297C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_13) == 0x02A1F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_16) == 0x02A200, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_16) == 0x02AC30, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_16) == 0x02B3B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_16) == 0x02B4C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_16) == 0x02B880, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_16) == 0x02BCE0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_13) == 0x02BDA0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_13) == 0x02BDA1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_14) == 0x02BDA8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_28) == 0x02BDB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_14) == 0x02BDBC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_14) == 0x02BDC0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_29) == 0x02BDC1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_10) == 0x02BDC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_14) == 0x02C7F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_17) == 0x02C800, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_17) == 0x02D230, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_17) == 0x02D9B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_17) == 0x02DAC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_17) == 0x02DE80, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_17) == 0x02E2E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_14) == 0x02E3A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_14) == 0x02E3A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_15) == 0x02E3A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_30) == 0x02E3B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_15) == 0x02E3BC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_15) == 0x02E3C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_31) == 0x02E3C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_11) == 0x02E3C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_15) == 0x02EDF8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_18) == 0x02EE00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_18) == 0x02F830, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_18) == 0x02FFB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_18) == 0x0300C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_18) == 0x030480, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_18) == 0x0308E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_15) == 0x0309A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_15) == 0x0309A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_16) == 0x0309A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_32) == 0x0309B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_16) == 0x0309BC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_16) == 0x0309C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_33) == 0x0309C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_12) == 0x0309C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_16) == 0x0313F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_19) == 0x031400, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_19) == 0x031E30, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_19) == 0x0325B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_19) == 0x0326C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_19) == 0x032A80, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_19) == 0x032EE0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_16) == 0x032FA0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_16) == 0x032FA1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_17) == 0x032FA8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_34) == 0x032FB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_17) == 0x032FBC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_17) == 0x032FC0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_35) == 0x032FC1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_13) == 0x032FC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_17) == 0x0339F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_20) == 0x033A00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_20) == 0x034430, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_20) == 0x034BB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_20) == 0x034CC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_20) == 0x035080, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_20) == 0x0354E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_17) == 0x0355A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_17) == 0x0355A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_18) == 0x0355A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_36) == 0x0355B8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_18) == 0x0355BC, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Array_IsValidIndex_ReturnValue_18) == 0x0355C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Array_IsValidIndex_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_37) == 0x0355C1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetStatModRecordByGuid_ReturnValue_1) == 0x0355C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetStatModRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_18) == 0x0356D8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_18) == 0x0356D9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_18) == 0x0356DA, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_19) == 0x0356E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_20) == 0x0356F0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_19) == 0x035700, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_20) == 0x035704, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_Value) == 0x035708, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_ReturnValue) == 0x035720, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_Value_1) == 0x035728, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_ReturnValue_1) == 0x035740, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetLingeringEffectRecordByGuid_ReturnValue) == 0x035748, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetLingeringEffectRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetProjectileRecordByGuid_ReturnValue) == 0x035B00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetProjectileRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_21) == 0x035F60, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_21) == 0x036990, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_21) == 0x037118, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_21) == 0x037228, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_21) == 0x0375E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_21) == 0x037A40, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_22) == 0x037B00, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_22) == 0x038530, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_22) == 0x038CB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_22) == 0x038DC8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_22) == 0x039180, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_22) == 0x0395E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_38) == 0x0396A0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_19) == 0x0396A1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_19) == 0x0396A2, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_39) == 0x0396A3, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_19) == 0x0396A4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_20) == 0x0396A5, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_20) == 0x0396A6, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_40) == 0x0396A7, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_20) == 0x0396A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_41) == 0x0396A9, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_21) == 0x0396B0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_42) == 0x0396C0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_21) == 0x0396C4, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_Value_2) == 0x0396C8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_ReturnValue_2) == 0x0396E0, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_43) == 0x0396E1, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_21) == 0x0396E2, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_21) == 0x0396E3, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetEffectRecordByGuid_ReturnValue_2) == 0x0396E8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetEffectRecordByGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_21) == 0x039E70, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_23) == 0x039E78, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_23) == 0x03A8A8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_23) == 0x03B030, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_23) == 0x03B140, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_23) == 0x03B4F8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_23) == 0x03B958, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Replace_ReturnValue_22) == 0x03BA18, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Replace_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_44) == 0x03BA28, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Conv_StringToInt_ReturnValue_22) == 0x03BA2C, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Conv_StringToInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_Value_3) == 0x03BA30, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Map_Find_ReturnValue_3) == 0x03BA48, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Contains_ReturnValue_45) == 0x03BA49, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Contains_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_Not_PreBool_ReturnValue_22) == 0x03BA4A, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_Not_PreBool_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_IsNumeric_ReturnValue_22) == 0x03BA4B, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_IsNumeric_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_GetHitRecordByGuid_ReturnValue_14) == 0x03BA50, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_GetHitRecordByGuid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_BooleanAND_ReturnValue_22) == 0x03C480, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_hit_24) == 0x03C488, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_hit_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_effect_24) == 0x03CEB8, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_effect_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_statMod_24) == 0x03D640, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_statMod_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_lingeringEffect_24) == 0x03D750, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_lingeringEffect_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_projectile_24) == 0x03DB08, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_projectile_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_RecurseFindRecord, CallFunc_RecurseFindRecord_reaction_24) == 0x03DF68, "Member 'WBP_CombatTooltipGenerator_C_RecurseFindRecord::CallFunc_RecurseFindRecord_reaction_24' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_CombatTooltipGenerator_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_CombatTooltipGenerator_C_PreConstruct");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_PreConstruct) == 0x000001, "Wrong size on WBP_CombatTooltipGenerator_C_PreConstruct");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.ParseDescription
// 0x42D0 (0x42D0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_ParseDescription final
{
public:
	class FString                                 descr;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Source;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEffectRecord                          EffectRecord;                                      // 0x0018(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FAoCAbilityRecord                      AbilityRecord;                                     // 0x07A0(0x1020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Output;                                            // 0x17C0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 descrip;                                           // 0x17D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x17E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelingComponent*                     CallFunc_GetLevelingComponent_ReturnValue;         // 0x17F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetChunks_FAST_ret;                       // 0x17F8(0x0010)(ReferenceParm)
	class FString                                 Temp_string_Variable_1;                            // 0x1808(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x181C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1821[0x3];                                     // 0x1821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x1824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x1828(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1841[0x7];                                     // 0x1841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x1848(0x0018)()
	class ABaseCharacter*                         Temp_object_Variable;                              // 0x1860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_1;                            // 0x1868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x1871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x1872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x1873(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1874[0x4];                                     // 0x1874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x1878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x1880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x1888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x1889(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188A[0x6];                                     // 0x188A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x1890(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x18A8(0x0018)()
	bool                                          Temp_bool_Variable_7;                              // 0x18C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C1[0x7];                                     // 0x18C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x18C8(0x0050)(HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_2;                            // 0x1918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_3;                            // 0x1920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_4;                            // 0x1928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value;                // 0x1930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_5;                            // 0x1938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x1940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1944[0x4];                                     // 0x1944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EvalExpressionFloat_value_1;              // 0x1948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x1950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str;                           // 0x1958(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x1968(0x0050)(HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Temp_struct_Variable;                              // 0x19B8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x19C8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_8;                              // 0x19D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D9[0x7];                                     // 0x19D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x19E0(0x0018)()
	int32                                         Temp_int_Variable;                                 // 0x19F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19FC[0x4];                                     // 0x19FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1A00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x1A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A11[0x3];                                     // 0x1A11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x1A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x1A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1A1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1D[0x3];                                     // 0x1A1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x1A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A24[0x4];                                     // 0x1A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x1A28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x1A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A3C[0x4];                                     // 0x1A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x1A40(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A59[0x7];                                     // 0x1A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x1A60(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x1AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1ABC[0x4];                                     // 0x1ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x1AC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x1AD0(0x0018)()
	class FString                                 CallFunc_CheckSpecificEffectArgs_ret;              // 0x1AE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_3;   // 0x1AF8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x1B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4C[0x4];                                     // 0x1B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x1B50(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x1B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B61[0x7];                                     // 0x1B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x1B68(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1B80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x1B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x1B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B92[0x6];                                     // 0x1B92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x1B98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x1BA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x1BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB9[0x7];                                     // 0x1BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x1BC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x1BD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE1[0x3];                                     // 0x1BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x1BE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x1BE8(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x1C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C01[0x7];                                     // 0x1C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_4;   // 0x1C08(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_2;                            // 0x1C58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_2;                           // 0x1C68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_2;                      // 0x1C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C79[0x7];                                     // 0x1C79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_3;                            // 0x1C80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_3;                           // 0x1C90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_3;                      // 0x1CA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA1[0x7];                                     // 0x1CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_1;                           // 0x1CA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_4;                            // 0x1CB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_4;                           // 0x1CC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_4;                      // 0x1CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x1CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1CDA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDB[0x5];                                     // 0x1CDB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_5;                            // 0x1CE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_5;                           // 0x1CF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_5;                      // 0x1D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D01[0x7];                                     // 0x1D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ParseDescription_output;                  // 0x1D08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillTreeName_skillTreeName;           // 0x1D18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x1D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSkillPurchased_ReturnValue;             // 0x1D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1D2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x1D2B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x1D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x1D2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x1D2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1D2F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x1D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1D31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x1D32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1D33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1D34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x1D35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x1D36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x1D37(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x1D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x1D39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3A[0x2];                                     // 0x1D3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_4;                               // 0x1D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x1D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D41[0x7];                                     // 0x1D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x1D48(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x1D60(0x0018)()
	bool                                          Temp_bool_Variable_12;                             // 0x1D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x1D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7A[0x6];                                     // 0x1D7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x1D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x1D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x1D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x1D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x1D92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D93[0x5];                                     // 0x1D93(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1D98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1DA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x1DB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x1DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC9[0x7];                                     // 0x1DC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x1DD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_2;                           // 0x1DE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0x1DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF1[0x7];                                     // 0x1DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x1DF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x1E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0x1E0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_8;                   // 0x1E0D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_9;                   // 0x1E0E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0F[0x1];                                     // 0x1E0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_4;                           // 0x1E10(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x1E28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x1E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x1E40(0x0018)()
	bool                                          CallFunc_Contains_ReturnValue_10;                  // 0x1E58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E59[0x7];                                     // 0x1E59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_5;   // 0x1E60(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_11;                  // 0x1EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x1EB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB2[0x6];                                     // 0x1EB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x1EB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_6;                           // 0x1EC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x1ED8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_12;                  // 0x1EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EE9[0x3];                                     // 0x1EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x1EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAbilityTargetingId                    CallFunc_Map_Find_Value;                           // 0x1EF0(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_13;                  // 0x1F09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1F0A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F0B[0x5];                                     // 0x1F0B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAbilityTargetingRecord                CallFunc_GetTargetingRecordByGuid_ReturnValue;     // 0x1F10(0x0088)(ConstParm)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x1F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x1F99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x1F9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9B[0x5];                                     // 0x1F9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EvalExpressionFloat_value_2;              // 0x1FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAbilityHitRecord                      CallFunc_RecurseFindRecord_hit;                    // 0x1FA8(0x0A30)()
	struct FEffectRecord                          CallFunc_RecurseFindRecord_effect;                 // 0x29D8(0x0788)()
	struct FStatModRecord                         CallFunc_RecurseFindRecord_statMod;                // 0x3160(0x0110)()
	struct FLingeringEffectRecord                 CallFunc_RecurseFindRecord_lingeringEffect;        // 0x3270(0x03B8)()
	struct FProjectileRecord                      CallFunc_RecurseFindRecord_projectile;             // 0x3628(0x0460)()
	struct FReactionRecord                        CallFunc_RecurseFindRecord_reaction;               // 0x3A88(0x00C0)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x3B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CheckSpecificLingeringEffectArgs_str;     // 0x3B50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x3B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x3B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x3B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B71[0x7];                                     // 0x3B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x3B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_8;                           // 0x3B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x3B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_1;        // 0x3B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B91[0x7];                                     // 0x3B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetStatModString_str;                     // 0x3B98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEffectString_str;                      // 0x3BA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_2;        // 0x3BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_3;        // 0x3BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x3BBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_4;        // 0x3BBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BBC[0x4];                                     // 0x3BBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetHitString_str;                         // 0x3BC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x3BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x3BD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD2[0x6];                                     // 0x3BD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_9;                           // 0x3BD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_10;                          // 0x3BE8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_14;                  // 0x3BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BF9[0x7];                                     // 0x3BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_11;                          // 0x3C00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x3C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_12;                          // 0x3C18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1C[0x4];                                     // 0x3C1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatFormulaTypeRecord                 CallFunc_GetStatFormulaRecordByName_ReturnValue;   // 0x3C20(0x0060)(ConstParm)
	struct FStatFormulaTypeRecord                 CallFunc_GetStatFormulaRecordByName_ReturnValue_1; // 0x3C80(0x0060)(ConstParm)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_5;        // 0x3CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue_6;        // 0x3CE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CE2[0x6];                                     // 0x3CE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EvaluateFormula_ReturnValue;              // 0x3CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRankTooltip_outputStr;                 // 0x3CF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x3D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D01[0x7];                                     // 0x3D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x3D08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x3D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x3D19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1A[0x6];                                     // 0x3D1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x3D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x3D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D29[0x7];                                     // 0x3D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x3D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x3D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x3D39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_15;                  // 0x3D3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x3D3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_13;                          // 0x3D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_16;                  // 0x3D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_17;                  // 0x3D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D42[0x6];                                     // 0x3D42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_14;                          // 0x3D48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_15;                          // 0x3D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x3D58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_16;                          // 0x3D60(0x0018)()
	bool                                          CallFunc_Contains_ReturnValue_18;                  // 0x3D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D79[0x7];                                     // 0x3D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x3D80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x3D90(0x0018)()
	double                                        K2Node_Select_Default_17;                          // 0x3DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_6;   // 0x3DB0(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x3E00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_19;                  // 0x3E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E09[0x7];                                     // 0x3E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x3E10(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x3E28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x3E38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E3C[0x4];                                     // 0x3E3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x3E40(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_7;   // 0x3E58(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_2;                // 0x3EA8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x3EB8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x3ED0(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_8;   // 0x3EE8(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x3F38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_3;                // 0x3F48(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetRichPower_outStr;                      // 0x3F58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRichPower_has;                         // 0x3F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F69[0x7];                                     // 0x3F69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x3F70(0x0018)()
	int32                                         CallFunc_Len_ReturnValue_2;                        // 0x3F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F8C[0x4];                                     // 0x3F8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x3F90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x3FA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x3FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x3FB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB2[0x6];                                     // 0x3FB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x3FB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_18;                          // 0x3FC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x3FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD9[0x7];                                     // 0x3FD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x3FE0(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_9;   // 0x3FF8(0x0050)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_19;                          // 0x4048(0x0018)()
	bool                                          Temp_bool_Variable_21;                             // 0x4060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4061[0x7];                                     // 0x4061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_10;  // 0x4068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_4;                // 0x40B8(0x0010)(ReferenceParm)
	int32                                         K2Node_Select_Default_20;                          // 0x40C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40CC[0x4];                                     // 0x40CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x40D0(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x40E8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_7;          // 0x4100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_8;          // 0x4110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_21;                          // 0x4120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_8;          // 0x4130(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x4148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_11;  // 0x4158(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_5;                // 0x41A8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x41B8(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x41D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_9;          // 0x41E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x41F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x4200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_3;                        // 0x4210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4214[0x4];                                     // 0x4214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x4218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x4228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x4238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x4248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_2;               // 0x4258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ToUpper_ReturnValue;                      // 0x4268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x4278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x4288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x4298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4299[0x7];                                     // 0x4299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_22;                          // 0x42A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output_1;                // 0x42B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x42C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_ParseDescription) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_ParseDescription");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_ParseDescription) == 0x0042D0, "Wrong size on WBP_CombatTooltipGenerator_C_ParseDescription");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, descr) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::descr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Source) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, EffectRecord) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::EffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, AbilityRecord) == 0x0007A0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::AbilityRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Output) == 0x0017C0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Output' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, descrip) == 0x0017D0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::descrip' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_string_Variable) == 0x0017E0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetLevelingComponent_ReturnValue) == 0x0017F0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetLevelingComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetChunks_FAST_ret) == 0x0017F8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetChunks_FAST_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_string_Variable_1) == 0x001808, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Array_Length_ReturnValue) == 0x001818, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Array_Length_ReturnValue_1) == 0x00181C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable) == 0x001820, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Percent_IntInt_ReturnValue) == 0x001824, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable) == 0x001828, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001840, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable_1) == 0x001848, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable) == 0x001860, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable_1) == 0x001868, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_1) == 0x001870, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_2) == 0x001871, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_3) == 0x001872, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_4) == 0x001873, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_real_Variable) == 0x001878, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_real_Variable_1) == 0x001880, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_5) == 0x001888, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_6) == 0x001889, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable_2) == 0x001890, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable_3) == 0x0018A8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_7) == 0x0018C0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData) == 0x0018C8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable_2) == 0x001918, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable_3) == 0x001920, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable_4) == 0x001928, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EvalExpressionFloat_value) == 0x001930, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EvalExpressionFloat_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_object_Variable_5) == 0x001938, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Round_ReturnValue) == 0x001940, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EvalExpressionFloat_value_1) == 0x001948, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EvalExpressionFloat_value_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_IntToInt64_ReturnValue) == 0x001950, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetTimeStr_str) == 0x001958, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetTimeStr_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x001968, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_struct_Variable) == 0x0019B8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array) == 0x0019C8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_8) == 0x0019D8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue) == 0x0019E0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable) == 0x0019F8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x001A00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_9) == 0x001A10, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable_1) == 0x001A14, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Len_ReturnValue) == 0x001A18, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Greater_IntInt_ReturnValue) == 0x001A1C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable_2) == 0x001A20, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default) == 0x001A28, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Loop_Counter_Variable) == 0x001A38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x001A40, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Less_IntInt_ReturnValue) == 0x001A58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x001A60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Add_IntInt_ReturnValue) == 0x001AB0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Array_Index_Variable) == 0x001AB4, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable_3) == 0x001AB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Array_Get_Item) == 0x001AC0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_1) == 0x001AD0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_CheckSpecificEffectArgs_ret) == 0x001AE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_CheckSpecificEffectArgs_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_3) == 0x001AF8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Len_ReturnValue_1) == 0x001B48, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array_1) == 0x001B50, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Greater_IntInt_ReturnValue_1) == 0x001B60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue_1) == 0x001B68, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001B80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x001B90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x001B91, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS) == 0x001B98, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS) == 0x001BA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue) == 0x001BB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS_1) == 0x001BC0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS_1) == 0x001BD0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue_1) == 0x001BE0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Percent_IntInt_ReturnValue_1) == 0x001BE4, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_2) == 0x001BE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x001C00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_4) == 0x001C08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS_2) == 0x001C58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS_2) == 0x001C68, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue_2) == 0x001C78, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS_3) == 0x001C80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS_3) == 0x001C90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue_3) == 0x001CA0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_1) == 0x001CA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS_4) == 0x001CB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS_4) == 0x001CC8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue_4) == 0x001CD8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue) == 0x001CD9, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue) == 0x001CDA, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_LeftS_5) == 0x001CE0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_LeftS_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_RightS_5) == 0x001CF0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_RightS_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Split_ReturnValue_5) == 0x001D00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Split_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_ParseDescription_output) == 0x001D08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_ParseDescription_output' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetSkillTreeName_skillTreeName) == 0x001D18, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetSkillTreeName_skillTreeName' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_1) == 0x001D28, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_IsSkillPurchased_ReturnValue) == 0x001D29, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_IsSkillPurchased_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_1) == 0x001D2A, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue) == 0x001D2B, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_2) == 0x001D2C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_3) == 0x001D2D, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue_1) == 0x001D2E, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue_2) == 0x001D2F, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_2) == 0x001D30, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_3) == 0x001D31, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_4) == 0x001D32, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanOR_ReturnValue) == 0x001D33, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_4) == 0x001D34, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_5) == 0x001D35, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x001D36, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_5) == 0x001D37, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_6) == 0x001D38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_10) == 0x001D39, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable_4) == 0x001D3C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_11) == 0x001D40, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable_4) == 0x001D48, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_text_Variable_5) == 0x001D60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_12) == 0x001D78, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_13) == 0x001D79, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_real_Variable_2) == 0x001D80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_real_Variable_3) == 0x001D88, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_14) == 0x001D90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_15) == 0x001D91, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_16) == 0x001D92, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue) == 0x001D98, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001DA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_string_Variable_2) == 0x001DB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_17) == 0x001DC8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_2) == 0x001DD0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_2) == 0x001DE0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_6) == 0x001DF0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_3) == 0x001DF8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_3) == 0x001E08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_7) == 0x001E0C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_8) == 0x001E0D, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_9) == 0x001E0E, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_4) == 0x001E10, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_2) == 0x001E28, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_5) == 0x001E38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_3) == 0x001E40, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_10) == 0x001E58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_5) == 0x001E60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_11) == 0x001EB0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_18) == 0x001EB1, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_string_Variable_3) == 0x001EB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_6) == 0x001EC8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Replace_ReturnValue) == 0x001ED8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_12) == 0x001EE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToInt_ReturnValue) == 0x001EEC, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Map_Find_Value) == 0x001EF0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Map_Find_ReturnValue) == 0x001F08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_13) == 0x001F09, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue_3) == 0x001F0A, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetTargetingRecordByGuid_ReturnValue) == 0x001F10, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetTargetingRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_IsNumeric_ReturnValue) == 0x001F98, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_7) == 0x001F99, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Array_IsValidIndex_ReturnValue) == 0x001F9A, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EvalExpressionFloat_value_2) == 0x001FA0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EvalExpressionFloat_value_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_hit) == 0x001FA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_hit' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_effect) == 0x0029D8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_effect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_statMod) == 0x003160, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_statMod' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_lingeringEffect) == 0x003270, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_lingeringEffect' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_projectile) == 0x003628, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_projectile' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_RecurseFindRecord_reaction) == 0x003A88, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_RecurseFindRecord_reaction' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x003B48, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_CheckSpecificLingeringEffectArgs_str) == 0x003B50, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_CheckSpecificLingeringEffectArgs_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x003B60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_7) == 0x003B68, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x003B70, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Abs_ReturnValue) == 0x003B78, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_8) == 0x003B80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x003B88, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_1) == 0x003B90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetStatModString_str) == 0x003B98, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetStatModString_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetEffectString_str) == 0x003BA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetEffectString_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_2) == 0x003BB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_3) == 0x003BB9, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_8) == 0x003BBA, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_4) == 0x003BBB, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetHitString_str) == 0x003BC0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetHitString_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_19) == 0x003BD0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_20) == 0x003BD1, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_9) == 0x003BD8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_10) == 0x003BE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_14) == 0x003BF8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_11) == 0x003C00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToName_ReturnValue) == 0x003C10, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_12) == 0x003C18, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetStatFormulaRecordByName_ReturnValue) == 0x003C20, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetStatFormulaRecordByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetStatFormulaRecordByName_ReturnValue_1) == 0x003C80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetStatFormulaRecordByName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_5) == 0x003CE0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_NotEqual_Int64Int64_ReturnValue_6) == 0x003CE1, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_NotEqual_Int64Int64_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EvaluateFormula_ReturnValue) == 0x003CE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EvaluateFormula_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetRankTooltip_outputStr) == 0x003CF0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetRankTooltip_outputStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Less_DoubleDouble_ReturnValue) == 0x003D00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_4) == 0x003D08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue_4) == 0x003D18, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x003D19, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Abs_ReturnValue_1) == 0x003D20, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Not_PreBool_ReturnValue_5) == 0x003D28, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x003D30, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_9) == 0x003D38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_10) == 0x003D39, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_15) == 0x003D3A, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanOR_ReturnValue_1) == 0x003D3B, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_13) == 0x003D3C, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_16) == 0x003D40, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_17) == 0x003D41, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_14) == 0x003D48, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_15) == 0x003D50, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Abs_ReturnValue_2) == 0x003D58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_16) == 0x003D60, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_18) == 0x003D78, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_3) == 0x003D80, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_4) == 0x003D90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_17) == 0x003DA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_6) == 0x003DB0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x003E00, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Contains_ReturnValue_19) == 0x003E08, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Contains_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_DoubleToText_ReturnValue) == 0x003E10, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_4) == 0x003E28, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_int_Variable_5) == 0x003E38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_5) == 0x003E40, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_7) == 0x003E58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array_2) == 0x003EA8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_6) == 0x003EB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue_2) == 0x003ED0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_8) == 0x003EE8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_5) == 0x003F38, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array_3) == 0x003F48, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetRichPower_outStr) == 0x003F58, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetRichPower_outStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetRichPower_has) == 0x003F68, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetRichPower_has' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue_3) == 0x003F70, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Len_ReturnValue_2) == 0x003F88, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Len_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_6) == 0x003F90, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetSubstring_ReturnValue) == 0x003FA0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_StartsWith_ReturnValue) == 0x003FB0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanAND_ReturnValue_11) == 0x003FB1, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_5) == 0x003FB8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_18) == 0x003FC8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_BooleanOR_ReturnValue_2) == 0x003FD8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_7) == 0x003FE0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_9) == 0x003FF8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_19) == 0x004048, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_21) == 0x004060, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_10) == 0x004068, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array_4) == 0x0040B8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_20) == 0x0040C8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue_4) == 0x0040D0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0040E8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_7) == 0x004100, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_8) == 0x004110, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_21) == 0x004120, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_StringToText_ReturnValue_8) == 0x004130, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_StringToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_6) == 0x004148, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_FormatArgumentData_11) == 0x004158, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, UniqueObjectNameForCooking_Array_5) == 0x0041A8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::UniqueObjectNameForCooking_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Format_ReturnValue_5) == 0x0041B8, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0041D0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Conv_TextToString_ReturnValue_9) == 0x0041E0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Conv_TextToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0041F0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_string_Variable_4) == 0x004200, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Len_ReturnValue_3) == 0x004210, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Len_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_9) == 0x004218, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetSubstring_ReturnValue_1) == 0x004228, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_10) == 0x004238, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_11) == 0x004248, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_GetSubstring_ReturnValue_2) == 0x004258, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_GetSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_ToUpper_ReturnValue) == 0x004268, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_ToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_12) == 0x004278, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_13) == 0x004288, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, Temp_bool_Variable_22) == 0x004298, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, K2Node_Select_Default_22) == 0x0042A0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_ParseDescription_output_1) == 0x0042B0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_ParseDescription_output_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ParseDescription, CallFunc_Concat_StrStr_ReturnValue_14) == 0x0042C0, "Member 'WBP_CombatTooltipGenerator_C_ParseDescription::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetTimeStr
// 0x0298 (0x0298 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetTimeStr final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          trim1;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Str;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0040(0x0018)()
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x00C0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x00F0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x0140(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x0190(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_2;                // 0x01A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x01C8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x01E8(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0208(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0228(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0248(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_2;                           // 0x0270(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetTimeStr) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetTimeStr");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetTimeStr) == 0x000298, "Wrong size on WBP_CombatTooltipGenerator_C_GetTimeStr");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Time) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Time' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, trim1) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::trim1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Str) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Temp_text_Variable) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_FormatArgumentData) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_Array) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0000C0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x0000F0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x000140, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_Array_1) == 0x000190, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, UniqueObjectNameForCooking_Array_2) == 0x0001A0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Format_ReturnValue_1) == 0x0001B0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Format_ReturnValue_2) == 0x0001C8, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Temp_bool_Variable) == 0x0001E0, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Temp_text_Variable_1) == 0x0001E8, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Temp_bool_Variable_1) == 0x000200, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, Temp_bool_Variable_2) == 0x000201, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_MakeLiteralText_ReturnValue) == 0x000208, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000220, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, K2Node_Select_Default) == 0x000228, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x000240, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, K2Node_Select_Default_1) == 0x000248, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Conv_TextToString_ReturnValue) == 0x000260, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, K2Node_Select_Default_2) == 0x000270, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetTimeStr, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000288, "Member 'WBP_CombatTooltipGenerator_C_GetTimeStr::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetStatModString
// 0x1810 (0x1810 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetStatModString final
{
public:
	class ABaseCharacter*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStatModRecord                         Record;                                            // 0x0008(0x0110)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Args;                                              // 0x0118(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   hitFlags;                                          // 0x0128(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Str;                                               // 0x0138(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        BaseValueMax;                                      // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseValueMin;                                      // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseValueAdd;                                      // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BaseValue;                                         // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 statStr;                                           // 0x0168(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_8;                   // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_9;                   // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_10;                  // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_11;                  // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_12;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_13;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_14;                  // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_15;                  // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_16;                  // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_17;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_18;                  // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_19;                  // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_20;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_21;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_22;                  // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_23;                  // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_24;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_25;                  // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_26;                  // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_27;                  // 0x0197(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_28;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_29;                  // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_30;                  // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_31;                  // 0x019B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_32;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_33;                  // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_34;                  // 0x019E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_35;                  // 0x019F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_36;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordById_ReturnValue;            // 0x01A8(0x02C8)(ConstParm)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordById_ReturnValue_1;          // 0x0470(0x02C8)(ConstParm)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0738(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0788(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0798(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x07A8(0x0018)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C4[0x4];                                      // 0x07C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x07C8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_819[0x3];                                      // 0x0819(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0821(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_822[0x6];                                      // 0x0822(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_849[0x7];                                      // 0x0849(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0850(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0868(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0888(0x0018)()
	int32                                         Temp_int_Variable_2;                               // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4[0x4];                                      // 0x08A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x08A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x08B8(0x0018)()
	int32                                         Temp_int_Variable_3;                               // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D4[0x4];                                      // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x08D8(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_935[0x3];                                      // 0x0935(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_941[0x3];                                      // 0x0941(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_4;                           // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x094C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94D[0x3];                                      // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_979[0x3];                                      // 0x0979(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_6;                           // 0x097C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_985[0x3];                                      // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_9;                               // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x3];                                      // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_7;                           // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_8;                           // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x09A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x09B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_9;                           // 0x09C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x09D8(0x0018)()
	bool                                          Temp_bool_Variable_15;                             // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x7];                                      // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_3;   // 0x09F8(0x0050)(HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x7];                                      // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_10;                          // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x0A68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A69[0x7];                                      // 0x0A69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0A70(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0A88(0x0018)()
	bool                                          Temp_bool_Variable_18;                             // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA1[0x7];                                      // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_11;                          // 0x0AA8(0x0018)()
	int32                                         Temp_int_Variable_11;                              // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC4[0x4];                                      // 0x0AC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0AC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0AD8(0x0018)()
	bool                                          Temp_bool_Variable_19;                             // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_4;   // 0x0AF8(0x0050)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B51[0x3];                                      // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_12;                          // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_13;                          // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x0B5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5D[0x3];                                      // 0x0B5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_14;                          // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B81[0x7];                                      // 0x0B81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_4;                              // 0x0B88(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0BA0(0x0018)()
	bool                                          Temp_bool_Variable_24;                             // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB9[0x7];                                      // 0x0BB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_15;                          // 0x0BC0(0x0018)()
	class ABaseCharacter*                         Temp_object_Variable;                              // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0BE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_1;                            // 0x0BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0BF8(0x0018)()
	bool                                          Temp_bool_Variable_25;                             // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_5;   // 0x0C18(0x0050)(HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_2;                            // 0x0C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_3;                            // 0x0C70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_4;                            // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value;                // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_5;                            // 0x0C88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_6;                            // 0x0C90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_7;                            // 0x0C98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_8;                            // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_9;                            // 0x0CA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB1[0x7];                                      // 0x0CB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_6;                              // 0x0CB8(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x0CD0(0x0018)()
	bool                                          Temp_bool_Variable_27;                             // 0x0CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE9[0x3];                                      // 0x0CE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_14;                              // 0x0CEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_16;                          // 0x0CF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF4[0x4];                                      // 0x0CF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_8;                              // 0x0CF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_28;                             // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D01[0x7];                                      // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_17;                          // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_8;                              // 0x0D18(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x0D30(0x0018)()
	bool                                          Temp_bool_Variable_29;                             // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_30;                             // 0x0D49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4A[0x6];                                      // 0x0D4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_18;                          // 0x0D50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_19;                          // 0x0D58(0x0018)()
	bool                                          Temp_bool_Variable_31;                             // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D71[0x7];                                      // 0x0D71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0D78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0D88(0x0018)()
	bool                                          Temp_bool_Variable_32;                             // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA1[0x7];                                      // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_6;   // 0x0DA8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF9[0x3];                                      // 0x0DF9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0DFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E01[0x3];                                      // 0x0E01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E09[0x3];                                      // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTermEvaluation                        CallFunc_Array_Get_Item;                           // 0x0E10(0x00C8)()
	double                                        CallFunc_EvalExpressionFloat_value_1;              // 0x0ED8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value_2;              // 0x0EE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value_3;              // 0x0EE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value_4;              // 0x0EF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0EFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_1;      // 0x0EFB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_2;      // 0x0EFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_3;      // 0x0EFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFE[0x2];                                      // 0x0EFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_10;                             // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0F08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_33;                             // 0x0F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F11[0x7];                                      // 0x0F11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_20;                          // 0x0F18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRichPower_outStr;                      // 0x0F20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRichPower_has;                         // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_34;                             // 0x0F31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F32[0x2];                                      // 0x0F32(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_15;                              // 0x0F34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_21;                          // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_22;                          // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0F70(0x0018)()
	double                                        K2Node_Select_Default_23;                          // 0x0F88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x0F90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x0FA8(0x0018)()
	double                                        K2Node_Select_Default_24;                          // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_7;   // 0x0FC8(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x1020(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x1030(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_7;          // 0x1060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_8;          // 0x1070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x1080(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_8;   // 0x1098(0x0050)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_16;                              // 0x10E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10EC[0x4];                                     // 0x10EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x10F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_25;                          // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x1108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_26;                          // 0x1110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_27;                          // 0x1118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x1128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x1130(0x0018)()
	double                                        K2Node_Select_Default_28;                          // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_9;          // 0x1150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x1160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_8;          // 0x1168(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_3;          // 0x1180(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_9;   // 0x1198(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_10;         // 0x11E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x11F8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_9;          // 0x1208(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x1220(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_10;  // 0x1238(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_11;  // 0x1288(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_2;                // 0x12D8(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_3;                // 0x12E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x12F8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x1310(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_11;         // 0x1328(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_12;         // 0x1338(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_35;                             // 0x1348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1349[0x3];                                     // 0x1349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_17;                              // 0x134C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_29;                          // 0x1350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1354[0x4];                                     // 0x1354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_10;         // 0x1358(0x0018)()
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x1370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1374[0x4];                                     // 0x1374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_12;  // 0x1378(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x13C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_4;                // 0x13D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E9[0x7];                                     // 0x13E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x13F0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1409[0x7];                                     // 0x1409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_13;         // 0x1410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1421[0x7];                                     // 0x1421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_30;                          // 0x1428(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_11;         // 0x1438(0x0018)()
	class FText                                   K2Node_Select_Default_31;                          // 0x1450(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_13;  // 0x1468(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_14;  // 0x14B8(0x0050)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_36;                             // 0x1508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1509[0x7];                                     // 0x1509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_5;                // 0x1510(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x1520(0x0018)()
	int32                                         K2Node_Select_Default_32;                          // 0x1538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153C[0x4];                                     // 0x153C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_14;         // 0x1540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_10;                             // 0x1550(0x0018)()
	class FString                                 K2Node_Select_Default_33;                          // 0x1568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_11;                             // 0x1578(0x0018)()
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x1590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_34;                          // 0x1598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_37;                             // 0x15A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A1[0x7];                                     // 0x15A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x15A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_35;                          // 0x15B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_36;                          // 0x15B8(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x15D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_15;         // 0x15D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_4;          // 0x15E8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_12;         // 0x1600(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_16;         // 0x1618(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_15;  // 0x1628(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_13;         // 0x1678(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_16;  // 0x1690(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x16E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16E1[0x7];                                     // 0x16E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_6;                // 0x16E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x16F8(0x0018)()
	bool                                          Temp_bool_Variable_38;                             // 0x1710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1711[0x7];                                     // 0x1711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_17;         // 0x1718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_37;                          // 0x1728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x1730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_38;                          // 0x1738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x1740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_5;          // 0x1748(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_18;         // 0x1760(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_14;         // 0x1770(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_17;  // 0x1788(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_7;                // 0x17D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x17E8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_19;         // 0x1800(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetStatModString) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetStatModString");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetStatModString) == 0x001810, "Wrong size on WBP_CombatTooltipGenerator_C_GetStatModString");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Source) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Record) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Record' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Args) == 0x000118, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, hitFlags) == 0x000128, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::hitFlags' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Str) == 0x000138, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, BaseValueMax) == 0x000148, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::BaseValueMax' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, BaseValueMin) == 0x000150, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::BaseValueMin' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, BaseValueAdd) == 0x000158, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::BaseValueAdd' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, BaseValue) == 0x000160, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::BaseValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, statStr) == 0x000168, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::statStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable) == 0x000178, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue) == 0x00017C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_1) == 0x00017D, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_2) == 0x00017E, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_3) == 0x00017F, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_4) == 0x000180, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_5) == 0x000181, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_6) == 0x000182, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_7) == 0x000183, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_8) == 0x000184, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_9) == 0x000185, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_10) == 0x000186, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_11) == 0x000187, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_12) == 0x000188, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_13) == 0x000189, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_14) == 0x00018A, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_15) == 0x00018B, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_16) == 0x00018C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_17) == 0x00018D, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_18) == 0x00018E, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_19) == 0x00018F, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_20) == 0x000190, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_21) == 0x000191, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_22) == 0x000192, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_23) == 0x000193, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_24) == 0x000194, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_25) == 0x000195, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_26) == 0x000196, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_27) == 0x000197, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_28) == 0x000198, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_29) == 0x000199, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_30) == 0x00019A, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_31) == 0x00019B, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_32) == 0x00019C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_33) == 0x00019D, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_34) == 0x00019E, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_35) == 0x00019F, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Contains_ReturnValue_36) == 0x0001A0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Contains_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Array_Length_ReturnValue) == 0x0001A4, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_GetStatRecordById_ReturnValue) == 0x0001A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_GetStatRecordById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_GetStatRecordById_ReturnValue_1) == 0x000470, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_GetStatRecordById_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData) == 0x000738, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue) == 0x000788, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000798, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue) == 0x0007A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Len_ReturnValue) == 0x0007C0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x0007C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Greater_IntInt_ReturnValue) == 0x000818, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_1) == 0x00081C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable) == 0x000820, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_1) == 0x000821, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable) == 0x000828, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_1) == 0x000830, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_2) == 0x000838, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default) == 0x000840, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_3) == 0x000848, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable) == 0x000850, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_1) == 0x000868, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_4) == 0x000880, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_1) == 0x000888, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_2) == 0x0008A0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0008A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0008B8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_3) == 0x0008D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x0008D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_5) == 0x000928, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_2) == 0x00092C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_4) == 0x000930, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_6) == 0x000934, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_5) == 0x000938, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_6) == 0x00093C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_7) == 0x000940, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_3) == 0x000944, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_4) == 0x000948, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_8) == 0x00094C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_2) == 0x000950, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_3) == 0x000958, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_9) == 0x000960, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_5) == 0x000968, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_10) == 0x000970, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_7) == 0x000974, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_11) == 0x000978, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_6) == 0x00097C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_8) == 0x000980, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_12) == 0x000984, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_9) == 0x000988, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_10) == 0x00098C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_13) == 0x000990, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_7) == 0x000994, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_8) == 0x000998, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_string_Variable) == 0x0009A0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_string_Variable_1) == 0x0009B0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_14) == 0x0009C0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_9) == 0x0009C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0009D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_15) == 0x0009F0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_3) == 0x0009F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_4) == 0x000A48, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_5) == 0x000A50, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_16) == 0x000A58, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_10) == 0x000A60, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_17) == 0x000A68, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_2) == 0x000A70, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_3) == 0x000A88, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_18) == 0x000AA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_11) == 0x000AA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_11) == 0x000AC0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000AC8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000AD8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_19) == 0x000AF0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_4) == 0x000AF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_12) == 0x000B48, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_13) == 0x000B4C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_20) == 0x000B50, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_12) == 0x000B54, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_13) == 0x000B58, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_21) == 0x000B5C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_6) == 0x000B60, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_7) == 0x000B68, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_22) == 0x000B70, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_14) == 0x000B78, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_23) == 0x000B80, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_4) == 0x000B88, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_5) == 0x000BA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_24) == 0x000BB8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_15) == 0x000BC0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable) == 0x000BD8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000BE0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_1) == 0x000BF0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000BF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_25) == 0x000C10, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_5) == 0x000C18, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_2) == 0x000C68, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_3) == 0x000C70, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_4) == 0x000C78, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EvalExpressionFloat_value) == 0x000C80, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EvalExpressionFloat_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_5) == 0x000C88, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_6) == 0x000C90, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_7) == 0x000C98, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_8) == 0x000CA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_object_Variable_9) == 0x000CA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_26) == 0x000CB0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_6) == 0x000CB8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_7) == 0x000CD0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_27) == 0x000CE8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_14) == 0x000CEC, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_16) == 0x000CF0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_8) == 0x000CF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_28) == 0x000D00, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_28' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_9) == 0x000D08, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_17) == 0x000D10, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_8) == 0x000D18, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_9) == 0x000D30, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_29) == 0x000D48, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_29' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_30) == 0x000D49, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_30' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_18) == 0x000D50, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_19) == 0x000D58, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_31) == 0x000D70, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_31' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000D78, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000D88, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_32) == 0x000DA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_32' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_6) == 0x000DA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Not_PreBool_ReturnValue) == 0x000DF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Loop_Counter_Variable) == 0x000DFC, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Less_IntInt_ReturnValue) == 0x000E00, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Add_IntInt_ReturnValue) == 0x000E04, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_True_if_break_was_hit_Variable) == 0x000E08, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Array_Index_Variable) == 0x000E0C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Array_Get_Item) == 0x000E10, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EvalExpressionFloat_value_1) == 0x000ED8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EvalExpressionFloat_value_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EvalExpressionFloat_value_2) == 0x000EE0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EvalExpressionFloat_value_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EvalExpressionFloat_value_3) == 0x000EE8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EvalExpressionFloat_value_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EvalExpressionFloat_value_4) == 0x000EF0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EvalExpressionFloat_value_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Not_PreBool_ReturnValue_1) == 0x000EF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000EF9, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_BooleanAND_ReturnValue) == 0x000EFA, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EqualEqual_Int64Int64_ReturnValue_1) == 0x000EFB, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EqualEqual_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EqualEqual_Int64Int64_ReturnValue_2) == 0x000EFC, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EqualEqual_Int64Int64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_EqualEqual_Int64Int64_ReturnValue_3) == 0x000EFD, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_EqualEqual_Int64Int64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_10) == 0x000F00, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_real_Variable_11) == 0x000F08, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_33) == 0x000F10, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_33' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_20) == 0x000F18, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_GetRichPower_outStr) == 0x000F20, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_GetRichPower_outStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_GetRichPower_has) == 0x000F30, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_GetRichPower_has' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_34) == 0x000F31, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_34' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_15) == 0x000F34, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000F38, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_21) == 0x000F40, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue) == 0x000F48, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000F50, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_22) == 0x000F58, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000F60, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000F68, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000F70, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_23) == 0x000F88, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_6) == 0x000F90, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue_1) == 0x000FA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_6) == 0x000FA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_24) == 0x000FC0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_7) == 0x000FC8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x001018, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array) == 0x001020, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x001030, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue) == 0x001048, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_7) == 0x001060, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_8) == 0x001070, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_7) == 0x001080, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_8) == 0x001098, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_16) == 0x0010E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0010F0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_25) == 0x0010F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue_2) == 0x001100, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x001108, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_26) == 0x001110, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_27) == 0x001118, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001120, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue_3) == 0x001128, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x001130, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_28) == 0x001148, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_9) == 0x001150, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x001160, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_8) == 0x001168, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue_3) == 0x001180, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_9) == 0x001198, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_10) == 0x0011E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_1) == 0x0011F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_9) == 0x001208, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_1) == 0x001220, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_10) == 0x001238, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_11) == 0x001288, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_2) == 0x0012D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_3) == 0x0012E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_2) == 0x0012F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_3) == 0x001310, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_11) == 0x001328, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_12) == 0x001338, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_35) == 0x001348, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_35' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_int_Variable_17) == 0x00134C, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_29) == 0x001350, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_10) == 0x001358, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Len_ReturnValue_1) == 0x001370, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_12) == 0x001378, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_GetSubstring_ReturnValue) == 0x0013C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_4) == 0x0013D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_StartsWith_ReturnValue) == 0x0013E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_4) == 0x0013F0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_BooleanAND_ReturnValue_1) == 0x001408, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_13) == 0x001410, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_BooleanOR_ReturnValue) == 0x001420, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_30) == 0x001428, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_11) == 0x001438, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_31) == 0x001450, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_13) == 0x001468, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_14) == 0x0014B8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_36) == 0x001508, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_36' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_5) == 0x001510, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_5) == 0x001520, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_32) == 0x001538, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_32' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_14) == 0x001540, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_10) == 0x001550, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_33) == 0x001568, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_33' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_text_Variable_11) == 0x001578, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x001590, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_34) == 0x001598, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_34' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_37) == 0x0015A0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_37' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue_4) == 0x0015A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_35) == 0x0015B0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_35' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_36) == 0x0015B8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_36' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0015D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_15) == 0x0015D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue_4) == 0x0015E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_12) == 0x001600, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_16) == 0x001618, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_15) == 0x001628, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_15' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_13) == 0x001678, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_16) == 0x001690, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_16' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0016E0, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_6) == 0x0016E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_6) == 0x0016F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, Temp_bool_Variable_38) == 0x001710, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::Temp_bool_Variable_38' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_17) == 0x001718, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_37) == 0x001728, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_37' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Abs_ReturnValue_5) == 0x001730, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, K2Node_Select_Default_38) == 0x001738, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::K2Node_Select_Default_38' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x001740, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_DoubleToText_ReturnValue_5) == 0x001748, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_DoubleToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_18) == 0x001760, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_StringToText_ReturnValue_14) == 0x001770, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_StringToText_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_FormatArgumentData_17) == 0x001788, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_FormatArgumentData_17' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, UniqueObjectNameForCooking_Array_7) == 0x0017D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::UniqueObjectNameForCooking_Array_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Format_ReturnValue_7) == 0x0017E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatModString, CallFunc_Conv_TextToString_ReturnValue_19) == 0x001800, "Member 'WBP_CombatTooltipGenerator_C_GetStatModString::CallFunc_Conv_TextToString_ReturnValue_19' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetStatDescriptionRichText
// 0x02C8 (0x02C8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText final
{
public:
	struct FStatTypeDefRecord                     StatRecord;                                        // 0x0000(0x02C8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText) == 0x0002C8, "Wrong size on WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText, StatRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescriptionRichText::StatRecord' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetStatDescription
// 0x14D8 (0x14D8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetStatDescription final
{
public:
	struct FStatTypeDefRecord                     Stat;                                              // 0x0000(0x02C8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        totalStatValue;                                    // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hasRating;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Rating;                                            // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        totalNonRating;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        statTotal;                                         // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        baseTotal;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base;                                              // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 baseStatsStr;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 calcStr;                                           // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 wfallStr;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0338(0x0018)()
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_1;      // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_2;      // 0x0352(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue_3;      // 0x0353(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0370(0x0010)(ReferenceParm)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0390(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x03E0(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x03F8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatTypeDefId                         CallFunc_Array_Get_Item;                           // 0x0450(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue;          // 0x0468(0x02C8)(ConstParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0738(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74A[0x2];                                      // 0x074A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x074C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetPercentValue_str;                      // 0x0760(0x0018)()
	int64                                         CallFunc_MakeLiteralInt64_ReturnValue;             // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x0780(0x0050)(HasGetValueTypeHash)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue_1;        // 0x07D0(0x02C8)(ConstParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x0A98(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0AA8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0AC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0AD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetPercentValue_str_1;                    // 0x0AE0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0AF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_3;   // 0x0B08(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x0B58(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0B68(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0B80(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_4;   // 0x0BA8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_GetPercentValue_str_2;                    // 0x0BF8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_5;   // 0x0C10(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_2;                // 0x0C60(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0C70(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0C88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0CA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB2[0x6];                                      // 0x0CB2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPercentValue_str_3;                    // 0x0CB8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_6;   // 0x0CD0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_3;                // 0x0D20(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0D30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0D40(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0D58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0D78(0x0018)()
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0D90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_7;   // 0x0D98(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE9[0x7];                                      // 0x0DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_4;                // 0x0DF0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E01[0x7];                                      // 0x0E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0E08(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0E20(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_8;   // 0x0E38(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_5;                // 0x0E88(0x0010)(ReferenceParm)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue_2;        // 0x0E98(0x02C8)(ConstParm)
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x1160(0x0018)()
	class FText                                   CallFunc_TextTrimTrailing_ReturnValue;             // 0x1178(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x1190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x1198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_GetActualPlayer_ReturnValue;              // 0x11A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Stat_Base_By_Init_base;               // 0x11B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStat_ret;                       // 0x11B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStat_ret_1;                     // 0x11C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x11C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x11D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x11D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x11E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_9;   // 0x11E8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_10;  // 0x1238(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_6;                // 0x1288(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_7;                // 0x1298(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x12A8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x12C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x12D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_6;          // 0x12E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStat_ret_2;                     // 0x12F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStat_ret_3;                     // 0x1300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Stat_Base_By_Init_base_1;             // 0x1308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterClass                               CallFunc_GetPrimaryClass_ReturnValue;              // 0x1310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1311[0x7];                                     // 0x1311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Map_Find_Value;                           // 0x1318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1321[0x7];                                     // 0x1321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         CallFunc_GetBaseCharacter_ReturnValue;             // 0x1328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Stat_Base_By_Init_base_2;             // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FExprValue                             CallFunc_EvaluateCombatExpression_ReturnValue;     // 0x1338(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateCombatExpression_ReturnValue_1;   // 0x1400(0x00C8)()
	double                                        CallFunc_GetDisplayStatFromRaw_ret;                // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStatFromRaw_ret_1;              // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetStatDescription) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetStatDescription");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetStatDescription) == 0x0014D8, "Wrong size on WBP_CombatTooltipGenerator_C_GetStatDescription");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Stat) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Stat' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, totalStatValue) == 0x0002C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::totalStatValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, hasRating) == 0x0002D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::hasRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Rating) == 0x0002D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Rating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, totalNonRating) == 0x0002E0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::totalNonRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, statTotal) == 0x0002E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::statTotal' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, baseTotal) == 0x0002F0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::baseTotal' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, base) == 0x0002F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::base' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, baseStatsStr) == 0x000300, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::baseStatsStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, calcStr) == 0x000310, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::calcStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, wfallStr) == 0x000320, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::wfallStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Temp_bool_Variable) == 0x000330, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Temp_text_Variable) == 0x000338, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000350, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EqualEqual_Int64Int64_ReturnValue_1) == 0x000351, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EqualEqual_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EqualEqual_Int64Int64_ReturnValue_2) == 0x000352, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EqualEqual_Int64Int64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EqualEqual_Int64Int64_ReturnValue_3) == 0x000353, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EqualEqual_Int64Int64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Array_Length_ReturnValue) == 0x000354, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_BooleanOR_ReturnValue) == 0x000358, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue) == 0x000360, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_ParseIntoArray_ReturnValue) == 0x000370, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_JoinStringArray_ReturnValue) == 0x000380, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData) == 0x000390, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_StringToText_ReturnValue) == 0x0003E0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x0003F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Set_Contains_ReturnValue) == 0x000448, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Temp_int_Array_Index_Variable) == 0x00044C, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Array_Get_Item) == 0x000450, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetStatRecordByGuid_ReturnValue) == 0x000468, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetStatRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, Temp_int_Loop_Counter_Variable) == 0x000730, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_NameToString_ReturnValue) == 0x000738, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Contains_ReturnValue) == 0x000748, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Less_IntInt_ReturnValue) == 0x000749, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Add_IntInt_ReturnValue) == 0x00074C, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Set_Contains_ReturnValue_1) == 0x000750, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000758, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetPercentValue_str) == 0x000760, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetPercentValue_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_MakeLiteralInt64_ReturnValue) == 0x000778, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_MakeLiteralInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x000780, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetStatRecordByGuid_ReturnValue_1) == 0x0007D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetStatRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array) == 0x000A98, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue) == 0x000AA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000AC0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Concat_StrStr_ReturnValue) == 0x000AD0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetPercentValue_str_1) == 0x000AE0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetPercentValue_str_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000AF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_3) == 0x000B08, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_1) == 0x000B58, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_1) == 0x000B68, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000B80, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000B90, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000B98, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000BA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_4) == 0x000BA8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetPercentValue_str_2) == 0x000BF8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetPercentValue_str_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_5) == 0x000C10, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_2) == 0x000C60, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_2) == 0x000C70, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000C88, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000C98, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000CA0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000CB0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Not_PreBool_ReturnValue) == 0x000CB1, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetPercentValue_str_3) == 0x000CB8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetPercentValue_str_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_6) == 0x000CD0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_3) == 0x000D20, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000D30, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_3) == 0x000D40, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000D58, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000D68, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000D78, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Len_ReturnValue) == 0x000D90, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_7) == 0x000D98, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Greater_IntInt_ReturnValue) == 0x000DE8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_4) == 0x000DF0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_BooleanAND_ReturnValue) == 0x000E00, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_4) == 0x000E08, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, K2Node_Select_Default) == 0x000E20, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_8) == 0x000E38, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_5) == 0x000E88, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetStatRecordByGuid_ReturnValue_2) == 0x000E98, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetStatRecordByGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_5) == 0x001160, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_TextTrimTrailing_ReturnValue) == 0x001178, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_TextTrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetOwningPlayer_ReturnValue) == 0x001190, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x001198, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, K2Node_DynamicCast_bSuccess) == 0x0011A0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetActualPlayer_ReturnValue) == 0x0011A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetActualPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Get_Stat_Base_By_Init_base) == 0x0011B0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Get_Stat_Base_By_Init_base' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStat_ret) == 0x0011B8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStat_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStat_ret_1) == 0x0011C0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStat_ret_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0011C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0011D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0011D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0011E0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_9) == 0x0011E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_FormatArgumentData_10) == 0x001238, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_FormatArgumentData_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_6) == 0x001288, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, UniqueObjectNameForCooking_Array_7) == 0x001298, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::UniqueObjectNameForCooking_Array_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_6) == 0x0012A8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Format_ReturnValue_7) == 0x0012C0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_5) == 0x0012D8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Conv_TextToString_ReturnValue_6) == 0x0012E8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Conv_TextToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStat_ret_2) == 0x0012F8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStat_ret_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStat_ret_3) == 0x001300, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStat_ret_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Get_Stat_Base_By_Init_base_1) == 0x001308, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Get_Stat_Base_By_Init_base_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetPrimaryClass_ReturnValue) == 0x001310, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetPrimaryClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Map_Find_Value) == 0x001318, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Map_Find_ReturnValue) == 0x001320, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetBaseCharacter_ReturnValue) == 0x001328, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetBaseCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_Get_Stat_Base_By_Init_base_2) == 0x001330, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_Get_Stat_Base_By_Init_base_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EvaluateCombatExpression_ReturnValue) == 0x001338, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EvaluateCombatExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_EvaluateCombatExpression_ReturnValue_1) == 0x001400, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_EvaluateCombatExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStatFromRaw_ret) == 0x0014C8, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStatFromRaw_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatDescription, CallFunc_GetDisplayStatFromRaw_ret_1) == 0x0014D0, "Member 'WBP_CombatTooltipGenerator_C_GetStatDescription::CallFunc_GetDisplayStatFromRaw_ret_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetStatContested_Target
// 0x0088 (0x0088 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetStatContested_Target final
{
public:
	double                                        PercentValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PercentValue_Contesting;                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContestedValue;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContestedRating;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StatRating;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetStatContested_Target) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetStatContested_Target");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetStatContested_Target) == 0x000088, "Wrong size on WBP_CombatTooltipGenerator_C_GetStatContested_Target");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, PercentValue) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::PercentValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, PercentValue_Contesting) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::PercentValue_Contesting' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, ContestedValue) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::ContestedValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, ContestedRating) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::ContestedRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, StatRating) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::StatRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_FMax_ReturnValue) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested_Target, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested_Target::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetStatContested
// 0x0090 (0x0090 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetStatContested final
{
public:
	double                                        RawStatValue;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ContestedRatingCurve;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContestedValue;                                    // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ContestedRating;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StatRating;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvaluateCurve_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_EvaluateCurve_X_ImplicitCast;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetStatContested) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetStatContested");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetStatContested) == 0x000090, "Wrong size on WBP_CombatTooltipGenerator_C_GetStatContested");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, RawStatValue) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::RawStatValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, Level) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::Level' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, ContestedRatingCurve) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::ContestedRatingCurve' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, ContestedValue) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::ContestedValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, ContestedRating) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::ContestedRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, StatRating) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::StatRating' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_EvaluateCurve_ReturnValue) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_EvaluateCurve_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetStatContested, CallFunc_EvaluateCurve_X_ImplicitCast) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_GetStatContested::CallFunc_EvaluateCurve_X_ImplicitCast' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetSkillTreeName
// 0x0218 (0x0218 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetSkillTreeName final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 SkillTreeName;                                     // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkillTreeId                           CallFunc_GetCurrentWeaponSkilltree_ReturnValue;    // 0x0030(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FSkillTreeRecord                       CallFunc_GetSkillTreeRecordByGuid_ReturnValue;     // 0x0048(0x01C0)(ConstParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetSkillTreeName) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetSkillTreeName");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetSkillTreeName) == 0x000218, "Wrong size on WBP_CombatTooltipGenerator_C_GetSkillTreeName");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, String) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::String' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, Actor) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::Actor' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, SkillTreeName) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::SkillTreeName' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, CallFunc_GetCurrentWeaponSkilltree_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::CallFunc_GetCurrentWeaponSkilltree_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, CallFunc_GetSkillTreeRecordByGuid_ReturnValue) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::CallFunc_GetSkillTreeRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetSkillTreeName, CallFunc_Conv_NameToString_ReturnValue) == 0x000208, "Member 'WBP_CombatTooltipGenerator_C_GetSkillTreeName::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetRichPower
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetRichPower final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Args;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 outStr;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          has;                                               // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetRich_rich;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRich_rich_1;                           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRich_rich_2;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetRichPower) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetRichPower");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetRichPower) == 0x0000C0, "Wrong size on WBP_CombatTooltipGenerator_C_GetRichPower");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, Str) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, Args) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, outStr) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::outStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, has) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::has' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Contains_ReturnValue) == 0x000031, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_GetRich_rich) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_GetRich_rich' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Replace_ReturnValue) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Contains_ReturnValue_1) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Contains_ReturnValue_2) == 0x000059, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Contains_ReturnValue_3) == 0x00005A, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_BooleanOR_ReturnValue) == 0x00005B, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_GetRich_rich_1) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_GetRich_rich_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Replace_ReturnValue_1) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_GetRich_rich_2) == 0x0000A0, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_GetRich_rich_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRichPower, CallFunc_Replace_ReturnValue_2) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetRichPower::CallFunc_Replace_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetRich
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetRich final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Tags;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 rich;                                              // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
	class FText                                   CallFunc_FindFormat_format;                        // 0x0048(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0060(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetRich) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetRich");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetRich) == 0x0000E8, "Wrong size on WBP_CombatTooltipGenerator_C_GetRich");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, Str) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetRich::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, Tags) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetRich::Tags' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, rich) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetRich::rich' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetRich::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, CallFunc_FindFormat_format) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetRich::CallFunc_FindFormat_format' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, UniqueObjectNameForCooking_FormatArgumentData) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetRich::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, UniqueObjectNameForCooking_Array) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetRich::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'WBP_CombatTooltipGenerator_C_GetRich::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRich, CallFunc_Conv_TextToString_ReturnValue) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_GetRich::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetRankTooltip
// 0x05E0 (0x05E0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetRankTooltip final
{
public:
	struct FStatFormulaTypeRecord                 formula;                                           // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Args;                                              // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Source;                                            // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 outputStr;                                         // 0x0078(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Num;                                               // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 postfix;                                           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 myArgs;                                            // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          isNeg;                                             // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 mainStr;                                           // 0x00B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Prefix;                                            // 0x00C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00D8(0x0018)()
	double                                        CallFunc_EvaluateFormula_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00F8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x2];                                      // 0x0112(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0128(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0140(0x0018)()
	bool                                          Temp_bool_Variable_4;                              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0x018E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0x018F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_8;                   // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196[0x2];                                      // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_9;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_10;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A2[0x2];                                      // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_11;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_12;                  // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x01B8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E8(0x0018)()
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0208(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_13;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0278(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str;                           // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x02C8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x02F0(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x0310(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x0368(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0378(0x0018)()
	class FString                                 K2Node_Select_Default_6;                           // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x03A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x03B0(0x0018)()
	class FString                                 CallFunc_GetRichPower_outStr;                      // 0x03C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRichPower_has;                         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x03E0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0438(0x0018)()
	class FText                                   K2Node_Select_Default_7;                           // 0x0450(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_3;   // 0x0468(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_4;   // 0x04B8(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_8;                           // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0520(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_5;   // 0x0538(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x0588(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0598(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x05B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x05C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x05D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetRankTooltip) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetRankTooltip");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetRankTooltip) == 0x0005E0, "Wrong size on WBP_CombatTooltipGenerator_C_GetRankTooltip");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, formula) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::formula' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Args) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Source) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, outputStr) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::outputStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Num) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Num' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, postfix) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::postfix' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, myArgs) == 0x0000A0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::myArgs' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, isNeg) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::isNeg' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, mainStr) == 0x0000B8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::mainStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Prefix) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Prefix' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_text_Variable) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_EvaluateFormula_ReturnValue) == 0x0000F0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_EvaluateFormula_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_text_Variable_1) == 0x0000F8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable) == 0x000110, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_1) == 0x000111, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_int_Variable) == 0x000114, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_2) == 0x000118, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_int_Variable_1) == 0x00011C, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_int_Variable_2) == 0x000120, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_3) == 0x000124, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_text_Variable_2) == 0x000128, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_text_Variable_3) == 0x000140, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_4) == 0x000158, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_5) == 0x000159, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_string_Variable) == 0x000160, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_string_Variable_1) == 0x000170, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Abs_ReturnValue) == 0x000180, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue) == 0x000188, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_1) == 0x000189, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_2) == 0x00018A, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_3) == 0x00018B, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_4) == 0x00018C, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_5) == 0x00018D, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_6) == 0x00018E, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_7) == 0x00018F, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_8) == 0x000190, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_BooleanOR_ReturnValue) == 0x000191, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_6) == 0x000192, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_7) == 0x000193, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_bool_Variable_8) == 0x000194, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000195, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000198, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_9) == 0x0001A0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_10) == 0x0001A1, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default) == 0x0001A4, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_11) == 0x0001A8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_1) == 0x0001AC, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_12) == 0x0001B0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_2) == 0x0001B8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_TextToString_ReturnValue) == 0x0001D0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_3) == 0x0001E0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Abs_ReturnValue_1) == 0x000200, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData) == 0x000208, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Contains_ReturnValue_13) == 0x000258, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Contains_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_real_Variable) == 0x000260, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_4) == 0x000268, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Len_ReturnValue) == 0x000270, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_StartsWith_ReturnValue) == 0x000274, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_GetSubstring_ReturnValue) == 0x000278, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000288, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_GetTimeStr_str) == 0x000290, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_GetTimeStr_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, Temp_real_Variable_1) == 0x0002A0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Concat_StrStr_ReturnValue) == 0x0002A8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_5) == 0x0002B8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0002C8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0002E0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0002F0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Not_PreBool_ReturnValue) == 0x000308, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x000310, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_BooleanAND_ReturnValue) == 0x000360, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_Array) == 0x000368, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Format_ReturnValue) == 0x000378, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_6) == 0x000390, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0003A0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0003B0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_GetRichPower_outStr) == 0x0003C8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_GetRichPower_outStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_GetRichPower_has) == 0x0003D8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_GetRichPower_has' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x0003E0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_BooleanOR_ReturnValue_1) == 0x000430, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000438, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_7) == 0x000450, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData_3) == 0x000468, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData_4) == 0x0004B8, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Len_ReturnValue_1) == 0x000508, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Greater_IntInt_ReturnValue) == 0x00050C, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, K2Node_Select_Default_8) == 0x000510, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000520, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_FormatArgumentData_5) == 0x000538, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, UniqueObjectNameForCooking_Array_1) == 0x000588, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Format_ReturnValue_1) == 0x000598, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Conv_TextToString_ReturnValue_3) == 0x0005B0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0005C0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetRankTooltip, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0005D0, "Member 'WBP_CombatTooltipGenerator_C_GetRankTooltip::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetPowerMult
// 0x0938 (0x0938 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetPowerMult final
{
public:
	class UAoCStatsComponent*                     Stats;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   hitTags;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Mult;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          addedPrimaryPower;                                 // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        myMult;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue_3;                 // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_2;                         // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_MakeLiteralInt64_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_MakeLiteralInt64_ReturnValue_1;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue;          // 0x00A0(0x02C8)(ConstParm)
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue_1;        // 0x0368(0x02C8)(ConstParm)
	double                                        CallFunc_GetDisplayStat_ret;                       // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStat_ret_1;                     // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Map_Find_Value;                           // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659[0x7];                                      // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordByGuid_ReturnValue_2;        // 0x0660(0x02C8)(ConstParm)
	double                                        CallFunc_GetDisplayStat_ret_2;                     // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetPowerMult) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetPowerMult");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetPowerMult) == 0x000938, "Wrong size on WBP_CombatTooltipGenerator_C_GetPowerMult");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Stats) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Stats' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, hitTags) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::hitTags' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Mult) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Mult' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, addedPrimaryPower) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::addedPrimaryPower' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, myMult) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::myMult' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Length_ReturnValue_2) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x00003C, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MatchesTag_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MatchesTag_ReturnValue_1) == 0x000059, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MatchesTag_ReturnValue_2) == 0x00005A, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MatchesTag_ReturnValue_3) == 0x00005B, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MatchesTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Array_Index_Variable_2) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Array_Get_Item_2) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Less_IntInt_ReturnValue_2) == 0x000084, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_IntInt_ReturnValue_2) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MakeLiteralInt64_ReturnValue) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MakeLiteralInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_MakeLiteralInt64_ReturnValue_1) == 0x000098, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_MakeLiteralInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetStatRecordByGuid_ReturnValue) == 0x0000A0, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetStatRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetStatRecordByGuid_ReturnValue_1) == 0x000368, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetStatRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetDisplayStat_ret) == 0x000630, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetDisplayStat_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetDisplayStat_ret_1) == 0x000638, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetDisplayStat_ret_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000640, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000648, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Map_Find_Value) == 0x000650, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Map_Find_ReturnValue) == 0x000658, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetStatRecordByGuid_ReturnValue_2) == 0x000660, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetStatRecordByGuid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_GetDisplayStat_ret_2) == 0x000928, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_GetDisplayStat_ret_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPowerMult, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000930, "Member 'WBP_CombatTooltipGenerator_C_GetPowerMult::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetPercentValue
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetPercentValue final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isPercent;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Str;                                               // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0050(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00E0(0x0018)()
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetPercentValue) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetPercentValue");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetPercentValue) == 0x0000F8, "Wrong size on WBP_CombatTooltipGenerator_C_GetPercentValue");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, Value) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, isPercent) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::isPercent' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, Str) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, Temp_bool_Variable) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, UniqueObjectNameForCooking_FormatArgumentData) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, UniqueObjectNameForCooking_Array) == 0x0000B8, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetPercentValue, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_CombatTooltipGenerator_C_GetPercentValue::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetItemDescriptionText
// 0x0758 (0x0758 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetItemDescriptionText final
{
public:
	struct FItemRecord                            ItemRecord;                                        // 0x0000(0x0758)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetItemDescriptionText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetItemDescriptionText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetItemDescriptionText) == 0x000758, "Wrong size on WBP_CombatTooltipGenerator_C_GetItemDescriptionText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetItemDescriptionText, ItemRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetItemDescriptionText::ItemRecord' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetItemCertificationText
// 0x0018 (0x0018 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetItemCertificationText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetItemCertificationText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetItemCertificationText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetItemCertificationText) == 0x000018, "Wrong size on WBP_CombatTooltipGenerator_C_GetItemCertificationText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetItemCertificationText, Text) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetItemCertificationText::Text' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetIndexBetter
// 0x0090 (0x0090 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetIndexBetter final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 substr;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 indexStr;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetIndexBetter) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetIndexBetter");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetIndexBetter) == 0x000090, "Wrong size on WBP_CombatTooltipGenerator_C_GetIndexBetter");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, Str) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, substr) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::substr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, Index_0) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, indexStr) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::indexStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Len_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_FindSubstring_ReturnValue) == 0x00003C, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Contains_ReturnValue) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Len_ReturnValue_1) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, Temp_bool_Variable) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, Temp_int_Variable) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_IsNumeric_ReturnValue) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000074, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Not_PreBool_ReturnValue) == 0x000075, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Conv_StringToInt_ReturnValue) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_BooleanAND_ReturnValue) == 0x00007C, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetIndexBetter, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetIndexBetter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetHitString
// 0x1E38 (0x1E38 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetHitString final
{
public:
	class ABaseCharacter*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAbilityHitRecord                      Record;                                            // 0x0008(0x0A30)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Args;                                              // 0x0A38(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Str;                                               // 0x0A48(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          shouldAppend;                                      // 0x0A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          embedFor;                                          // 0x0A59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5A[0x6];                                      // 0x0A5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatModId                             StatMod;                                           // 0x0A60(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          embedDur;                                          // 0x0A78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A79[0x7];                                      // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        effectDur;                                         // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEffectId                              EffectId;                                          // 0x0A88(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FAoCExpression                         stackCountExp;                                     // 0x0AA0(0x0050)(Edit, BlueprintVisible)
	bool                                          shouldHide;                                        // 0x0AF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 hitStr;                                            // 0x0AF8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable;                              // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0B11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x0B12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x0B13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBetter_index;                     // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBetter_index_1;                   // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1C[0x4];                                      // 0x0B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0B20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B31[0x3];                                      // 0x0B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_5;                   // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0B39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0B3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_6;                   // 0x0B3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_7;                   // 0x0B3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_8;                   // 0x0B3E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3F[0x1];                                      // 0x0B3F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0B40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_9;                   // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_10;                  // 0x0B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_11;                  // 0x0B52(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0B53(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0B55(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_3;         // 0x0B56(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B57[0x1];                                      // 0x0B57(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable_1;                            // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B62[0x6];                                      // 0x0B62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable_2;                            // 0x0B68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value;                // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStatModRecord                         CallFunc_GetStatModRecordByGuid_ReturnValue;       // 0x0B78(0x0110)(ConstParm)
	class FString                                 CallFunc_GetStatModString_str;                     // 0x0C88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetRich_rich;                             // 0x0C98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_Int64Int64_ReturnValue;          // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CAA[0x6];                                      // 0x0CAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable_3;                            // 0x0CB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB9[0x7];                                      // 0x0CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEffectRecord                          CallFunc_GetEffectRecordByGuid_ReturnValue;        // 0x0CC0(0x0788)(ConstParm)
	class FString                                 CallFunc_GetTimeStr_str;                           // 0x1448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_4;                            // 0x1458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FEffectRecord                          CallFunc_GetEffectRecordByGuid_ReturnValue_1;      // 0x1470(0x0788)(ConstParm)
	double                                        CallFunc_EvalExpressionFloat_value_1;              // 0x1BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEffectString_str;                      // 0x1C00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int64                                         CallFunc_Round64_ReturnValue;                      // 0x1C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x1C18(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x1C30(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x1C80(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x1CD0(0x0010)(ReferenceParm)
	bool                                          CallFunc_LessEqual_Int64Int64_ReturnValue;         // 0x1CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE1[0x7];                                     // 0x1CE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1CE8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x1D00(0x0050)(HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_5;                            // 0x1D50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x1D58(0x0010)(ReferenceParm)
	double                                        CallFunc_EvalExpressionFloat_value_2;              // 0x1D68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x1D70(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1D88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_6;                            // 0x1D98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x1DA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_7;                            // 0x1DB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x1DB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value_3;              // 0x1DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x1DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x1DD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD9[0x7];                                     // 0x1DD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable_8;                            // 0x1DE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x1DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_9;                            // 0x1DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x1DF8(0x0018)()
	bool                                          CallFunc_EvalExpressionBool_value;                 // 0x1E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E11[0x7];                                     // 0x1E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1E18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x1E28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetHitString) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetHitString");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetHitString) == 0x001E38, "Wrong size on WBP_CombatTooltipGenerator_C_GetHitString");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Source) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Record) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Record' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Args) == 0x000A38, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Str) == 0x000A48, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, shouldAppend) == 0x000A58, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::shouldAppend' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, embedFor) == 0x000A59, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::embedFor' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, StatMod) == 0x000A60, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::StatMod' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, embedDur) == 0x000A78, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::embedDur' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, effectDur) == 0x000A80, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::effectDur' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, EffectId) == 0x000A88, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::EffectId' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, stackCountExp) == 0x000AA0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::stackCountExp' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, shouldHide) == 0x000AF0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::shouldHide' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, hitStr) == 0x000AF8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::hitStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable) == 0x000B08, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue) == 0x000B10, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_1) == 0x000B11, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_2) == 0x000B12, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_3) == 0x000B13, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetIndexBetter_index) == 0x000B14, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetIndexBetter_index' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetIndexBetter_index_1) == 0x000B18, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetIndexBetter_index_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Replace_ReturnValue) == 0x000B20, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_4) == 0x000B30, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Conv_StringToInt_ReturnValue) == 0x000B34, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_5) == 0x000B38, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_IsNumeric_ReturnValue) == 0x000B39, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Not_PreBool_ReturnValue) == 0x000B3A, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_6) == 0x000B3B, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_BooleanAND_ReturnValue) == 0x000B3C, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_7) == 0x000B3D, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_8) == 0x000B3E, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Concat_StrStr_ReturnValue) == 0x000B40, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_9) == 0x000B50, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_10) == 0x000B51, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Contains_ReturnValue_11) == 0x000B52, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Contains_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000B53, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000B54, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000B55, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Array_IsValidIndex_ReturnValue_3) == 0x000B56, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Array_IsValidIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_1) == 0x000B58, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_bool_Variable) == 0x000B60, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Not_PreBool_ReturnValue_1) == 0x000B61, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_2) == 0x000B68, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_EvalExpressionFloat_value) == 0x000B70, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_EvalExpressionFloat_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetStatModRecordByGuid_ReturnValue) == 0x000B78, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetStatModRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetStatModString_str) == 0x000C88, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetStatModString_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetRich_rich) == 0x000C98, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetRich_rich' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_NotEqual_Int64Int64_ReturnValue) == 0x000CA8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_NotEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000CA9, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_3) == 0x000CB0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_BooleanAND_ReturnValue_1) == 0x000CB8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetEffectRecordByGuid_ReturnValue) == 0x000CC0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetEffectRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetTimeStr_str) == 0x001448, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetTimeStr_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_4) == 0x001458, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001460, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetEffectRecordByGuid_ReturnValue_1) == 0x001470, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetEffectRecordByGuid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_EvalExpressionFloat_value_1) == 0x001BF8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_EvalExpressionFloat_value_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_GetEffectString_str) == 0x001C00, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_GetEffectString_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Round64_ReturnValue) == 0x001C10, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Round64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Conv_StringToText_ReturnValue) == 0x001C18, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, UniqueObjectNameForCooking_FormatArgumentData) == 0x001C30, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x001C80, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, UniqueObjectNameForCooking_Array) == 0x001CD0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_LessEqual_Int64Int64_ReturnValue) == 0x001CE0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_LessEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Format_ReturnValue) == 0x001CE8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x001D00, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_5) == 0x001D50, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, UniqueObjectNameForCooking_Array_1) == 0x001D58, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_EvalExpressionFloat_value_2) == 0x001D68, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_EvalExpressionFloat_value_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Format_ReturnValue_1) == 0x001D70, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Conv_TextToString_ReturnValue) == 0x001D88, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_6) == 0x001D98, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, K2Node_Select_Default) == 0x001DA0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_7) == 0x001DB0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x001DB8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_EvalExpressionFloat_value_3) == 0x001DC8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_EvalExpressionFloat_value_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x001DD0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_bool_Variable_1) == 0x001DD8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_8) == 0x001DE0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, K2Node_Select_Default_1) == 0x001DE8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, Temp_object_Variable_9) == 0x001DF0, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Conv_DoubleToText_ReturnValue) == 0x001DF8, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_EvalExpressionBool_value) == 0x001E10, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_EvalExpressionBool_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001E18, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetHitString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x001E28, "Member 'WBP_CombatTooltipGenerator_C_GetHitString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetGuildEffectDescriptionRichText
// 0x0080 (0x0080 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText final
{
public:
	struct FGuildEffectRecord                     GuildEffectRecord;                                 // 0x0000(0x0080)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText) == 0x000080, "Wrong size on WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText, GuildEffectRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetGuildEffectDescriptionRichText::GuildEffectRecord' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetExpansionDescriptionText
// 0x0428 (0x0428 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText final
{
public:
	struct FExpansionRecord                       ExpansionRecord;                                   // 0x0000(0x0428)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText) == 0x000428, "Wrong size on WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText, ExpansionRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetExpansionDescriptionText::ExpansionRecord' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetEffectString
// 0x0BB8 (0x0BB8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetEffectString final
{
public:
	class ABaseCharacter*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEffectRecord                          Record;                                            // 0x0008(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 Args;                                              // 0x0790(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Str;                                               // 0x07A0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         listIndex;                                         // 0x07B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B4[0x4];                                      // 0x07B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x07B8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_CheckSpecificEffectArgs_ret;              // 0x07D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_3;                   // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_4;                   // 0x07EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x07EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EC[0x4];                                      // 0x07EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0800(0x0050)(HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output;                  // 0x0850(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output_1;                // 0x0860(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0870(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0888(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x08A0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_2;   // 0x08F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x0940(0x0010)(ReferenceParm)
	class FString                                 CallFunc_ParseDescription_output_2;                // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0960(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0978(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output_3;                // 0x0988(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_3;   // 0x0998(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x09E8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_4;   // 0x0A00(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_5;   // 0x0A50(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_1;                // 0x0AA0(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_2;                // 0x0AB0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0AC0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0AD8(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0AF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0B00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_6;   // 0x0B10(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array_3;                // 0x0B60(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0B70(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0B88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0B98(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0BAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAD[0x3];                                      // 0x0BAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetEffectString) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetEffectString");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetEffectString) == 0x000BB8, "Wrong size on WBP_CombatTooltipGenerator_C_GetEffectString");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Source) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Record) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Record' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Args) == 0x000790, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Str) == 0x0007A0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, listIndex) == 0x0007B0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::listIndex' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Temp_string_Variable) == 0x0007B8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Contains_ReturnValue) == 0x0007C8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Contains_ReturnValue_1) == 0x0007C9, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_CheckSpecificEffectArgs_ret) == 0x0007D0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_CheckSpecificEffectArgs_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Contains_ReturnValue_2) == 0x0007E0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Len_ReturnValue) == 0x0007E4, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Contains_ReturnValue_3) == 0x0007E8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Contains_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Greater_IntInt_ReturnValue) == 0x0007E9, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Contains_ReturnValue_4) == 0x0007EA, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Contains_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_BooleanOR_ReturnValue) == 0x0007EB, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_TextToString_ReturnValue) == 0x0007F0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData) == 0x000800, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_ParseDescription_output) == 0x000850, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_ParseDescription_output' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_ParseDescription_output_1) == 0x000860, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_ParseDescription_output_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_StringToText_ReturnValue) == 0x000870, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000888, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x0008A0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_2) == 0x0008F0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_Array) == 0x000940, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_ParseDescription_output_2) == 0x000950, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_ParseDescription_output_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Format_ReturnValue) == 0x000960, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000978, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_ParseDescription_output_3) == 0x000988, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_ParseDescription_output_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_3) == 0x000998, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0009E8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_4) == 0x000A00, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_5) == 0x000A50, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_Array_1) == 0x000AA0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_Array_2) == 0x000AB0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Format_ReturnValue_1) == 0x000AC0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Format_ReturnValue_2) == 0x000AD8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000AF0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000B00, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_FormatArgumentData_6) == 0x000B10, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, UniqueObjectNameForCooking_Array_3) == 0x000B60, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::UniqueObjectNameForCooking_Array_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Format_ReturnValue_3) == 0x000B70, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000B88, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, Temp_string_Variable_1) == 0x000B98, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Array_Add_ReturnValue) == 0x000BA8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Set_Contains_ReturnValue) == 0x000BAC, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectString, CallFunc_Array_Add_ReturnValue_1) == 0x000BB0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectString::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetEffectDescriptionRichText
// 0x0818 (0x0818 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText final
{
public:
	struct FEffectRecord                          EffectRecord;                                      // 0x0000(0x0788)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEffectInstUI                          EffectInst;                                        // 0x0788(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	TArray<class FString>                         EffectStrings;                                     // 0x07B0(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x07D0(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_GetActualPlayer_ReturnValue;              // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output;                  // 0x0808(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText) == 0x000818, "Wrong size on WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, EffectRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::EffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, EffectInst) == 0x000788, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::EffectInst' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, EffectStrings) == 0x0007B0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::EffectStrings' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, CallFunc_Conv_TextToString_ReturnValue) == 0x0007C0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, CallFunc_Conv_StringToText_ReturnValue) == 0x0007D0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, CallFunc_GetOwningPlayer_ReturnValue) == 0x0007E8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x0007F0, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, K2Node_DynamicCast_bSuccess) == 0x0007F8, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, CallFunc_GetActualPlayer_ReturnValue) == 0x000800, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::CallFunc_GetActualPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText, CallFunc_ParseDescription_output) == 0x000808, "Member 'WBP_CombatTooltipGenerator_C_GetEffectDescriptionRichText::CallFunc_ParseDescription_output' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetDisplayStatFromRaw
// 0x02E8 (0x02E8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw final
{
public:
	struct FStatTypeDefRecord                     StatRecord;                                        // 0x0000(0x02C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Raw;                                               // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ret;                                               // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw) == 0x0002E8, "Wrong size on WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw, StatRecord) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw::StatRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw, Raw) == 0x0002C8, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw::Raw' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw, ret) == 0x0002D0, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw::ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStatFromRaw::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetDisplayStat
// 0x0308 (0x0308 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetDisplayStat final
{
public:
	class UAoCStatsComponent*                     Stats;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FStatTypeDefRecord                     StatRecord;                                        // 0x0008(0x02C8)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        ret;                                               // 0x02D0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameStatFromGuid_ReturnValue;          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ret_ImplicitCast;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetDisplayStat) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetDisplayStat");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetDisplayStat) == 0x000308, "Wrong size on WBP_CombatTooltipGenerator_C_GetDisplayStat");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, Stats) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::Stats' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, StatRecord) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::StatRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, ret) == 0x0002D0, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, CallFunc_GetGameStatFromGuid_ReturnValue) == 0x0002D8, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::CallFunc_GetGameStatFromGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0002E8, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, K2Node_FunctionResult_ret_ImplicitCast) == 0x0002F0, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::K2Node_FunctionResult_ret_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0002F8, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDisplayStat, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'WBP_CombatTooltipGenerator_C_GetDisplayStat::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetDelimRest
// 0x0058 (0x0058 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetDelimRest final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Left;                                              // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 rest;                                              // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetDelimRest) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetDelimRest");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetDelimRest) == 0x000058, "Wrong size on WBP_CombatTooltipGenerator_C_GetDelimRest");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, Str) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, Left) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::Left' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, rest) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::rest' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, CallFunc_Split_LeftS) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, CallFunc_Split_RightS) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetDelimRest, CallFunc_Split_ReturnValue) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetDelimRest::CallFunc_Split_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetChunks_FAST
// 0x0110 (0x0110 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetChunks_FAST final
{
public:
	class FString                                 Description;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ret;                                               // 0x0010(0x0010)(Parm, OutParm)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Remainder;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         Chunks;                                            // 0x0038(0x0010)(Edit, BlueprintVisible)
	int32                                         Depth;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndIndex;                                          // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndex;                                        // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_2;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue_1;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_2;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetChunks_FAST) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetChunks_FAST");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetChunks_FAST) == 0x000110, "Wrong size on WBP_CombatTooltipGenerator_C_GetChunks_FAST");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Description) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Description' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, ret) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Index_0) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Index_0' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Remainder) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Remainder' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Chunks) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Chunks' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Depth) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Depth' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, EndIndex) == 0x00004C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::EndIndex' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, StartIndex) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::StartIndex' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_int_Variable) == 0x000054, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Len_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Len_ReturnValue_1) == 0x00005C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_int_Variable_1) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_int_Variable_2) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GetSubstring_ReturnValue) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_bool_Variable) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000094, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GetSubstring_ReturnValue_1) == 0x000098, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_bool_Variable_1) == 0x0000A8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, Temp_bool_Variable_2) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000B4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000BD, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_FindSubstring_ReturnValue) == 0x0000C0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C5, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_FindSubstring_ReturnValue_1) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_FindSubstring_ReturnValue_2) == 0x0000CC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_FindSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000D0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000D1, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000D2, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0000D3, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_BooleanOR_ReturnValue) == 0x0000D4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D5, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_BooleanAND_ReturnValue) == 0x0000DC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, K2Node_Select_Default) == 0x0000E0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, K2Node_Select_Default_1) == 0x0000E4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, K2Node_Select_Default_2) == 0x0000E8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Min_ReturnValue) == 0x0000EC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Min_ReturnValue_1) == 0x0000F0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Min_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000F4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_GetSubstring_ReturnValue_2) == 0x0000F8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_GetSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks_FAST, CallFunc_Array_Add_ReturnValue_2) == 0x000108, "Member 'WBP_CombatTooltipGenerator_C_GetChunks_FAST::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetChunks
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetChunks final
{
public:
	class FString                                 Description;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ret;                                               // 0x0010(0x0010)(Parm, OutParm)
	TArray<class FString>                         Chunks;                                            // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Depth;                                             // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndIndex;                                          // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndex;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0048(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSubstring_ReturnValue;                 // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_1;               // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSubstring_ReturnValue_2;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetChunks) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetChunks");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetChunks) == 0x0000E8, "Wrong size on WBP_CombatTooltipGenerator_C_GetChunks");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Description) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Description' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, ret) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Chunks) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Chunks' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Depth) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Depth' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, EndIndex) == 0x000034, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::EndIndex' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, StartIndex) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::StartIndex' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Temp_int_Variable) == 0x00003C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Len_ReturnValue) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Temp_int_Variable_1) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000081, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000082, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000083, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_GetSubstring_ReturnValue) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_GetSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000AC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000B4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_GetSubstring_ReturnValue_1) == 0x0000B8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_GetSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_GetSubstring_ReturnValue_2) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_GetSubstring_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Array_Add_ReturnValue_1) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Array_Add_ReturnValue_2) == 0x0000DC, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000E0, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetChunks, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E4, "Member 'WBP_CombatTooltipGenerator_C_GetChunks::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetAbilityDescriptionRichText
// 0x1040 (0x1040 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText final
{
public:
	struct FAoCAbilityRecord                      AbilityDescription;                                // 0x0000(0x1020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FString>                         EffectStrings;                                     // 0x1020(0x0010)(Parm, OutParm)
	class FString                                 CallFunc_GetAbilityDescription_Internal_description; // 0x1030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText) == 0x001040, "Wrong size on WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText, AbilityDescription) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText::AbilityDescription' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText, EffectStrings) == 0x001020, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText::EffectStrings' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText, CallFunc_GetAbilityDescription_Internal_description) == 0x001030, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescriptionRichText::CallFunc_GetAbilityDescription_Internal_description' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.GetAbilityDescription_Internal
// 0x1070 (0x1070 - 0x0000)
struct WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal final
{
public:
	struct FAoCAbilityRecord                      Ability;                                           // 0x0000(0x1020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Description;                                       // 0x1020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x1040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x1048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1051[0x7];                                     // 0x1051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_GetActualPlayer_ReturnValue;              // 0x1058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ParseDescription_output;                  // 0x1060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal) == 0x001070, "Wrong size on WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, Ability) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::Ability' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, Description) == 0x001020, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::Description' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, CallFunc_Conv_TextToString_ReturnValue) == 0x001030, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, CallFunc_GetOwningPlayer_ReturnValue) == 0x001040, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x001048, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, K2Node_DynamicCast_bSuccess) == 0x001050, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, CallFunc_GetActualPlayer_ReturnValue) == 0x001058, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::CallFunc_GetActualPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal, CallFunc_ParseDescription_output) == 0x001060, "Member 'WBP_CombatTooltipGenerator_C_GetAbilityDescription_Internal::CallFunc_ParseDescription_output' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.Get Stat Base By Init
// 0x03E0 (0x03E0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init final
{
public:
	class AAoCPlayerController*                   Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int64                                         statGuid;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         statInitGuid;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        base;                                              // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStatInitializerListRecord             CallFunc_GetStatInitializerRecordByGuid_ReturnValue; // 0x0028(0x0040)(ConstParm)
	class ABaseCharacter*                         CallFunc_GetBaseCharacter_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatInitializer                       CallFunc_Array_Get_Item;                           // 0x0080(0x0068)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatTypeDefRecord                     CallFunc_GetStatRecordById_ReturnValue;            // 0x00F0(0x02C8)(ConstParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable_1;                            // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_2;                            // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDisplayStatFromRaw_ret;                // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init) == 0x0003E0, "Wrong size on WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Player) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Player' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, statGuid) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::statGuid' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, statInitGuid) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::statInitGuid' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, base) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::base' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Temp_object_Variable) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_GetStatInitializerRecordByGuid_ReturnValue) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_GetStatInitializerRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_GetBaseCharacter_ReturnValue) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_GetBaseCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Temp_int_Array_Index_Variable) == 0x000074, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_GetStatRecordById_ReturnValue) == 0x0000F0, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_GetStatRecordById_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_Add_IntInt_ReturnValue) == 0x0003B8, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x0003BC, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Temp_object_Variable_1) == 0x0003C0, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, Temp_object_Variable_2) == 0x0003C8, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_EvalExpressionFloat_value) == 0x0003D0, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_EvalExpressionFloat_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init, CallFunc_GetDisplayStatFromRaw_ret) == 0x0003D8, "Member 'WBP_CombatTooltipGenerator_C_Get_Stat_Base_By_Init::CallFunc_GetDisplayStatFromRaw_ret' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.FindFormat
// 0x0180 (0x0180 - 0x0000)
struct WBP_CombatTooltipGenerator_C_FindFormat final
{
public:
	TArray<struct FGameplayTag>                   Tags;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FText                                   Format;                                            // 0x0010(0x0018)(Parm, OutParm)
	class FString                                 stringer;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_1;                         // 0x0064(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x006C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x00A0(0x0020)()
	struct FGameplayTag                           CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x00C8(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x00E8(0x0020)()
	bool                                          CallFunc_MatchesAnyTags_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue_1;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x010C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item_3;                         // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesAnyTags_ReturnValue_2;             // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0128(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0168(0x0018)()
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_FindFormat) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_FindFormat");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_FindFormat) == 0x000180, "Wrong size on WBP_CombatTooltipGenerator_C_FindFormat");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Tags) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Tags' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Format) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Format' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, stringer) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::stringer' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Array_Index_Variable) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Length_ReturnValue_2) == 0x00004C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Length_ReturnValue_3) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Array_Index_Variable_1) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Get_Item_1) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_struct_Variable) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Loop_Counter_Variable_1) == 0x000074, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Contains_ReturnValue) == 0x000079, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Loop_Counter_Variable_2) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Loop_Counter_Variable_3) == 0x000084, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Less_IntInt_ReturnValue_2) == 0x000088, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Less_IntInt_ReturnValue_3) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Add_IntInt_ReturnValue_3) == 0x000094, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Array_Index_Variable_2) == 0x000098, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x0000A0, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x0000E8, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MatchesAnyTags_ReturnValue) == 0x000108, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MatchesAnyTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MatchesAnyTags_ReturnValue_1) == 0x000109, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MatchesAnyTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_struct_Variable_1) == 0x00010C, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, Temp_int_Array_Index_Variable_3) == 0x000114, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Get_Item_3) == 0x000118, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Array_Contains_ReturnValue_1) == 0x000120, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_MatchesAnyTags_ReturnValue_2) == 0x000121, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_MatchesAnyTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Map_Find_Value) == 0x000128, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Map_Find_ReturnValue) == 0x000140, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Conv_TextToString_ReturnValue) == 0x000148, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_FindFormat, CallFunc_Conv_StringToText_ReturnValue) == 0x000168, "Member 'WBP_CombatTooltipGenerator_C_FindFormat::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.ExecuteUbergraph_WBP_CombatTooltipGenerator
// 0x20D0 (0x20D0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStatTypeDefRecord                     K2Node_Event_StatRecord;                           // 0x0020(0x02C8)(ConstParm)
	struct FExpansionRecord                       K2Node_Event_ExpansionRecord;                      // 0x02E8(0x0428)(ConstParm)
	struct FItemRecord                            K2Node_Event_ItemRecord;                           // 0x0710(0x0758)(ConstParm)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAoCAbilityRecord                      CallFunc_GetAbilityRecordByGuid_ReturnValue;       // 0x0E70(0x1020)(ConstParm)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x1E90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetAbilityDescription_Internal_description; // 0x1EA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetLocalizedGameplayTag_ReturnValue;      // 0x1EB0(0x0018)()
	class FName                                   CallFunc_GetTagName_ReturnValue_1;                 // 0x1EC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1ED0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x1EE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x1EF0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetLocalizedGameplayTag_ReturnValue_1;    // 0x1F00(0x0018)()
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x1F18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1C[0x4];                                     // 0x1F1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1F20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x1F30(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F41[0x3];                                     // 0x1F41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x1F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x1F48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_GetChunks_FAST_ret;                       // 0x1F58(0x0010)(ReferenceParm)
	class FText                                   K2Node_Event_Text;                                 // 0x1F68(0x0018)(ConstParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1F80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1F84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x1F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1F8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8D[0x3];                                     // 0x1F8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x1F90(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA1[0x7];                                     // 0x1FA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x1FA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1FB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x1FC8(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1FE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x1FF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x2000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x2010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2014[0x4];                                     // 0x2014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x2018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x2028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x202C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x202D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202E[0x2];                                     // 0x202E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x2030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x2040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2044[0x4];                                     // 0x2044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuildEffectRecord                     K2Node_Event_GuildEffectRecord;                    // 0x2048(0x0080)(ConstParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x20C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C9[0x3];                                     // 0x20C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x20CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator) == 0x0020D0, "Wrong size on WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, EntryPoint) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, Temp_string_Variable) == 0x000008, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_StatRecord) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_StatRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_ExpansionRecord) == 0x0002E8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_ExpansionRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_ItemRecord) == 0x000710, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_ItemRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetTagName_ReturnValue) == 0x000E68, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetAbilityRecordByGuid_ReturnValue) == 0x000E70, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetAbilityRecordByGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_NameToString_ReturnValue) == 0x001E90, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetAbilityDescription_Internal_description) == 0x001EA0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetAbilityDescription_Internal_description' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetLocalizedGameplayTag_ReturnValue) == 0x001EB0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetLocalizedGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetTagName_ReturnValue_1) == 0x001EC8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetTagName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_TextToString_ReturnValue) == 0x001ED0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_NameToString_ReturnValue_1) == 0x001EE0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_ParseIntoArray_ReturnValue) == 0x001EF0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetLocalizedGameplayTag_ReturnValue_1) == 0x001F00, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetLocalizedGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Array_LastIndex_ReturnValue) == 0x001F18, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001F20, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_ParseIntoArray_ReturnValue_1) == 0x001F30, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001F40, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Array_LastIndex_ReturnValue_1) == 0x001F44, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_TextToString_ReturnValue_2) == 0x001F48, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_GetChunks_FAST_ret) == 0x001F58, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_GetChunks_FAST_ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_Text) == 0x001F68, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_Text' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Array_Length_ReturnValue) == 0x001F80, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Array_Length_ReturnValue_1) == 0x001F84, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Percent_IntInt_ReturnValue) == 0x001F88, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001F8C, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, Temp_string_Variable_1) == 0x001F90, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, Temp_bool_Variable) == 0x001FA0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Select_Default) == 0x001FA8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Concat_StrStr_ReturnValue) == 0x001FB8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Conv_StringToText_ReturnValue) == 0x001FC8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001FE0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Concat_StrStr_ReturnValue_2) == 0x001FF0, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Concat_StrStr_ReturnValue_3) == 0x002000, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, Temp_int_Array_Index_Variable) == 0x002010, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Array_Get_Item) == 0x002018, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Percent_IntInt_ReturnValue_1) == 0x002028, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_SwitchString_CmpSuccess) == 0x00202C, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00202D, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Concat_StrStr_ReturnValue_4) == 0x002030, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, Temp_int_Loop_Counter_Variable) == 0x002040, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, K2Node_Event_GuildEffectRecord) == 0x002048, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::K2Node_Event_GuildEffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Less_IntInt_ReturnValue) == 0x0020C8, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator, CallFunc_Add_IntInt_ReturnValue) == 0x0020CC, "Member 'WBP_CombatTooltipGenerator_C_ExecuteUbergraph_WBP_CombatTooltipGenerator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.EvalExpressionFloat
// 0x0160 (0x0160 - 0x0000)
struct WBP_CombatTooltipGenerator_C_EvalExpressionFloat final
{
public:
	struct FAoCExpression                         Expression;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABaseCharacter*                         Source;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Target;                                            // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Instigator;                                        // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Owner;                                             // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	double                                        Value;                                             // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateCombatExpression_ReturnValue;     // 0x0080(0x00C8)()
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_EvalExpressionFloat");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat) == 0x000160, "Wrong size on WBP_CombatTooltipGenerator_C_EvalExpressionFloat");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Expression) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Expression' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Source) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Target) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Target' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Instigator) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Instigator' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Owner) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Owner' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Value) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, Temp_bool_Variable) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, CallFunc_EvaluateCombatExpression_ReturnValue) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::CallFunc_EvaluateCombatExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000148, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000150, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionFloat, K2Node_Select_Default) == 0x000158, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionFloat::K2Node_Select_Default' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.EvalExpressionBool
// 0x0140 (0x0140 - 0x0000)
struct WBP_CombatTooltipGenerator_C_EvalExpressionBool final
{
public:
	struct FAoCExpression                         Expression;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ABaseCharacter*                         Source;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Target;                                            // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Instigator;                                        // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Owner;                                             // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateCombatExpression_ReturnValue;     // 0x0078(0x00C8)()
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_EvalExpressionBool) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_EvalExpressionBool");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_EvalExpressionBool) == 0x000140, "Wrong size on WBP_CombatTooltipGenerator_C_EvalExpressionBool");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Expression) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Expression' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Source) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Target) == 0x000058, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Target' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Instigator) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Instigator' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Owner) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Owner' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, Value) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::Value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_EvalExpressionBool, CallFunc_EvaluateCombatExpression_ReturnValue) == 0x000078, "Member 'WBP_CombatTooltipGenerator_C_EvalExpressionBool::CallFunc_EvaluateCombatExpression_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.CheckSpecificLingeringEffectArgs
// 0x0420 (0x0420 - 0x0000)
struct WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs final
{
public:
	class FString                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLingeringEffectRecord                 rec;                                               // 0x0010(0x03B8)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ABaseCharacter*                         Source;                                            // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Str;                                               // 0x03D0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetTimeStr_str;                           // 0x03E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str_1;                         // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeStr_time_ImplicitCast;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeStr_time_ImplicitCast_1;           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs) == 0x000420, "Wrong size on WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, Args) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, rec) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::rec' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, Source) == 0x0003C8, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, Str) == 0x0003D0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::Str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0003E0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_GetTimeStr_str) == 0x0003E8, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_GetTimeStr_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_GetTimeStr_str_1) == 0x0003F8, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_GetTimeStr_str_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000408, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_GetTimeStr_time_ImplicitCast) == 0x000410, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_GetTimeStr_time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs, CallFunc_GetTimeStr_time_ImplicitCast_1) == 0x000418, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificLingeringEffectArgs::CallFunc_GetTimeStr_time_ImplicitCast_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.CheckSpecificEffectArgs
// 0x0810 (0x0810 - 0x0000)
struct WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs final
{
public:
	class FString                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FEffectRecordBase                      EffectRecord;                                      // 0x0010(0x0788)(BlueprintVisible, BlueprintReadOnly, Parm)
	class ABaseCharacter*                         Source;                                            // 0x0798(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ret;                                               // 0x07A0(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str;                           // 0x07B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str_1;                         // 0x07C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x07D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_2;        // 0x07D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D3[0x5];                                      // 0x07D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Temp_object_Variable;                              // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Temp_object_Variable_1;                            // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EvalExpressionFloat_value;                // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetTimeStr_str_2;                         // 0x07F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeStr_time_ImplicitCast;             // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetTimeStr_time_ImplicitCast_1;           // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs) == 0x000810, "Wrong size on WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, Args) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::Args' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, EffectRecord) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::EffectRecord' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, Source) == 0x000798, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::Source' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, ret) == 0x0007A0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::ret' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_GetTimeStr_str) == 0x0007B0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_GetTimeStr_str' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_GetTimeStr_str_1) == 0x0007C0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_GetTimeStr_str_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0007D0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x0007D1, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_EqualEqual_StriStri_ReturnValue_2) == 0x0007D2, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_EqualEqual_StriStri_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, Temp_object_Variable) == 0x0007D8, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, Temp_object_Variable_1) == 0x0007E0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_EvalExpressionFloat_value) == 0x0007E8, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_EvalExpressionFloat_value' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_GetTimeStr_str_2) == 0x0007F0, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_GetTimeStr_str_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_GetTimeStr_time_ImplicitCast) == 0x000800, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_GetTimeStr_time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs, CallFunc_GetTimeStr_time_ImplicitCast_1) == 0x000808, "Member 'WBP_CombatTooltipGenerator_C_CheckSpecificEffectArgs::CallFunc_GetTimeStr_time_ImplicitCast_1' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.CheckSetApplyArgs
// 0x0060 (0x0060 - 0x0000)
struct WBP_CombatTooltipGenerator_C_CheckSetApplyArgs final
{
public:
	class FString                                 searchStr;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
	bool                                          Hide;                                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          dur;                                               // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          for_0;                                             // 0x0012(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Append;                                            // 0x0013(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 outStr;                                            // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_1;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue_2;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_CheckSetApplyArgs");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs) == 0x000060, "Wrong size on WBP_CombatTooltipGenerator_C_CheckSetApplyArgs");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, searchStr) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::searchStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, Hide) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::Hide' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, dur) == 0x000011, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::dur' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, for_0) == 0x000012, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::for_0' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, Append) == 0x000013, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::Append' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, outStr) == 0x000018, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::outStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Contains_ReturnValue) == 0x000028, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Contains_ReturnValue_1) == 0x000029, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Contains_ReturnValue_2) == 0x00002A, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Replace_ReturnValue) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Replace_ReturnValue_1) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_CheckSetApplyArgs, CallFunc_Replace_ReturnValue_2) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_CheckSetApplyArgs::CallFunc_Replace_ReturnValue_2' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.BuildFinalTooltip
// 0x00B0 (0x00B0 - 0x0000)
struct WBP_CombatTooltipGenerator_C_BuildFinalTooltip final
{
public:
	class FString                                 txt;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 finalTooltip;                                      // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_TrimTrailing_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_BuildFinalTooltip");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip) == 0x0000B0, "Wrong size on WBP_CombatTooltipGenerator_C_BuildFinalTooltip");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, txt) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::txt' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, finalTooltip) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::finalTooltip' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_TrimTrailing_ReturnValue) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_TrimTrailing_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, Temp_int_Array_Index_Variable) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Trim_ReturnValue) == 0x000038, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_BuildFinalTooltip, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_CombatTooltipGenerator_C_BuildFinalTooltip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_CombatTooltipGenerator.WBP_CombatTooltipGenerator_C.AddRichTextMarkupToEachLine
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine final
{
public:
	class FString                                 Input;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 markup;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Output;                                            // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 returnStr;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine) == 0x000008, "Wrong alignment on WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine");
static_assert(sizeof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine) == 0x0000F8, "Wrong size on WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Input) == 0x000000, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Input' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, markup) == 0x000010, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::markup' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Output) == 0x000020, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Output' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, returnStr) == 0x000030, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::returnStr' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Temp_string_Variable) == 0x000040, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_ParseIntoArray_ReturnValue) == 0x000050, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Array_LastIndex_ReturnValue) == 0x000064, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Temp_int_Array_Index_Variable) == 0x000068, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Array_Get_Item) == 0x000070, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000098, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Temp_string_Variable_1) == 0x0000B0, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, Temp_bool_Variable) == 0x0000C0, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, K2Node_Select_Default) == 0x0000C8, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E8, "Member 'WBP_CombatTooltipGenerator_C_AddRichTextMarkupToEachLine::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

}

