#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Kae_Windmill

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Kae_Windmill.BP_Kae_Windmill_C
// 0x0040 (0x0388 - 0x0348)
class ABP_Kae_Windmill_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIntrepidAkComponent*                   IntrepidAK;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Kae_Windmill_Blades_A;                          // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Rotate_A;                                          // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Rotate_All;                                        // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Windmil_Blades_WPO;                                // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Windmil_Blades;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Kae_Windmill(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Kae_Windmill_C">();
	}
	static class ABP_Kae_Windmill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Kae_Windmill_C>();
	}
};
static_assert(alignof(ABP_Kae_Windmill_C) == 0x000008, "Wrong alignment on ABP_Kae_Windmill_C");
static_assert(sizeof(ABP_Kae_Windmill_C) == 0x000388, "Wrong size on ABP_Kae_Windmill_C");
static_assert(offsetof(ABP_Kae_Windmill_C, UberGraphFrame) == 0x000348, "Member 'ABP_Kae_Windmill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, IntrepidAK) == 0x000350, "Member 'ABP_Kae_Windmill_C::IntrepidAK' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, SM_Kae_Windmill_Blades_A) == 0x000358, "Member 'ABP_Kae_Windmill_C::SM_Kae_Windmill_Blades_A' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, DefaultSceneRoot) == 0x000360, "Member 'ABP_Kae_Windmill_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, Rotate_A) == 0x000368, "Member 'ABP_Kae_Windmill_C::Rotate_A' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, Rotate_All) == 0x000370, "Member 'ABP_Kae_Windmill_C::Rotate_All' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, Windmil_Blades_WPO) == 0x000378, "Member 'ABP_Kae_Windmill_C::Windmil_Blades_WPO' has a wrong offset!");
static_assert(offsetof(ABP_Kae_Windmill_C, Windmil_Blades) == 0x000380, "Member 'ABP_Kae_Windmill_C::Windmil_Blades' has a wrong offset!");

}

