#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NodeIntersectionProxy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_RoadSetDressingData_structs.hpp"
#include "S_IntersectionSetDressingData_structs.hpp"


namespace SDK::Params
{

// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Apply PCG Data
// 0x0088 (0x0088 - 0x0000)
struct BP_NodeIntersectionProxy_C_Apply_PCG_Data final
{
public:
	int32                                         Spline_Count;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Last_Index;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCGComponent*                          CallFunc_AddPCGComp_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       K2Node_DynamicCast_AsSpline_Component;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeIntersectionProxy_C_Apply_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeIntersectionProxy_C_Apply_PCG_Data");
static_assert(sizeof(BP_NodeIntersectionProxy_C_Apply_PCG_Data) == 0x000088, "Wrong size on BP_NodeIntersectionProxy_C_Apply_PCG_Data");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Spline_Count) == 0x000000, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Spline_Count' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Last_Index) == 0x000004, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Last_Index' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Temp_int_Variable) == 0x000014, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, Temp_int_Variable_1) == 0x000018, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_AddPCGComp_ReturnValue) == 0x000038, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_AddPCGComp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000048, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_GetChildrenComponents_Children) == 0x000058, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, K2Node_DynamicCast_AsSpline_Component) == 0x000078, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::K2Node_DynamicCast_AsSpline_Component' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Apply_PCG_Data, CallFunc_Less_IntInt_ReturnValue_1) == 0x000081, "Member 'BP_NodeIntersectionProxy_C_Apply_PCG_Data::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Clear All PCG Data
// 0x00C8 (0x00C8 - 0x0000)
struct BP_NodeIntersectionProxy_C_Clear_All_PCG_Data final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UInstancedStaticMeshComponent*>  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0060(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPCGComponent*                          CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPCGComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        CallFunc_Array_Get_Item_3;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeIntersectionProxy_C_Clear_All_PCG_Data");
static_assert(sizeof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data) == 0x0000C8, "Wrong size on BP_NodeIntersectionProxy_C_Clear_All_PCG_Data");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable_1) == 0x000004, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000011, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable_2) == 0x00001C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable_3) == 0x000028, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable_3) == 0x00002C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000058, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue) == 0x00005C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_GetAttachedActors_OutActors) == 0x000060, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00007C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue_1) == 0x000088, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000098, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item_3) == 0x0000B0, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue_3) == 0x0000B8, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000BC, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue_2) == 0x0000C0, "Member 'BP_NodeIntersectionProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue_2' has a wrong offset!");

// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Create Splines
// 0x04B8 (0x04B8 - 0x0000)
struct BP_NodeIntersectionProxy_C_Create_Splines final
{
public:
	TArray<class USplineComponent*>               In_Splines;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_RoadSetDressingData>         Road_Data_Array;                                   // 0x0010(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Location_Sum;                                      // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               Temp_Splines;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Spline_Amount;                                     // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        Spline_Positions;                                  // 0x0050(0x0010)(Edit, BlueprintVisible)
	class USplineComponent*                       Current_Out_Spline;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Current_In_Spline;                                 // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Spline_Point_Index;                        // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSplinePoint>                   Spline_Points;                                     // 0x0078(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RoadSetDressingData                 K2Node_MakeStruct_S_RoadSetDressingData;           // 0x00B8(0x00D8)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_IntersectionSetDressingData         K2Node_MakeStruct_S_IntersectionSetDressingData;   // 0x0198(0x0010)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0200(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class USplineComponent*                       CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_RoadSetDressingData>         UniqueObjectNameForCooking_Array;                  // 0x0310(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item_2;                         // 0x0338(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USplineComponent*>               K2Node_MakeArray_Array;                            // 0x0348(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESplinePointType                              CallFunc_GetSplinePointType_ReturnValue;           // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_Array_Get_Item_3;                         // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           K2Node_MakeStruct_SplinePoint;                     // 0x0428(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeIntersectionProxy_C_Create_Splines) == 0x000008, "Wrong alignment on BP_NodeIntersectionProxy_C_Create_Splines");
static_assert(sizeof(BP_NodeIntersectionProxy_C_Create_Splines) == 0x0004B8, "Wrong size on BP_NodeIntersectionProxy_C_Create_Splines");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, In_Splines) == 0x000000, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::In_Splines' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Road_Data_Array) == 0x000010, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Road_Data_Array' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Location_Sum) == 0x000020, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Location_Sum' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_Splines) == 0x000038, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_Splines' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Spline_Amount) == 0x000048, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Spline_Amount' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Spline_Positions) == 0x000050, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Spline_Positions' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Current_Out_Spline) == 0x000060, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Current_Out_Spline' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Current_In_Spline) == 0x000068, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Current_In_Spline' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Current_Spline_Point_Index) == 0x000070, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Current_Spline_Point_Index' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Spline_Points) == 0x000078, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Spline_Points' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Variable) == 0x0000AC, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, K2Node_MakeStruct_S_RoadSetDressingData) == 0x0000B8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::K2Node_MakeStruct_S_RoadSetDressingData' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, K2Node_MakeStruct_S_IntersectionSetDressingData) == 0x000198, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::K2Node_MakeStruct_S_IntersectionSetDressingData' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Variable_1) == 0x0001A8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Length_ReturnValue_1) == 0x0001AC, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Conv_IntToVector_ReturnValue) == 0x0001B0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Divide_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000200, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Add_ReturnValue_1) == 0x0002F4, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Length_ReturnValue_2) == 0x0002F8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Variable_2) == 0x0002FC, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000300, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_IntInt_ReturnValue_3) == 0x000304, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Array_Index_Variable_1) == 0x000308, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, UniqueObjectNameForCooking_Array) == 0x000310, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000320, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000324, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000328, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Subtract_IntInt_ReturnValue) == 0x00032C, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000330, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Get_Item_2) == 0x000338, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, Temp_int_Loop_Counter_Variable_1) == 0x000340, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_IntInt_ReturnValue_4) == 0x000344, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, K2Node_MakeArray_Array) == 0x000348, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetSplinePointType_ReturnValue) == 0x000358, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetSplinePointType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Get_Item_3) == 0x000360, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Length_ReturnValue_3) == 0x000368, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000370, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Less_IntInt_ReturnValue_2) == 0x000388, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000390, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x0003A8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue) == 0x0003C0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x0003C8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x0003E0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0003F8, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000410, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, K2Node_MakeStruct_SplinePoint) == 0x000428, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::K2Node_MakeStruct_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Create_Splines, CallFunc_Array_Add_ReturnValue_2) == 0x0004B0, "Member 'BP_NodeIntersectionProxy_C_Create_Splines::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Update PCG Data
// 0x0168 (0x0168 - 0x0000)
struct BP_NodeIntersectionProxy_C_Update_PCG_Data final
{
public:
	struct FS_RoadSetDressingData                 Current_Data;                                      // 0x0000(0x00D8)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCGComponent*                          Current_PCG_Comp;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCGComponent*                          CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast;     // 0x0148(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_1;   // 0x014C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_2;   // 0x0150(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_3;   // 0x0154(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_4;   // 0x0158(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_5;   // 0x015C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_6;   // 0x0160(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_7;   // 0x0164(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeIntersectionProxy_C_Update_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeIntersectionProxy_C_Update_PCG_Data");
static_assert(sizeof(BP_NodeIntersectionProxy_C_Update_PCG_Data) == 0x000168, "Wrong size on BP_NodeIntersectionProxy_C_Update_PCG_Data");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, Current_Data) == 0x000000, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::Current_Data' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, Current_Index) == 0x0000D8, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::Current_Index' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, Current_PCG_Comp) == 0x0000E0, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::Current_PCG_Comp' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Add_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000109, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_MakeVector_ReturnValue) == 0x000118, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_MakeVector_ReturnValue_1) == 0x000130, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast) == 0x000148, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_1) == 0x00014C, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_2) == 0x000150, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_3) == 0x000154, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_4) == 0x000158, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_5) == 0x00015C, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_6) == 0x000160, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_NodeIntersectionProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_7) == 0x000164, "Member 'BP_NodeIntersectionProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_7' has a wrong offset!");

}

