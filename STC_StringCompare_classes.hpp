#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_StringCompare

#include "Basic.hpp"

#include "StateTreeModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STC_StringCompare.STC_StringCompare_C
// 0x0028 (0x0090 - 0x0068)
class USTC_StringCompare_C final : public UStateTreeConditionBlueprintBase
{
public:
	class FString                                 TargetString;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 StringCompare;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Inverse;                                           // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool ReceiveTestCondition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STC_StringCompare_C">();
	}
	static class USTC_StringCompare_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTC_StringCompare_C>();
	}
};
static_assert(alignof(USTC_StringCompare_C) == 0x000008, "Wrong alignment on USTC_StringCompare_C");
static_assert(sizeof(USTC_StringCompare_C) == 0x000090, "Wrong size on USTC_StringCompare_C");
static_assert(offsetof(USTC_StringCompare_C, TargetString) == 0x000068, "Member 'USTC_StringCompare_C::TargetString' has a wrong offset!");
static_assert(offsetof(USTC_StringCompare_C, StringCompare) == 0x000078, "Member 'USTC_StringCompare_C::StringCompare' has a wrong offset!");
static_assert(offsetof(USTC_StringCompare_C, Inverse) == 0x000088, "Member 'USTC_StringCompare_C::Inverse' has a wrong offset!");

}

