#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_UtiltiyScoreTargetSelector

#include "Basic.hpp"

#include "EAIUtilityScoringScheme_structs.hpp"
#include "Engine_structs.hpp"
#include "DesignDataPlugin_structs.hpp"
#include "STT_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STT_UtiltiyScoreTargetSelector.STT_UtiltiyScoreTargetSelector_C
// 0x00B0 (0x0128 - 0x0078)
class USTT_UtiltiyScoreTargetSelector_C final : public USTT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAoCExpression                         Consideration_Context;                             // 0x0080(0x0050)(Edit, BlueprintVisible)
	TArray<struct FAoCExpression>                 Considerations;                                    // 0x00D0(0x0010)(Edit, BlueprintVisible)
	EAIUtilityScoringScheme                       Scoring_Scheme;                                    // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         Agent;                                             // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABaseCharacter*>                 Potential_Targets;                                 // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class ABaseCharacter*                         Best_Target;                                       // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Best_Score;                                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Current_Values;                                    // 0x0110(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABaseCharacter*                         Current_Target;                                    // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CalculateScore(TArray<double>& Values, EAIUtilityScoringScheme Scheme, double* Result);
	void ExecuteUbergraph_STT_UtiltiyScoreTargetSelector(int32 EntryPoint);
	void ReceiveLatentEnterState(const struct FStateTreeTransitionResult& Transition);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STT_UtiltiyScoreTargetSelector_C">();
	}
	static class USTT_UtiltiyScoreTargetSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTT_UtiltiyScoreTargetSelector_C>();
	}
};
static_assert(alignof(USTT_UtiltiyScoreTargetSelector_C) == 0x000008, "Wrong alignment on USTT_UtiltiyScoreTargetSelector_C");
static_assert(sizeof(USTT_UtiltiyScoreTargetSelector_C) == 0x000128, "Wrong size on USTT_UtiltiyScoreTargetSelector_C");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, UberGraphFrame) == 0x000078, "Member 'USTT_UtiltiyScoreTargetSelector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Consideration_Context) == 0x000080, "Member 'USTT_UtiltiyScoreTargetSelector_C::Consideration_Context' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Considerations) == 0x0000D0, "Member 'USTT_UtiltiyScoreTargetSelector_C::Considerations' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Scoring_Scheme) == 0x0000E0, "Member 'USTT_UtiltiyScoreTargetSelector_C::Scoring_Scheme' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Agent) == 0x0000E8, "Member 'USTT_UtiltiyScoreTargetSelector_C::Agent' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Potential_Targets) == 0x0000F0, "Member 'USTT_UtiltiyScoreTargetSelector_C::Potential_Targets' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Best_Target) == 0x000100, "Member 'USTT_UtiltiyScoreTargetSelector_C::Best_Target' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Best_Score) == 0x000108, "Member 'USTT_UtiltiyScoreTargetSelector_C::Best_Score' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Current_Values) == 0x000110, "Member 'USTT_UtiltiyScoreTargetSelector_C::Current_Values' has a wrong offset!");
static_assert(offsetof(USTT_UtiltiyScoreTargetSelector_C, Current_Target) == 0x000120, "Member 'USTT_UtiltiyScoreTargetSelector_C::Current_Target' has a wrong offset!");

}

