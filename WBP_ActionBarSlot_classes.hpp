#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActionBarSlot

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ActionBarSlot.WBP_ActionBarSlot_C
// 0x0068 (0x05B0 - 0x0548)
class UWBP_ActionBarSlot_C final : public UActionBarSlotSpell
{
public:
	class UWidgetAnimation*                       AbilityProc_Fade;                                  // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AbilityProc_Trigger;                               // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AbilityActive;                                     // 0x0558(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AbilityPressed;                                    // 0x0560(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AbilityOffCooldown;                                // 0x0568(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 AbilityProc;                                       // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 AbilityToggleOn;                                   // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvBox;                                            // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OffCooldownEffect;                                 // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OffCooldownFrame;                                  // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PressedHighlight;                                  // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ProcFrame;                                         // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNiagaraSystemWidget*                   SuccessProc;                                       // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ActionBarSlot_C">();
	}
	static class UWBP_ActionBarSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ActionBarSlot_C>();
	}
};
static_assert(alignof(UWBP_ActionBarSlot_C) == 0x000008, "Wrong alignment on UWBP_ActionBarSlot_C");
static_assert(sizeof(UWBP_ActionBarSlot_C) == 0x0005B0, "Wrong size on UWBP_ActionBarSlot_C");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityProc_Fade) == 0x000548, "Member 'UWBP_ActionBarSlot_C::AbilityProc_Fade' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityProc_Trigger) == 0x000550, "Member 'UWBP_ActionBarSlot_C::AbilityProc_Trigger' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityActive) == 0x000558, "Member 'UWBP_ActionBarSlot_C::AbilityActive' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityPressed) == 0x000560, "Member 'UWBP_ActionBarSlot_C::AbilityPressed' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityOffCooldown) == 0x000568, "Member 'UWBP_ActionBarSlot_C::AbilityOffCooldown' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityProc) == 0x000570, "Member 'UWBP_ActionBarSlot_C::AbilityProc' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, AbilityToggleOn) == 0x000578, "Member 'UWBP_ActionBarSlot_C::AbilityToggleOn' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, InvBox) == 0x000580, "Member 'UWBP_ActionBarSlot_C::InvBox' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, OffCooldownEffect) == 0x000588, "Member 'UWBP_ActionBarSlot_C::OffCooldownEffect' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, OffCooldownFrame) == 0x000590, "Member 'UWBP_ActionBarSlot_C::OffCooldownFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, PressedHighlight) == 0x000598, "Member 'UWBP_ActionBarSlot_C::PressedHighlight' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, ProcFrame) == 0x0005A0, "Member 'UWBP_ActionBarSlot_C::ProcFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActionBarSlot_C, SuccessProc) == 0x0005A8, "Member 'UWBP_ActionBarSlot_C::SuccessProc' has a wrong offset!");

}

