#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConstellationManager

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ConstellationManager.BP_ConstellationManager_C
// 0x0030 (0x0378 - 0x0348)
class ABP_ConstellationManager_C final : public AActor
{
public:
	class UNiagaraComponent*                      Niagara;                                           // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Constellation_Plane_Phoenix;                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Constellation_Plane_Rambull;                       // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Constellation_Plane_Dawnbreaker;                   // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Constellation_Plane_Sandal;                        // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void Rotate_Constellations(const struct FRotator& New_Rotation, double Normalized_Sunrise);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ConstellationManager_C">();
	}
	static class ABP_ConstellationManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ConstellationManager_C>();
	}
};
static_assert(alignof(ABP_ConstellationManager_C) == 0x000008, "Wrong alignment on ABP_ConstellationManager_C");
static_assert(sizeof(ABP_ConstellationManager_C) == 0x000378, "Wrong size on ABP_ConstellationManager_C");
static_assert(offsetof(ABP_ConstellationManager_C, Niagara) == 0x000348, "Member 'ABP_ConstellationManager_C::Niagara' has a wrong offset!");
static_assert(offsetof(ABP_ConstellationManager_C, Constellation_Plane_Phoenix) == 0x000350, "Member 'ABP_ConstellationManager_C::Constellation_Plane_Phoenix' has a wrong offset!");
static_assert(offsetof(ABP_ConstellationManager_C, Constellation_Plane_Rambull) == 0x000358, "Member 'ABP_ConstellationManager_C::Constellation_Plane_Rambull' has a wrong offset!");
static_assert(offsetof(ABP_ConstellationManager_C, Constellation_Plane_Dawnbreaker) == 0x000360, "Member 'ABP_ConstellationManager_C::Constellation_Plane_Dawnbreaker' has a wrong offset!");
static_assert(offsetof(ABP_ConstellationManager_C, Constellation_Plane_Sandal) == 0x000368, "Member 'ABP_ConstellationManager_C::Constellation_Plane_Sandal' has a wrong offset!");
static_assert(offsetof(ABP_ConstellationManager_C, DefaultSceneRoot) == 0x000370, "Member 'ABP_ConstellationManager_C::DefaultSceneRoot' has a wrong offset!");

}

