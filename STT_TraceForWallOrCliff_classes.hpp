#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_TraceForWallOrCliff

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STT_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STT_TraceForWallOrCliff.STT_TraceForWallOrCliff_C
// 0x0070 (0x00E8 - 0x0078)
class USTT_TraceForWallOrCliff_C final : public USTT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ANPCCharacter*                          Agent;                                             // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        ForwardTraceDistance;                              // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DownTraceDistance;                                 // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      CollisionChannelsToCheck;                          // 0x0098(0x0010)(Edit, BlueprintVisible)
	bool                                          TraceBackwards;                                    // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContinuousCheck;                                 // 0x00A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeBetweenTraces;                                 // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugDrawTraces;                                   // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundWallOrCliff;                                  // 0x00B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                EndForwardTraceLocation;                           // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LastTraceTime;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceMultiplier;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_STT_TraceForWallOrCliff(int32 EntryPoint);
	void ReceiveLatentEnterState(const struct FStateTreeTransitionResult& Transition);
	void ReceiveLatentTick(const float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STT_TraceForWallOrCliff_C">();
	}
	static class USTT_TraceForWallOrCliff_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTT_TraceForWallOrCliff_C>();
	}
};
static_assert(alignof(USTT_TraceForWallOrCliff_C) == 0x000008, "Wrong alignment on USTT_TraceForWallOrCliff_C");
static_assert(sizeof(USTT_TraceForWallOrCliff_C) == 0x0000E8, "Wrong size on USTT_TraceForWallOrCliff_C");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, UberGraphFrame) == 0x000078, "Member 'USTT_TraceForWallOrCliff_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, Agent) == 0x000080, "Member 'USTT_TraceForWallOrCliff_C::Agent' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, ForwardTraceDistance) == 0x000088, "Member 'USTT_TraceForWallOrCliff_C::ForwardTraceDistance' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, DownTraceDistance) == 0x000090, "Member 'USTT_TraceForWallOrCliff_C::DownTraceDistance' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, CollisionChannelsToCheck) == 0x000098, "Member 'USTT_TraceForWallOrCliff_C::CollisionChannelsToCheck' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, TraceBackwards) == 0x0000A8, "Member 'USTT_TraceForWallOrCliff_C::TraceBackwards' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, IsContinuousCheck) == 0x0000A9, "Member 'USTT_TraceForWallOrCliff_C::IsContinuousCheck' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, TimeBetweenTraces) == 0x0000B0, "Member 'USTT_TraceForWallOrCliff_C::TimeBetweenTraces' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, DebugDrawTraces) == 0x0000B8, "Member 'USTT_TraceForWallOrCliff_C::DebugDrawTraces' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, FoundWallOrCliff) == 0x0000B9, "Member 'USTT_TraceForWallOrCliff_C::FoundWallOrCliff' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, EndForwardTraceLocation) == 0x0000C0, "Member 'USTT_TraceForWallOrCliff_C::EndForwardTraceLocation' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, LastTraceTime) == 0x0000D8, "Member 'USTT_TraceForWallOrCliff_C::LastTraceTime' has a wrong offset!");
static_assert(offsetof(USTT_TraceForWallOrCliff_C, TraceMultiplier) == 0x0000E0, "Member 'USTT_TraceForWallOrCliff_C::TraceMultiplier' has a wrong offset!");

}

