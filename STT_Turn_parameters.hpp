#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Turn

#include "Basic.hpp"

#include "TurnAngleAnimationMap_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STT_Turn.STT_Turn_C.ExecuteUbergraph_STT_Turn
// 0x02B8 (0x02B8 - 0x0000)
struct STT_Turn_C_ExecuteUbergraph_STT_Turn final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition_1;                         // 0x0004(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPCPawn_C*                             K2Node_DynamicCast_AsNPCPawn;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue_1;        // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue;           // 0x00E0(0x00C8)()
	class ABaseCharacter*                         CallFunc_FindCharacter_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x01D8(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_206[0x2];                                      // 0x0206(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_1;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_2;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStateTreeRunStatus                           K2Node_Event_CompletionStatus;                     // 0x0240(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x1];                                      // 0x0241(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeActiveStates                 K2Node_Event_CompletedActiveStates;                // 0x0242(0x0012)(ConstParm, NoDestructor)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAnimBPValue_FloatValue_ImplicitCast;   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Length_ImplicitCast;            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Turn_C_ExecuteUbergraph_STT_Turn) == 0x000008, "Wrong alignment on STT_Turn_C_ExecuteUbergraph_STT_Turn");
static_assert(sizeof(STT_Turn_C_ExecuteUbergraph_STT_Turn) == 0x0002B8, "Wrong size on STT_Turn_C_ExecuteUbergraph_STT_Turn");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, EntryPoint) == 0x000000, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_Event_Transition_1) == 0x000004, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_Event_Transition_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_GetOuterObject_ReturnValue) == 0x000038, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_Event_DeltaTime) == 0x000040, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_DynamicCast_AsNPCPawn) == 0x000048, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_DynamicCast_AsNPCPawn' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_MakeLiteralByte_ReturnValue) == 0x000051, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000058, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000060, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_BreakRotator_Roll) == 0x000088, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_BreakRotator_Pitch) == 0x00008C, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_BreakRotator_Yaw) == 0x000090, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_MakeRotator_ReturnValue) == 0x0000A8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_MakeRotator_ReturnValue_1) == 0x0000C0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000D8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_K2_SetActorRotation_ReturnValue_1) == 0x0000D9, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_K2_SetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_EvaluateExpression_ReturnValue) == 0x0000E0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_EvaluateExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_FindCharacter_ReturnValue) == 0x0001A8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_FindCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_GetPlayLength_ReturnValue) == 0x0001B0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001D0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_Event_Transition) == 0x0001D8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000208, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000211, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_GetPlayLength_ReturnValue_1) == 0x000220, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_GetPlayLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_GetPlayLength_ReturnValue_2) == 0x000224, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_GetPlayLength_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_FMax_ReturnValue) == 0x000230, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000238, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_Event_CompletionStatus) == 0x000240, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_Event_CompletionStatus' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_Event_CompletedActiveStates) == 0x000242, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_Event_CompletedActiveStates' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000258, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000260, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000268, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000270, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000278, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000280, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000290, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000294, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000298, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_SetAnimBPValue_FloatValue_ImplicitCast) == 0x0002A0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_SetAnimBPValue_FloatValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x0002A8, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ExecuteUbergraph_STT_Turn, K2Node_VariableSet_Length_ImplicitCast) == 0x0002B0, "Member 'STT_Turn_C_ExecuteUbergraph_STT_Turn::K2Node_VariableSet_Length_ImplicitCast' has a wrong offset!");

// Function STT_Turn.STT_Turn_C.GetTurnDirectionAndAngle
// 0x0128 (0x0128 - 0x0000)
struct STT_Turn_C_GetTurnDirectionAndAngle final
{
public:
	double                                        Diff;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnAngleAnimationMap                 CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Turn_C_GetTurnDirectionAndAngle) == 0x000008, "Wrong alignment on STT_Turn_C_GetTurnDirectionAndAngle");
static_assert(sizeof(STT_Turn_C_GetTurnDirectionAndAngle) == 0x000128, "Wrong size on STT_Turn_C_GetTurnDirectionAndAngle");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, Diff) == 0x000000, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::Diff' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, Temp_bool_True_if_break_was_hit_Variable) == 0x000008, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Array_Get_Item) == 0x000020, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000056, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_MakeRotFromX_ReturnValue) == 0x000098, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Roll) == 0x0000B0, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Pitch) == 0x0000B4, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Yaw) == 0x0000B8, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Abs_ReturnValue_1) == 0x0000C0, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Abs_ReturnValue_2) == 0x0000C8, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Abs_ReturnValue_3) == 0x0000D8, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000E1, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0000E2, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E8, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Roll_1) == 0x000100, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Pitch_1) == 0x000104, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_BreakRotator_Yaw_1) == 0x000108, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000110, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_GetTurnDirectionAndAngle, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000120, "Member 'STT_Turn_C_GetTurnDirectionAndAngle::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function STT_Turn.STT_Turn_C.ReceiveExitState
// 0x002E (0x002E - 0x0000)
struct STT_Turn_C_ReceiveExitState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Turn_C_ReceiveExitState) == 0x000002, "Wrong alignment on STT_Turn_C_ReceiveExitState");
static_assert(sizeof(STT_Turn_C_ReceiveExitState) == 0x00002E, "Wrong size on STT_Turn_C_ReceiveExitState");
static_assert(offsetof(STT_Turn_C_ReceiveExitState, Transition) == 0x000000, "Member 'STT_Turn_C_ReceiveExitState::Transition' has a wrong offset!");

// Function STT_Turn.STT_Turn_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_Turn_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Turn_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_Turn_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_Turn_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_Turn_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_Turn_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_Turn_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_Turn.STT_Turn_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_Turn_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Turn_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_Turn_C_ReceiveLatentTick");
static_assert(sizeof(STT_Turn_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_Turn_C_ReceiveLatentTick");
static_assert(offsetof(STT_Turn_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_Turn_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

// Function STT_Turn.STT_Turn_C.ReceiveStateCompleted
// 0x0014 (0x0014 - 0x0000)
struct STT_Turn_C_ReceiveStateCompleted final
{
public:
	EStateTreeRunStatus                           CompletionStatus;                                  // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x1];                                        // 0x0001(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeActiveStates                 CompletedActiveStates;                             // 0x0002(0x0012)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(STT_Turn_C_ReceiveStateCompleted) == 0x000002, "Wrong alignment on STT_Turn_C_ReceiveStateCompleted");
static_assert(sizeof(STT_Turn_C_ReceiveStateCompleted) == 0x000014, "Wrong size on STT_Turn_C_ReceiveStateCompleted");
static_assert(offsetof(STT_Turn_C_ReceiveStateCompleted, CompletionStatus) == 0x000000, "Member 'STT_Turn_C_ReceiveStateCompleted::CompletionStatus' has a wrong offset!");
static_assert(offsetof(STT_Turn_C_ReceiveStateCompleted, CompletedActiveStates) == 0x000002, "Member 'STT_Turn_C_ReceiveStateCompleted::CompletedActiveStates' has a wrong offset!");

}

