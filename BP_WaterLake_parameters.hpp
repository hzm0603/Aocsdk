#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterLake

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GeometryScriptingCore_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_WaterLake.BP_WaterLake_C.Add Swim Volumes
// 0x00D0 (0x00D0 - 0x0000)
struct BP_WaterLake_C_Add_Swim_Volumes final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AWaterVolume*                           K2Node_DynamicCast_AsWater_Volume;                 // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Add_Swim_Volumes) == 0x000010, "Wrong alignment on BP_WaterLake_C_Add_Swim_Volumes");
static_assert(sizeof(BP_WaterLake_C_Add_Swim_Volumes) == 0x0000D0, "Wrong size on BP_WaterLake_C_Add_Swim_Volumes");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_WaterLake_C_Add_Swim_Volumes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WaterLake_C_Add_Swim_Volumes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'BP_WaterLake_C_Add_Swim_Volumes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_AddComponent_ReturnValue) == 0x000098, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, K2Node_DynamicCast_AsWater_Volume) == 0x0000A0, "Member 'BP_WaterLake_C_Add_Swim_Volumes::K2Node_DynamicCast_AsWater_Volume' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_WaterLake_C_Add_Swim_Volumes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Array_Length_ReturnValue_1) == 0x0000AC, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, Temp_int_Variable) == 0x0000B4, "Member 'BP_WaterLake_C_Add_Swim_Volumes::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, Temp_int_Loop_Counter_Variable_1) == 0x0000C0, "Member 'BP_WaterLake_C_Add_Swim_Volumes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Add_Swim_Volumes, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C8, "Member 'BP_WaterLake_C_Add_Swim_Volumes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Bake Mesh
// 0x01A8 (0x01A8 - 0x0000)
struct BP_WaterLake_C_Bake_Mesh final
{
public:
	class UDynamicMeshComponent*                  Dynamic_Mesh;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Material;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Asset_Tag;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class UStaticMesh*                            Out_SM;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMeshComponent*                  DynMesh;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     mat;                                               // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SMTemp;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_GetDynamicMesh_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ReferenceParm)
	struct FGeometryScriptCopyMeshToAssetOptions  K2Node_MakeStruct_GeometryScriptCopyMeshToAssetOptions; // 0x0098(0x0080)()
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGeometryScriptOutcomePins                    CallFunc_CopyMeshToStaticMesh_Outcome;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_CopyMeshToStaticMesh_ReturnValue;         // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UniqueObjectNameForCooking_CmpSuccess;             // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IInterface>            CallFunc_GetAssetTools_ReturnValue;                // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_CreateAsset_ReturnValue;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Check_if_Mesh_Asset_Exists_Exists_;       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_Check_if_Mesh_Asset_Exists_Return_Mesh;   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Bake_Mesh) == 0x000008, "Wrong alignment on BP_WaterLake_C_Bake_Mesh");
static_assert(sizeof(BP_WaterLake_C_Bake_Mesh) == 0x0001A8, "Wrong size on BP_WaterLake_C_Bake_Mesh");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, Dynamic_Mesh) == 0x000000, "Member 'BP_WaterLake_C_Bake_Mesh::Dynamic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, Material) == 0x000008, "Member 'BP_WaterLake_C_Bake_Mesh::Material' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, Asset_Tag) == 0x000010, "Member 'BP_WaterLake_C_Bake_Mesh::Asset_Tag' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, Out_SM) == 0x000020, "Member 'BP_WaterLake_C_Bake_Mesh::Out_SM' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, DynMesh) == 0x000028, "Member 'BP_WaterLake_C_Bake_Mesh::DynMesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, mat) == 0x000030, "Member 'BP_WaterLake_C_Bake_Mesh::mat' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, SMTemp) == 0x000038, "Member 'BP_WaterLake_C_Bake_Mesh::SMTemp' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000070, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_GetDynamicMesh_ReturnValue) == 0x000080, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_GetDynamicMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_WaterLake_C_Bake_Mesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, K2Node_MakeStruct_GeometryScriptCopyMeshToAssetOptions) == 0x000098, "Member 'BP_WaterLake_C_Bake_Mesh::K2Node_MakeStruct_GeometryScriptCopyMeshToAssetOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_IsWithEditor_ReturnValue) == 0x000118, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_CopyMeshToStaticMesh_Outcome) == 0x000119, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_CopyMeshToStaticMesh_Outcome' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_CopyMeshToStaticMesh_ReturnValue) == 0x000120, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_CopyMeshToStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, UniqueObjectNameForCooking_CmpSuccess) == 0x000128, "Member 'BP_WaterLake_C_Bake_Mesh::UniqueObjectNameForCooking_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_GetAssetTools_ReturnValue) == 0x000130, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_GetAssetTools_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_GetObjectName_ReturnValue) == 0x000140, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000150, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000160, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000170, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_CreateAsset_ReturnValue) == 0x000180, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_CreateAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Check_if_Mesh_Asset_Exists_Exists_) == 0x000188, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Check_if_Mesh_Asset_Exists_Exists_' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, CallFunc_Check_if_Mesh_Asset_Exists_Return_Mesh) == 0x000190, "Member 'BP_WaterLake_C_Bake_Mesh::CallFunc_Check_if_Mesh_Asset_Exists_Return_Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, K2Node_DynamicCast_AsStatic_Mesh) == 0x000198, "Member 'BP_WaterLake_C_Bake_Mesh::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Mesh, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'BP_WaterLake_C_Bake_Mesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Bake Vertex Colors
// 0x00A8 (0x00A8 - 0x0000)
struct BP_WaterLake_C_Bake_Vertex_Colors final
{
public:
	class UDynamicMeshComponent*                  DynMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_GetDynamicMesh_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptIndexList               CallFunc_GetAllTriangleIDs_TriangleIDList;         // 0x0018(0x0018)()
	bool                                          CallFunc_GetAllTriangleIDs_bHasTriangleIDGaps;     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_GetAllTriangleIDs_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_ConvertIndexListToArray_IndexArray;       // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptUVTriangle              UniqueObjectNameForCooking_GeometryScriptUVTriangle; // 0x0068(0x0030)(NoDestructor)
	bool                                          CallFunc_SetMeshTriangleUVs_bIsValidTriangle;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_SetMeshTriangleUVs_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Bake_Vertex_Colors) == 0x000008, "Wrong alignment on BP_WaterLake_C_Bake_Vertex_Colors");
static_assert(sizeof(BP_WaterLake_C_Bake_Vertex_Colors) == 0x0000A8, "Wrong size on BP_WaterLake_C_Bake_Vertex_Colors");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, DynMesh) == 0x000000, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::DynMesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_GetDynamicMesh_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_GetDynamicMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_GetAllTriangleIDs_TriangleIDList) == 0x000018, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_GetAllTriangleIDs_TriangleIDList' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_GetAllTriangleIDs_bHasTriangleIDGaps) == 0x000030, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_GetAllTriangleIDs_bHasTriangleIDGaps' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_GetAllTriangleIDs_ReturnValue) == 0x000038, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_GetAllTriangleIDs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_ConvertIndexListToArray_IndexArray) == 0x000040, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_ConvertIndexListToArray_IndexArray' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Array_Get_Item) == 0x000054, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_Greater_IntInt_ReturnValue) == 0x000065, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, UniqueObjectNameForCooking_GeometryScriptUVTriangle) == 0x000068, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::UniqueObjectNameForCooking_GeometryScriptUVTriangle' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_SetMeshTriangleUVs_bIsValidTriangle) == 0x000098, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_SetMeshTriangleUVs_bIsValidTriangle' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Vertex_Colors, CallFunc_SetMeshTriangleUVs_ReturnValue) == 0x0000A0, "Member 'BP_WaterLake_C_Bake_Vertex_Colors::CallFunc_SetMeshTriangleUVs_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Bake Water Meshes
// 0x0028 (0x0028 - 0x0000)
struct BP_WaterLake_C_Bake_Water_Meshes final
{
public:
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FTransform>                     CallFunc_Decompose_to_Volume_Transforms_Transforms; // 0x0010(0x0010)(ReferenceParm)
	class UStaticMesh*                            CallFunc_Bake_Mesh_Out_SM;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Bake_Water_Meshes) == 0x000008, "Wrong alignment on BP_WaterLake_C_Bake_Water_Meshes");
static_assert(sizeof(BP_WaterLake_C_Bake_Water_Meshes) == 0x000028, "Wrong size on BP_WaterLake_C_Bake_Water_Meshes");
static_assert(offsetof(BP_WaterLake_C_Bake_Water_Meshes, CallFunc_GetGameState_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Bake_Water_Meshes::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Water_Meshes, CallFunc_IsWithEditor_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_Bake_Water_Meshes::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Water_Meshes, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_WaterLake_C_Bake_Water_Meshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Water_Meshes, CallFunc_Decompose_to_Volume_Transforms_Transforms) == 0x000010, "Member 'BP_WaterLake_C_Bake_Water_Meshes::CallFunc_Decompose_to_Volume_Transforms_Transforms' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Bake_Water_Meshes, CallFunc_Bake_Mesh_Out_SM) == 0x000020, "Member 'BP_WaterLake_C_Bake_Water_Meshes::CallFunc_Bake_Mesh_Out_SM' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Build Display Mesh
// 0x00A0 (0x00A0 - 0x0000)
struct BP_WaterLake_C_Build_Display_Mesh final
{
public:
	TArray<struct FVector2D>                      PolygonVertices;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UMaterialInterface*>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm)
	class UDynamicMesh*                           CallFunc_GetDynamicMesh_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptCalculateNormalsOptions UniqueObjectNameForCooking_GeometryScriptCalculateNormalsOptions; // 0x0028(0x0002)(NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_Reset_ReturnValue;                        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptRemeshOptions           K2Node_MakeStruct_GeometryScriptRemeshOptions;     // 0x0038(0x001C)(NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptPrimitiveOptions        K2Node_MakeStruct_GeometryScriptPrimitiveOptions;  // 0x0060(0x0003)(NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptUniformRemeshOptions    K2Node_MakeStruct_GeometryScriptUniformRemeshOptions; // 0x0064(0x000C)(NoDestructor)
	class UDynamicMesh*                           CallFunc_AppendTriangulatedPolygon_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ApplyUniformRemesh_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_RecomputeNormals_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ClearMaterialIDs_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_TargetEdgeLength_ImplicitCast;   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Build_Display_Mesh) == 0x000008, "Wrong alignment on BP_WaterLake_C_Build_Display_Mesh");
static_assert(sizeof(BP_WaterLake_C_Build_Display_Mesh) == 0x0000A0, "Wrong size on BP_WaterLake_C_Build_Display_Mesh");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, PolygonVertices) == 0x000000, "Member 'BP_WaterLake_C_Build_Display_Mesh::PolygonVertices' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_WaterLake_C_Build_Display_Mesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_GetDynamicMesh_ReturnValue) == 0x000020, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_GetDynamicMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, UniqueObjectNameForCooking_GeometryScriptCalculateNormalsOptions) == 0x000028, "Member 'BP_WaterLake_C_Build_Display_Mesh::UniqueObjectNameForCooking_GeometryScriptCalculateNormalsOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_Reset_ReturnValue) == 0x000030, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_Reset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, K2Node_MakeStruct_GeometryScriptRemeshOptions) == 0x000038, "Member 'BP_WaterLake_C_Build_Display_Mesh::K2Node_MakeStruct_GeometryScriptRemeshOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, K2Node_MakeStruct_GeometryScriptPrimitiveOptions) == 0x000060, "Member 'BP_WaterLake_C_Build_Display_Mesh::K2Node_MakeStruct_GeometryScriptPrimitiveOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, K2Node_MakeStruct_GeometryScriptUniformRemeshOptions) == 0x000064, "Member 'BP_WaterLake_C_Build_Display_Mesh::K2Node_MakeStruct_GeometryScriptUniformRemeshOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_AppendTriangulatedPolygon_ReturnValue) == 0x000070, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_AppendTriangulatedPolygon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_ApplyUniformRemesh_ReturnValue) == 0x000078, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_ApplyUniformRemesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_RecomputeNormals_ReturnValue) == 0x000080, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_RecomputeNormals_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_ClearMaterialIDs_ReturnValue) == 0x000088, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_ClearMaterialIDs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, CallFunc_SelectFloat_A_ImplicitCast) == 0x000090, "Member 'BP_WaterLake_C_Build_Display_Mesh::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Display_Mesh, K2Node_MakeStruct_TargetEdgeLength_ImplicitCast) == 0x000098, "Member 'BP_WaterLake_C_Build_Display_Mesh::K2Node_MakeStruct_TargetEdgeLength_ImplicitCast' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Build Profile for Spline
// 0x00F8 (0x00F8 - 0x0000)
struct BP_WaterLake_C_Build_Profile_for_Spline final
{
public:
	double                                        Width;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Divisions;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      Positions;                                         // 0x0010(0x0010)(Parm, OutParm)
	TArray<double>                                UVs;                                               // 0x0020(0x0010)(Parm, OutParm)
	TArray<double>                                UV;                                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector2D>                      Pos;                                               // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Div;                                               // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Wid;                                               // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Build_Profile_for_Spline) == 0x000008, "Wrong alignment on BP_WaterLake_C_Build_Profile_for_Spline");
static_assert(sizeof(BP_WaterLake_C_Build_Profile_for_Spline) == 0x0000F8, "Wrong size on BP_WaterLake_C_Build_Profile_for_Spline");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Width) == 0x000000, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Width' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Divisions) == 0x000008, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Divisions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Positions) == 0x000010, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Positions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, UVs) == 0x000020, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::UVs' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, UV) == 0x000030, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::UV' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Pos) == 0x000040, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Pos' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Div) == 0x000050, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Div' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Wid) == 0x000058, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Wid' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, Temp_int_Variable) == 0x000060, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000080, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000A0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C8, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_MakeVector2D_ReturnValue) == 0x0000D0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Array_Add_ReturnValue) == 0x0000E8, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_Array_Add_ReturnValue_1) == 0x0000EC, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Build_Profile_for_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_WaterLake_C_Build_Profile_for_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Check if Mesh Asset Exists
// 0x0110 (0x0110 - 0x0000)
struct BP_WaterLake_C_Check_if_Mesh_Asset_Exists final
{
public:
	class FString                                 Asset_Name;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Exists_;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Return_Mesh;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            SM;                                                // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MeshExists;                                        // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAssetRegistry>        CallFunc_GetAssetRegistry_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<struct FAssetData>                     CallFunc_GetAssetsByPath_OutAssetData;             // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetAssetsByPath_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAssetData                             CallFunc_Array_Get_Item;                           // 0x0070(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x5];                                       // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetAsset_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetFullName_ReturnValue;                  // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists) == 0x000008, "Wrong alignment on BP_WaterLake_C_Check_if_Mesh_Asset_Exists");
static_assert(sizeof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists) == 0x000110, "Wrong size on BP_WaterLake_C_Check_if_Mesh_Asset_Exists");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Asset_Name) == 0x000000, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Asset_Name' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Exists_) == 0x000010, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Exists_' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Return_Mesh) == 0x000018, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Return_Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, SM) == 0x000020, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::SM' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, MeshExists) == 0x000028, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::MeshExists' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Temp_bool_True_if_break_was_hit_Variable) == 0x000029, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_GetAssetRegistry_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_GetAssetRegistry_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_GetAssetsByPath_OutAssetData) == 0x000058, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_GetAssetsByPath_OutAssetData' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_GetAssetsByPath_ReturnValue) == 0x000068, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_GetAssetsByPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Less_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_IsValid_ReturnValue) == 0x0000D9, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_BooleanAND_ReturnValue) == 0x0000DA, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_GetAsset_ReturnValue) == 0x0000E0, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_GetAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, K2Node_DynamicCast_AsStatic_Mesh) == 0x0000E8, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_GetFullName_ReturnValue) == 0x0000F8, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_GetFullName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_Contains_ReturnValue) == 0x000108, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Check_if_Mesh_Asset_Exists, CallFunc_BooleanAND_ReturnValue_1) == 0x000109, "Member 'BP_WaterLake_C_Check_if_Mesh_Asset_Exists::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.CheckInvalidateMeshes
// 0x00C8 (0x00C8 - 0x0000)
struct BP_WaterLake_C_CheckInvalidateMeshes final
{
public:
	bool                                          Invalidated;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_2;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Int64Int64_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_3;         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_4;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_DoubleToInt64_ReturnValue_5;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue_1;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue_2;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue_3;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue_4;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Xor_Int64Int64_ReturnValue_5;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_CheckInvalidateMeshes) == 0x000008, "Wrong alignment on BP_WaterLake_C_CheckInvalidateMeshes");
static_assert(sizeof(BP_WaterLake_C_CheckInvalidateMeshes) == 0x0000C8, "Wrong size on BP_WaterLake_C_CheckInvalidateMeshes");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, Invalidated) == 0x000000, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::Invalidated' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_BreakVector2D_X) == 0x000008, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue) == 0x000028, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue_1) == 0x000030, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue_2) == 0x000040, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_EqualEqual_Int64Int64_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_EqualEqual_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_GetSplineLength_ReturnValue) == 0x00004C, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000058, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue_3) == 0x000060, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue_4) == 0x000068, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000070, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Conv_DoubleToInt64_ReturnValue_5) == 0x000078, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Conv_DoubleToInt64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue) == 0x000080, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue_1) == 0x000088, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue_2) == 0x000090, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue_3) == 0x000098, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue_4) == 0x0000A0, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Xor_Int64Int64_ReturnValue_5) == 0x0000A8, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Xor_Int64Int64_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000B8, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_CheckInvalidateMeshes, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0000C0, "Member 'BP_WaterLake_C_CheckInvalidateMeshes::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Decompose To Volume Transforms
// 0x12B0 (0x12B0 - 0x0000)
struct BP_WaterLake_C_Decompose_To_Volume_Transforms final
{
public:
	TArray<struct FTransform>                     Transforms;                                        // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Do_Add_To_Array;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Iteration_Size;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     Swim_Volume_Transform_Array_Optimized;             // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FTransform>                     Swim_Volume_Transform_Array;                       // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          Keep_Reducing;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           TempMesh;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     VolTransforms;                                     // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0200(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0320(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Array_Get_Item_1;                         // 0x0380(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x046B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D4[0xC];                                      // 0x04D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x04E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598[0x8];                                      // 0x0598(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x05A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x060C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x060D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x060E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x060F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_611[0xF];                                      // 0x0611(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0620(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0680(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x3];                                      // 0x06F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_4;            // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0711(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0712(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_713[0x1];                                      // 0x0713(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue_2;             // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x071C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x071D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x071E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71F[0x1];                                      // 0x071F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_781[0x7];                                      // 0x0781(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0800(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_7;                          // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0xF];                                      // 0x0851(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x0860(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_8;                          // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x7];                                      // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_941[0x7];                                      // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x0951(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0952(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_5;    // 0x0953(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_6;    // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_955[0x3];                                      // 0x0955(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x7];                                      // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x7];                                      // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C8[0x8];                                      // 0x09C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x09D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A34[0x4];                                      // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_8;                 // 0x0A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_9;                 // 0x0A88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0AA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue_1;        // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0AE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_10;                // 0x0AF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0B10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue_2;        // 0x0B28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0B40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_9;                          // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x0B60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0B70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_11;                // 0x0B88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x0BA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB8[0x8];                                      // 0x0BB8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0BC0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0C58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0C70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0C88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0CA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0CB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0CD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_1; // 0x0D00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0D20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D39[0x7];                                      // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1; // 0x0D40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0D58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_2; // 0x0D88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0DD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue_2; // 0x0DD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF1[0x7];                                      // 0x0DF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0DF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0E10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0E28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0E40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_2;           // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0E60(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x0EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC1[0x3];                                      // 0x0EC1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0EC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0EC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0EC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ECA[0x6];                                      // 0x0ECA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_3; // 0x0ED0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue_3; // 0x0EE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0F00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x0F18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_7;                     // 0x0F30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_12;                // 0x0F48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_3;           // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F68[0x8];                                      // 0x0F68(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0F70(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD1[0x7];                                      // 0x0FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0FD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF1[0x7];                                      // 0x0FF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0FF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x1010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x1070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1074[0x4];                                     // 0x1074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_Reset_ReturnValue;                        // 0x1078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UDynamicMesh*>                   CallFunc_SplitMeshByComponents_ComponentMeshes;    // 0x1080(0x0010)(ReferenceParm)
	class UDynamicMesh*                           CallFunc_SplitMeshByComponents_ReturnValue;        // 0x1090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_Array_Get_Item_3;                         // 0x1098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x10A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A4[0x4];                                     // 0x10A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometryScriptMeshSelection           CallFunc_CreateSelectAllMeshSelection_Selection;   // 0x10A8(0x0010)()
	class UDynamicMesh*                           CallFunc_CreateSelectAllMeshSelection_ReturnValue; // 0x10B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x10C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C1[0x7];                                     // 0x10C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetMeshSelectionBoundingBox_SelectionBounds; // 0x10C8(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMeshSelectionBoundingBox_bIsEmpty;     // 0x1100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1101[0x7];                                     // 0x1101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMesh*                           CallFunc_GetMeshSelectionBoundingBox_ReturnValue;  // 0x1108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoxCenterSize_Center;                  // 0x1110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBoxCenterSize_Dimensions;              // 0x1128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue_3;        // 0x1140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_RequestMesh_ReturnValue;                  // 0x1158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_10;                         // 0x1160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_10;                         // 0x1168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_10;                         // 0x1170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_13;                // 0x1178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x1190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1194[0xC];                                     // 0x1194(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x11A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x1204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptConvexDecompositionOptions K2Node_MakeStruct_GeometryScriptConvexDecompositionOptions; // 0x1208(0x0028)(NoDestructor)
	struct FGeometryScriptMeshLinearExtrudeOptions K2Node_MakeStruct_GeometryScriptMeshLinearExtrudeOptions; // 0x1230(0x0038)(NoDestructor)
	class UDynamicMesh*                           CallFunc_RequestMesh_ReturnValue_1;                // 0x1268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ApplyMeshLinearExtrudeFaces_ReturnValue;  // 0x1270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ComputeMeshConvexDecomposition_CopyToMeshOut; // 0x1278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_ComputeMeshConvexDecomposition_ReturnValue; // 0x1280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_CopyMeshToMesh_CopyToMeshOut;             // 0x1288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_CopyMeshToMesh_ReturnValue;               // 0x1290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_GetDynamicMesh_ReturnValue;               // 0x1298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_CopyMeshToMesh_CopyToMeshOut_1;           // 0x12A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDynamicMesh*                           CallFunc_CopyMeshToMesh_ReturnValue_1;             // 0x12A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Decompose_To_Volume_Transforms) == 0x000010, "Wrong alignment on BP_WaterLake_C_Decompose_To_Volume_Transforms");
static_assert(sizeof(BP_WaterLake_C_Decompose_To_Volume_Transforms) == 0x0012B0, "Wrong size on BP_WaterLake_C_Decompose_To_Volume_Transforms");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Transforms) == 0x000000, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Transforms' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Do_Add_To_Array) == 0x000010, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Do_Add_To_Array' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Iteration_Size) == 0x000014, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Iteration_Size' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Swim_Volume_Transform_Array_Optimized) == 0x000018, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Swim_Volume_Transform_Array_Optimized' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Swim_Volume_Transform_Array) == 0x000028, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Swim_Volume_Transform_Array' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Keep_Reducing) == 0x000038, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Keep_Reducing' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, TempMesh) == 0x000040, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::TempMesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, VolTransforms) == 0x000048, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::VolTransforms' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_bool_True_if_break_was_hit_Variable) == 0x00005C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Not_PreBool_ReturnValue) == 0x00005D, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Loop_Counter_Variable_1) == 0x00006C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Loop_Counter_Variable_2) == 0x000070, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_2) == 0x000078, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Array_Index_Variable_2) == 0x00007C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Variable) == 0x000080, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_IntInt_ReturnValue) == 0x000084, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000088, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_3) == 0x000090, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Variable_1) == 0x000094, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000A8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Loop_Counter_Variable_3) == 0x0000AC, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000B0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, Temp_int_Array_Index_Variable_3) == 0x0000B4, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_Origin) == 0x0000B8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_BoxExtent) == 0x0000D0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_SphereRadius) == 0x0000E8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_Origin_1) == 0x0000F0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_BoxExtent_1) == 0x000108, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetComponentBounds_SphereRadius_1) == 0x000120, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Divide_VectorVector_ReturnValue) == 0x000128, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X) == 0x000148, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y) == 0x000150, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z) == 0x000158, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_IntInt_ReturnValue) == 0x000160, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue) == 0x000168, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_1) == 0x000180, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue) == 0x0001A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Get_Item) == 0x000200, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location) == 0x000268, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation) == 0x000280, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale) == 0x000298, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue) == 0x0002B0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_1) == 0x0002B8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_1) == 0x0002C0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_1) == 0x0002C8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue) == 0x0002D0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_2) == 0x0002E8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_2) == 0x0002F0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_2) == 0x0002F8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000300, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000308, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Round_ReturnValue) == 0x000310, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Round_ReturnValue_1) == 0x000314, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_1) == 0x000320, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Get_Item_1) == 0x000380, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Length_ReturnValue_1) == 0x0003E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Add_ReturnValue) == 0x0003E4, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003E8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location_1) == 0x0003F0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation_1) == 0x000408, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale_1) == 0x000420, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_3) == 0x000438, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_3) == 0x000440, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_3) == 0x000448, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_4) == 0x000450, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_4) == 0x000458, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_4) == 0x000460, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000468, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000469, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00046A, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x00046B, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000470, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_1) == 0x000478, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_2) == 0x000480, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000498, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0004A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0004A8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0004B0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_3) == 0x0004B8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Round_ReturnValue_2) == 0x0004D0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_2) == 0x0004E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000540, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000548, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000550, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000558, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_4) == 0x000560, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_5) == 0x000578, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000590, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_3) == 0x0005A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000600, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Round_ReturnValue_3) == 0x000608, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x00060C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00060D, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_2) == 0x00060E, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_3) == 0x00060F, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_4) == 0x000610, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_4) == 0x000620, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_5) == 0x000680, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_6) == 0x0006E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0006E4, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Percent_IntInt_ReturnValue) == 0x0006E8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0006EC, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_7) == 0x0006F0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x0006F4, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0006F8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_IntInt_ReturnValue_4) == 0x0006FC, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_8) == 0x000700, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Divide_IntInt_ReturnValue) == 0x000704, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_9) == 0x000708, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Percent_IntInt_ReturnValue_1) == 0x00070C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue_2) == 0x000710, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000711, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_5) == 0x000712, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Percent_IntInt_ReturnValue_2) == 0x000714, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Percent_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_10) == 0x000718, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue_3) == 0x00071C, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_6) == 0x00071D, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_7) == 0x00071E, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location_2) == 0x000720, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation_2) == 0x000738, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale_2) == 0x000750, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_5) == 0x000768, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_5) == 0x000770, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_5) == 0x000778, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000780, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location_3) == 0x000788, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation_3) == 0x0007A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale_3) == 0x0007B8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_6) == 0x0007D0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_6) == 0x0007D8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_6) == 0x0007E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location_4) == 0x0007E8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation_4) == 0x000800, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale_4) == 0x000818, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000830, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_7) == 0x000838, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_7) == 0x000840, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_7) == 0x000848, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000850, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Get_Item_2) == 0x000860, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Length_ReturnValue_2) == 0x0008C0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Location_5) == 0x0008C8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Rotation_5) == 0x0008E0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakTransform_Scale_5) == 0x0008F8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue_4) == 0x000910, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_8) == 0x000918, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_8) == 0x000920, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_8) == 0x000928, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000930, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000938, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_8) == 0x000940, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000948, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_9) == 0x000950, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x000951, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_10) == 0x000952, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_5) == 0x000953, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_EqualEqual_DoubleDouble_ReturnValue_6) == 0x000954, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_EqualEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000958, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_11) == 0x000960, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000968, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_12) == 0x000970, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_6) == 0x000978, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanAND_ReturnValue_13) == 0x000990, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue) == 0x000998, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_7) == 0x0009B0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_6) == 0x0009D0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Add_ReturnValue_1) == 0x000A30, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000A38, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000A40, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000A48, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000A50, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000A58, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_8) == 0x000A60, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_IntInt_ReturnValue_11) == 0x000A78, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000A80, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_9) == 0x000A88, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000AA0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000AB8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Divide_VectorVector_ReturnValue_1) == 0x000AC0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Divide_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000AD8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000AE0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_10) == 0x000AF8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000B10, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Divide_VectorVector_ReturnValue_2) == 0x000B28, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Divide_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000B40, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_9) == 0x000B58, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_9) == 0x000B60, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_9) == 0x000B68, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000B70, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_11) == 0x000B88, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x000BA0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetTransform_ReturnValue) == 0x000BC0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000C20, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000C38, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000C50, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000C58, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000C70, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000C88, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue) == 0x000CA0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000CB8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000CD0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_1) == 0x000CE8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_1) == 0x000D00, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Dot_VectorVector_ReturnValue) == 0x000D18, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_2) == 0x000D20, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x000D38, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1) == 0x000D40, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindLocationClosestToWorldLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000D58, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000D70, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_2) == 0x000D88, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_3) == 0x000DA0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_4) == 0x000DB8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000DD0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindLocationClosestToWorldLocation_ReturnValue_2) == 0x000DD8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindLocationClosestToWorldLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000DF0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000DF8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_InverseTransformLocation_ReturnValue) == 0x000E10, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_5) == 0x000E28, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000E40, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Dot_VectorVector_ReturnValue_2) == 0x000E58, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Dot_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_7) == 0x000E60, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x000EC0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Add_ReturnValue_2) == 0x000EC4, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanOR_ReturnValue) == 0x000EC8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanOR_ReturnValue_1) == 0x000EC9, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_3) == 0x000ED0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_FindLocationClosestToWorldLocation_ReturnValue_3) == 0x000EE8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_FindLocationClosestToWorldLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_6) == 0x000F00, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x000F18, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Normal_ReturnValue_7) == 0x000F30, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Normal_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_12) == 0x000F48, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Dot_VectorVector_ReturnValue_3) == 0x000F60, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Dot_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetTransform_ReturnValue_1) == 0x000F70, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x000FD0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000FD8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BooleanOR_ReturnValue_2) == 0x000FF0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000FF8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_8) == 0x001010, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Add_ReturnValue_3) == 0x001070, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Reset_ReturnValue) == 0x001078, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Reset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_SplitMeshByComponents_ComponentMeshes) == 0x001080, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_SplitMeshByComponents_ComponentMeshes' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_SplitMeshByComponents_ReturnValue) == 0x001090, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_SplitMeshByComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Get_Item_3) == 0x001098, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Length_ReturnValue_3) == 0x0010A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CreateSelectAllMeshSelection_Selection) == 0x0010A8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CreateSelectAllMeshSelection_Selection' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CreateSelectAllMeshSelection_ReturnValue) == 0x0010B8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CreateSelectAllMeshSelection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Less_IntInt_ReturnValue_5) == 0x0010C0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetMeshSelectionBoundingBox_SelectionBounds) == 0x0010C8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetMeshSelectionBoundingBox_SelectionBounds' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetMeshSelectionBoundingBox_bIsEmpty) == 0x001100, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetMeshSelectionBoundingBox_bIsEmpty' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetMeshSelectionBoundingBox_ReturnValue) == 0x001108, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetMeshSelectionBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetBoxCenterSize_Center) == 0x001110, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetBoxCenterSize_Center' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetBoxCenterSize_Dimensions) == 0x001128, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetBoxCenterSize_Dimensions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Divide_VectorVector_ReturnValue_3) == 0x001140, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Divide_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_RequestMesh_ReturnValue) == 0x001158, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_RequestMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_X_10) == 0x001160, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Y_10) == 0x001168, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_BreakVector_Z_10) == 0x001170, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeVector_ReturnValue_13) == 0x001178, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeVector_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Min_ReturnValue) == 0x001190, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_MakeTransform_ReturnValue_9) == 0x0011A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Subtract_IntInt_ReturnValue) == 0x001200, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_Array_Add_ReturnValue_4) == 0x001204, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, K2Node_MakeStruct_GeometryScriptConvexDecompositionOptions) == 0x001208, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::K2Node_MakeStruct_GeometryScriptConvexDecompositionOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, K2Node_MakeStruct_GeometryScriptMeshLinearExtrudeOptions) == 0x001230, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::K2Node_MakeStruct_GeometryScriptMeshLinearExtrudeOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_RequestMesh_ReturnValue_1) == 0x001268, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_RequestMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_ApplyMeshLinearExtrudeFaces_ReturnValue) == 0x001270, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_ApplyMeshLinearExtrudeFaces_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_ComputeMeshConvexDecomposition_CopyToMeshOut) == 0x001278, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_ComputeMeshConvexDecomposition_CopyToMeshOut' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_ComputeMeshConvexDecomposition_ReturnValue) == 0x001280, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_ComputeMeshConvexDecomposition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CopyMeshToMesh_CopyToMeshOut) == 0x001288, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CopyMeshToMesh_CopyToMeshOut' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CopyMeshToMesh_ReturnValue) == 0x001290, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CopyMeshToMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_GetDynamicMesh_ReturnValue) == 0x001298, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_GetDynamicMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CopyMeshToMesh_CopyToMeshOut_1) == 0x0012A0, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CopyMeshToMesh_CopyToMeshOut_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Decompose_To_Volume_Transforms, CallFunc_CopyMeshToMesh_ReturnValue_1) == 0x0012A8, "Member 'BP_WaterLake_C_Decompose_To_Volume_Transforms::CallFunc_CopyMeshToMesh_ReturnValue_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.ExecuteUbergraph_BP_WaterLake
// 0x0100 (0x0100 - 0x0000)
struct BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioSplineEmitterSubsystem*           CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioSplineEmitterSubsystem*           CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0048(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAudioSpline>          CallFunc_RegisterAudioSplineEmitter_AudioSpline_CastInput; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky_1;     // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1;  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation; // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAudioSpline>          CallFunc_UnregisterAudioSplineEmitter_AudioSpline_CastInput; // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake) == 0x000008, "Wrong alignment on BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake");
static_assert(sizeof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake) == 0x000100, "Wrong size on BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, EntryPoint) == 0x000000, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000010, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000020, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue_2) == 0x00002B, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000030, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue_3) == 0x000038, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_Event_EndPlayReason) == 0x000045, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, Temp_delegate_Variable) == 0x000048, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_RegisterAudioSplineEmitter_AudioSpline_CastInput) == 0x000068, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_RegisterAudioSplineEmitter_AudioSpline_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_PostAkEvent_ReturnValue) == 0x000078, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_GetIntrepidSkyInstance_IntrepidSky_1) == 0x000080, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_GetIntrepidSkyInstance_IntrepidSky_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1) == 0x000088, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue_4) == 0x000091, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsValid_ReturnValue_5) == 0x000092, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation) == 0x000098, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0000B0, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C8, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_HasAuthority_ReturnValue) == 0x0000E0, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsWithEditor_ReturnValue) == 0x0000E1, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_UnregisterAudioSplineEmitter_AudioSpline_CastInput) == 0x0000E8, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_UnregisterAudioSplineEmitter_AudioSpline_CastInput' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_BooleanAND_ReturnValue) == 0x0000F8, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake, CallFunc_IsServer_ReturnValue) == 0x0000F9, "Member 'BP_WaterLake_C_ExecuteUbergraph_BP_WaterLake::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Fix Up Meshes
// 0x0002 (0x0002 - 0x0000)
struct BP_WaterLake_C_Fix_Up_Meshes final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Fix_Up_Meshes) == 0x000001, "Wrong alignment on BP_WaterLake_C_Fix_Up_Meshes");
static_assert(sizeof(BP_WaterLake_C_Fix_Up_Meshes) == 0x000002, "Wrong size on BP_WaterLake_C_Fix_Up_Meshes");
static_assert(offsetof(BP_WaterLake_C_Fix_Up_Meshes, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Fix_Up_Meshes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Fix_Up_Meshes, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'BP_WaterLake_C_Fix_Up_Meshes::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Get Current at Location
// 0x0028 (0x0028 - 0x0000)
struct BP_WaterLake_C_Get_Current_at_Location final
{
public:
	struct FVector                                World_Location;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Current_Velocity;                                  // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Get_Current_at_Location) == 0x000008, "Wrong alignment on BP_WaterLake_C_Get_Current_at_Location");
static_assert(sizeof(BP_WaterLake_C_Get_Current_at_Location) == 0x000028, "Wrong size on BP_WaterLake_C_Get_Current_at_Location");
static_assert(offsetof(BP_WaterLake_C_Get_Current_at_Location, World_Location) == 0x000000, "Member 'BP_WaterLake_C_Get_Current_at_Location::World_Location' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Current_at_Location, Current_Velocity) == 0x000018, "Member 'BP_WaterLake_C_Get_Current_at_Location::Current_Velocity' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Get Samples From Spline
// 0x0180 (0x0180 - 0x0000)
struct BP_WaterLake_C_Get_Samples_From_Spline final
{
public:
	const class USplineComponent*                 Spline_0;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Spacing;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      Frames_0;                                          // 0x0010(0x0010)(Parm, OutParm)
	TArray<double>                                FrameTimes;                                        // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FVector2D>                      TwoDFrames;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometryScriptSplineSamplingOptions   K2Node_MakeStruct_GeometryScriptSplineSamplingOptions; // 0x0060(0x000C)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     CallFunc_SampleSplineToTransforms_Frames;          // 0x0070(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_SampleSplineToTransforms_FrameTimes;      // 0x0080(0x0010)(ReferenceParm)
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Get_Samples_From_Spline) == 0x000010, "Wrong alignment on BP_WaterLake_C_Get_Samples_From_Spline");
static_assert(sizeof(BP_WaterLake_C_Get_Samples_From_Spline) == 0x000180, "Wrong size on BP_WaterLake_C_Get_Samples_From_Spline");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, Spline_0) == 0x000000, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::Spline_0' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, Spacing) == 0x000008, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::Spacing' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, Frames_0) == 0x000010, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::Frames_0' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, FrameTimes) == 0x000020, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::FrameTimes' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, TwoDFrames) == 0x000030, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::TwoDFrames' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_GetSplineLength_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_FTrunc_ReturnValue) == 0x00005C, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, K2Node_MakeStruct_GeometryScriptSplineSamplingOptions) == 0x000060, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::K2Node_MakeStruct_GeometryScriptSplineSamplingOptions' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_SampleSplineToTransforms_Frames) == 0x000070, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_SampleSplineToTransforms_Frames' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_SampleSplineToTransforms_FrameTimes) == 0x000080, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_SampleSplineToTransforms_FrameTimes' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakTransform_Location) == 0x0000F8, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakVector_X) == 0x000148, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakVector_Y) == 0x000150, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_BreakVector_Z) == 0x000158, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_MakeVector2D_ReturnValue) == 0x000160, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Array_Add_ReturnValue) == 0x000170, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Get_Samples_From_Spline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BP_WaterLake_C_Get_Samples_From_Spline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.GetControlledPawnLocation
// 0x0080 (0x0080 - 0x0000)
struct BP_WaterLake_C_GetControlledPawnLocation final
{
public:
	struct FVector                                ControlledPawnLocation;                            // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable;                              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_GetControlledPawnLocation) == 0x000008, "Wrong alignment on BP_WaterLake_C_GetControlledPawnLocation");
static_assert(sizeof(BP_WaterLake_C_GetControlledPawnLocation) == 0x000080, "Wrong size on BP_WaterLake_C_GetControlledPawnLocation");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, ControlledPawnLocation) == 0x000000, "Member 'BP_WaterLake_C_GetControlledPawnLocation::ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, Temp_bool_Variable) == 0x000018, "Member 'BP_WaterLake_C_GetControlledPawnLocation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, Temp_struct_Variable) == 0x000020, "Member 'BP_WaterLake_C_GetControlledPawnLocation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_WaterLake_C_GetControlledPawnLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_GetControlledPawnLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_GetControlledPawnLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_GetControlledPawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetControlledPawnLocation, K2Node_Select_Default) == 0x000068, "Member 'BP_WaterLake_C_GetControlledPawnLocation::K2Node_Select_Default' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.GetPlayerControllerCameraRotation
// 0x0078 (0x0078 - 0x0000)
struct BP_WaterLake_C_GetPlayerControllerCameraRotation final
{
public:
	struct FRotator                               PlayerControllerCameraRotation;                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WaterLake_C_GetPlayerControllerCameraRotation) == 0x000008, "Wrong alignment on BP_WaterLake_C_GetPlayerControllerCameraRotation");
static_assert(sizeof(BP_WaterLake_C_GetPlayerControllerCameraRotation) == 0x000078, "Wrong size on BP_WaterLake_C_GetPlayerControllerCameraRotation");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, PlayerControllerCameraRotation) == 0x000000, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, Temp_bool_Variable) == 0x000018, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, Temp_struct_Variable) == 0x000020, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000038, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, CallFunc_GetCameraRotation_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_GetPlayerControllerCameraRotation, K2Node_Select_Default) == 0x000060, "Member 'BP_WaterLake_C_GetPlayerControllerCameraRotation::K2Node_Select_Default' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.GetSplineComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_WaterLake_C_GetSplineComponent final
{
public:
	class USplineComponent*                       ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_GetSplineComponent) == 0x000008, "Wrong alignment on BP_WaterLake_C_GetSplineComponent");
static_assert(sizeof(BP_WaterLake_C_GetSplineComponent) == 0x000008, "Wrong size on BP_WaterLake_C_GetSplineComponent");
static_assert(offsetof(BP_WaterLake_C_GetSplineComponent, ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_GetSplineComponent::ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.GetSplineEmitterComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_WaterLake_C_GetSplineEmitterComponent final
{
public:
	class USceneComponent*                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_GetSplineEmitterComponent) == 0x000008, "Wrong alignment on BP_WaterLake_C_GetSplineEmitterComponent");
static_assert(sizeof(BP_WaterLake_C_GetSplineEmitterComponent) == 0x000008, "Wrong size on BP_WaterLake_C_GetSplineEmitterComponent");
static_assert(offsetof(BP_WaterLake_C_GetSplineEmitterComponent, ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_GetSplineEmitterComponent::ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Outside Spline
// 0x00D8 (0x00D8 - 0x0000)
struct BP_WaterLake_C_Outside_Spline final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Outside_Spline) == 0x000008, "Wrong alignment on BP_WaterLake_C_Outside_Spline");
static_assert(sizeof(BP_WaterLake_C_Outside_Spline) == 0x0000D8, "Wrong size on BP_WaterLake_C_Outside_Spline");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Outside_Spline::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000008, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000020, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x000038, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Normal_ReturnValue) == 0x000068, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000098, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Normal_ReturnValue_1) == 0x0000B0, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000C8, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Outside_Spline, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'BP_WaterLake_C_Outside_Spline::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_WaterLake_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_WaterLake_C_ReceiveEndPlay");
static_assert(sizeof(BP_WaterLake_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_WaterLake_C_ReceiveEndPlay");
static_assert(offsetof(BP_WaterLake_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_WaterLake_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WaterLake_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WaterLake_C_ReceiveTick");
static_assert(sizeof(BP_WaterLake_C_ReceiveTick) == 0x000004, "Wrong size on BP_WaterLake_C_ReceiveTick");
static_assert(offsetof(BP_WaterLake_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WaterLake_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Refresh Water Info
// 0x0018 (0x0018 - 0x0000)
struct BP_WaterLake_C_Refresh_Water_Info final
{
public:
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Refresh_Water_Info) == 0x000008, "Wrong alignment on BP_WaterLake_C_Refresh_Water_Info");
static_assert(sizeof(BP_WaterLake_C_Refresh_Water_Info) == 0x000018, "Wrong size on BP_WaterLake_C_Refresh_Water_Info");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000000, "Member 'BP_WaterLake_C_Refresh_Water_Info::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000008, "Member 'BP_WaterLake_C_Refresh_Water_Info::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_WaterLake_C_Refresh_Water_Info::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_WaterLake_C_Refresh_Water_Info::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_WaterLake_C_Refresh_Water_Info::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Refresh Water Info Delayed
// 0x0018 (0x0018 - 0x0000)
struct BP_WaterLake_C_Refresh_Water_Info_Delayed final
{
public:
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Refresh_Water_Info_Delayed) == 0x000008, "Wrong alignment on BP_WaterLake_C_Refresh_Water_Info_Delayed");
static_assert(sizeof(BP_WaterLake_C_Refresh_Water_Info_Delayed) == 0x000018, "Wrong size on BP_WaterLake_C_Refresh_Water_Info_Delayed");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info_Delayed, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000000, "Member 'BP_WaterLake_C_Refresh_Water_Info_Delayed::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info_Delayed, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000008, "Member 'BP_WaterLake_C_Refresh_Water_Info_Delayed::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info_Delayed, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_WaterLake_C_Refresh_Water_Info_Delayed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info_Delayed, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_WaterLake_C_Refresh_Water_Info_Delayed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Refresh_Water_Info_Delayed, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'BP_WaterLake_C_Refresh_Water_Info_Delayed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.RenderingMinimap
// 0x0010 (0x0010 - 0x0000)
struct BP_WaterLake_C_RenderingMinimap final
{
public:
	bool                                          Rendering;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_RenderingMinimap) == 0x000008, "Wrong alignment on BP_WaterLake_C_RenderingMinimap");
static_assert(sizeof(BP_WaterLake_C_RenderingMinimap) == 0x000010, "Wrong size on BP_WaterLake_C_RenderingMinimap");
static_assert(offsetof(BP_WaterLake_C_RenderingMinimap, Rendering) == 0x000000, "Member 'BP_WaterLake_C_RenderingMinimap::Rendering' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_RenderingMinimap, Temp_bool_Variable) == 0x000001, "Member 'BP_WaterLake_C_RenderingMinimap::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_RenderingMinimap, CallFunc_IsWithEditor_ReturnValue) == 0x000002, "Member 'BP_WaterLake_C_RenderingMinimap::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_RenderingMinimap, K2Node_Select_Default) == 0x000008, "Member 'BP_WaterLake_C_RenderingMinimap::K2Node_Select_Default' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Setup Debug
// 0x0080 (0x0080 - 0x0000)
struct BP_WaterLake_C_Setup_Debug final
{
public:
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0000(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Setup_Debug) == 0x000010, "Wrong alignment on BP_WaterLake_C_Setup_Debug");
static_assert(sizeof(BP_WaterLake_C_Setup_Debug) == 0x000080, "Wrong size on BP_WaterLake_C_Setup_Debug");
static_assert(offsetof(BP_WaterLake_C_Setup_Debug, CallFunc_MakeTransform_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Setup_Debug::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Debug, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_WaterLake_C_Setup_Debug::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Debug, CallFunc_AddComponent_ReturnValue) == 0x000068, "Member 'BP_WaterLake_C_Setup_Debug::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Debug, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_WaterLake_C_Setup_Debug::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Debug, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'BP_WaterLake_C_Setup_Debug::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Setup Dynamic Meshes
// 0x00B0 (0x00B0 - 0x0000)
struct BP_WaterLake_C_Setup_Dynamic_Meshes final
{
public:
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_Get_Samples_From_Spline_Frames;           // 0x0078(0x0010)(ReferenceParm)
	TArray<double>                                CallFunc_Get_Samples_From_Spline_FrameTimes;       // 0x0088(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Setup_Dynamic_Meshes) == 0x000008, "Wrong alignment on BP_WaterLake_C_Setup_Dynamic_Meshes");
static_assert(sizeof(BP_WaterLake_C_Setup_Dynamic_Meshes) == 0x0000B0, "Wrong size on BP_WaterLake_C_Setup_Dynamic_Meshes");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_GetSplineLength_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_GetSplineLength_ReturnValue_1) == 0x000018, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_GetSplineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000028, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000038, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000048, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_SelectFloat_ReturnValue_1) == 0x000070, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Get_Samples_From_Spline_Frames) == 0x000078, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Get_Samples_From_Spline_Frames' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Get_Samples_From_Spline_FrameTimes) == 0x000088, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Get_Samples_From_Spline_FrameTimes' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x0000A0, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000A8, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_Dynamic_Meshes, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000AC, "Member 'BP_WaterLake_C_Setup_Dynamic_Meshes::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Setup StaticMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_WaterLake_C_Setup_StaticMesh final
{
public:
	class UStaticMesh*                            Mesh;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Component;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Var;                                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Setup_StaticMesh) == 0x000008, "Wrong alignment on BP_WaterLake_C_Setup_StaticMesh");
static_assert(sizeof(BP_WaterLake_C_Setup_StaticMesh) == 0x000020, "Wrong size on BP_WaterLake_C_Setup_StaticMesh");
static_assert(offsetof(BP_WaterLake_C_Setup_StaticMesh, Mesh) == 0x000000, "Member 'BP_WaterLake_C_Setup_StaticMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_StaticMesh, Component) == 0x000008, "Member 'BP_WaterLake_C_Setup_StaticMesh::Component' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_StaticMesh, Var) == 0x000010, "Member 'BP_WaterLake_C_Setup_StaticMesh::Var' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Setup_StaticMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000018, "Member 'BP_WaterLake_C_Setup_StaticMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Update Mesh Visibility
// 0x0001 (0x0001 - 0x0000)
struct BP_WaterLake_C_Update_Mesh_Visibility final
{
public:
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Update_Mesh_Visibility) == 0x000001, "Wrong alignment on BP_WaterLake_C_Update_Mesh_Visibility");
static_assert(sizeof(BP_WaterLake_C_Update_Mesh_Visibility) == 0x000001, "Wrong size on BP_WaterLake_C_Update_Mesh_Visibility");
static_assert(offsetof(BP_WaterLake_C_Update_Mesh_Visibility, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Update_Mesh_Visibility::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.Update Static Meshes
// 0x0020 (0x0020 - 0x0000)
struct BP_WaterLake_C_Update_Static_Meshes final
{
public:
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_Update_Static_Meshes) == 0x000008, "Wrong alignment on BP_WaterLake_C_Update_Static_Meshes");
static_assert(sizeof(BP_WaterLake_C_Update_Static_Meshes) == 0x000020, "Wrong size on BP_WaterLake_C_Update_Static_Meshes");
static_assert(offsetof(BP_WaterLake_C_Update_Static_Meshes, CallFunc_GetMaterial_ReturnValue) == 0x000000, "Member 'BP_WaterLake_C_Update_Static_Meshes::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Update_Static_Meshes, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'BP_WaterLake_C_Update_Static_Meshes::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Update_Static_Meshes, CallFunc_SetStaticMesh_ReturnValue) == 0x000010, "Member 'BP_WaterLake_C_Update_Static_Meshes::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Update_Static_Meshes, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000014, "Member 'BP_WaterLake_C_Update_Static_Meshes::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_Update_Static_Meshes, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000018, "Member 'BP_WaterLake_C_Update_Static_Meshes::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function BP_WaterLake.BP_WaterLake_C.UserConstructionScript
// 0x0070 (0x0070 - 0x0000)
struct BP_WaterLake_C_UserConstructionScript final
{
public:
	TArray<double>                                SplinePointUV;                                     // 0x0000(0x0010)(Edit, BlueprintVisible)
	double                                        Segment_Remainder;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Segment_Len;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Section_Len;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Section_Start;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     SplinePoints;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckInvalidateMeshes_Invalidated;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDynamicMeshPool*                       CallFunc_CreateDynamicMeshPool_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterLake_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_WaterLake_C_UserConstructionScript");
static_assert(sizeof(BP_WaterLake_C_UserConstructionScript) == 0x000070, "Wrong size on BP_WaterLake_C_UserConstructionScript");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, SplinePointUV) == 0x000000, "Member 'BP_WaterLake_C_UserConstructionScript::SplinePointUV' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, Segment_Remainder) == 0x000010, "Member 'BP_WaterLake_C_UserConstructionScript::Segment_Remainder' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, Segment_Len) == 0x000018, "Member 'BP_WaterLake_C_UserConstructionScript::Segment_Len' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, Section_Len) == 0x000020, "Member 'BP_WaterLake_C_UserConstructionScript::Section_Len' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, Section_Start) == 0x000028, "Member 'BP_WaterLake_C_UserConstructionScript::Section_Start' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, SplinePoints) == 0x000030, "Member 'BP_WaterLake_C_UserConstructionScript::SplinePoints' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_GetGameState_ReturnValue) == 0x000040, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_IsWithEditor_ReturnValue) == 0x000048, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_CheckInvalidateMeshes_Invalidated) == 0x00004A, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_CheckInvalidateMeshes_Invalidated' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_CreateDynamicMeshPool_ReturnValue) == 0x000050, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_CreateDynamicMeshPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000058, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000060, "Member 'BP_WaterLake_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_WaterLake_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_2) == 0x00006A, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WaterLake_C_UserConstructionScript, CallFunc_K2_SetActorRotation_ReturnValue) == 0x00006B, "Member 'BP_WaterLake_C_UserConstructionScript::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

