#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Foliage

#include "Basic.hpp"

#include "Foliage_classes.hpp"
#include "Foliage_parameters.hpp"


namespace SDK
{

// Function Foliage.InstancedFoliageActor.RegisterToFoliageActorSystem
// (Final, Native, Protected)

void AInstancedFoliageActor::RegisterToFoliageActorSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstancedFoliageActor", "RegisterToFoliageActorSystem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.InstancedFoliageActor.UnRegisterFromFoliageActorSystem
// (Final, Native, Protected)

void AInstancedFoliageActor::UnRegisterFromFoliageActorSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstancedFoliageActor", "UnRegisterFromFoliageActorSystem");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.InstancedFoliageActor.TickFISMCAudio
// (Final, Native, Public, Const)

void AInstancedFoliageActor::TickFISMCAudio() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InstancedFoliageActor", "TickFISMCAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.FoliageInstancedStaticMeshComponent.TickClientAudio
// (Native, Public)

void UFoliageInstancedStaticMeshComponent::TickClientAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FoliageInstancedStaticMeshComponent", "TickClientAudio");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.GatherableFISMC.OnFoliageSkeletalMeshComponentHitEvent
// (Native, Public, HasOutParams, HasDefaults)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           OtherActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComponent                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   NormalImpulse                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                Hit                                                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void UGatherableFISMC::OnFoliageSkeletalMeshComponentHitEvent(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GatherableFISMC", "OnFoliageSkeletalMeshComponentHitEvent");

	Params::GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.GatherableFISMC.RegisterToSystem
// (Final, Native, Public)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGatherableFISMC::RegisterToSystem(class UWorld* InWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GatherableFISMC", "RegisterToSystem");

	Params::GatherableFISMC_RegisterToSystem Parms{};

	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.GatherableFISMC.UnRegisterFromSystem
// (Final, Native, Public)
// Parameters:
// class UWorld*                           InWorld                                                (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UGatherableFISMC::UnRegisterFromSystem(class UWorld* InWorld)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GatherableFISMC", "UnRegisterFromSystem");

	Params::GatherableFISMC_UnRegisterFromSystem Parms{};

	Parms.InWorld = InWorld;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageActorSystem.AddFoliageInstanceToQuadTree
// (Final, Native, Public)
// Parameters:
// const class AInstancedFoliageActor*     InstancedFoliageActor                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIntrepidFoliageActorSystem::AddFoliageInstanceToQuadTree(const class AInstancedFoliageActor* InstancedFoliageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageActorSystem", "AddFoliageInstanceToQuadTree");

	Params::IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree Parms{};

	Parms.InstancedFoliageActor = InstancedFoliageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageActorSystem.FindNearestFoliageActorsToTick
// (Final, Native, Public, HasOutParams, HasDefaults)
// Parameters:
// const struct FVector&                   PlayerPosition                                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int64>                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<int64> UIntrepidFoliageActorSystem::FindNearestFoliageActorsToTick(const struct FVector& PlayerPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageActorSystem", "FindNearestFoliageActorsToTick");

	Params::IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick Parms{};

	Parms.PlayerPosition = std::move(PlayerPosition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Foliage.IntrepidFoliageActorSystem.RemoveFoliageInstanceFromQuadTree
// (Final, Native, Public)
// Parameters:
// const class AInstancedFoliageActor*     InstancedFoliageActor                                  (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UIntrepidFoliageActorSystem::RemoveFoliageInstanceFromQuadTree(const class AInstancedFoliageActor* InstancedFoliageActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageActorSystem", "RemoveFoliageInstanceFromQuadTree");

	Params::IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree Parms{};

	Parms.InstancedFoliageActor = InstancedFoliageActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageActorSystem.GetPlayerPosition
// (Final, Native, Public, HasDefaults, Const)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UIntrepidFoliageActorSystem::GetPlayerPosition() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageActorSystem", "GetPlayerPosition");

	Params::IntrepidFoliageActorSystem_GetPlayerPosition Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Foliage.IntrepidFoliageStateComponent.OnIndexedStatesChanged
// (Final, Native, Private, HasOutParams)
// Parameters:
// const uint16                            Guid                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInstancedFoliageState&    NewFoliageState                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIntrepidFoliageStateComponent::OnIndexedStatesChanged(const uint16 Guid, const struct FInstancedFoliageState& NewFoliageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageStateComponent", "OnIndexedStatesChanged");

	Params::IntrepidFoliageStateComponent_OnIndexedStatesChanged Parms{};

	Parms.Guid = Guid;
	Parms.NewFoliageState = std::move(NewFoliageState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageStateComponent.OnIndexedStatesRemoved
// (Final, Native, Private, HasOutParams)
// Parameters:
// const uint16                            Guid                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FInstancedFoliageState&    OldFoliageState                                        (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)

void UIntrepidFoliageStateComponent::OnIndexedStatesRemoved(const uint16 Guid, const struct FInstancedFoliageState& OldFoliageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageStateComponent", "OnIndexedStatesRemoved");

	Params::IntrepidFoliageStateComponent_OnIndexedStatesRemoved Parms{};

	Parms.Guid = Guid;
	Parms.OldFoliageState = std::move(OldFoliageState);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageStateComponent.OnRep_FoliageComponentUUID
// (Final, Native, Public)

void UIntrepidFoliageStateComponent::OnRep_FoliageComponentUUID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageStateComponent", "OnRep_FoliageComponentUUID");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageStateComponent.OnRep_IndexedStates
// (Final, Native, Private)

void UIntrepidFoliageStateComponent::OnRep_IndexedStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageStateComponent", "OnRep_IndexedStates");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidFoliageStateComponent.OnRep_Initialized
// (Final, Native, Public)

void UIntrepidFoliageStateComponent::OnRep_Initialized()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidFoliageStateComponent", "OnRep_Initialized");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidStateIFA.InterServerCompleteIFGathering
// (Net, NetReliable, Native, Event, Public, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerGuid                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                PlayerTransform                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayerInteractionDistance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint8                                   InteractionType                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OriginalInstanceIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageActorName                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageComponentUUID                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFoliageState                           FoliageState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AIntrepidStateIFA::InterServerCompleteIFGathering(const struct FGuid& PlayerGuid, const struct FTransform& PlayerTransform, float PlayerInteractionDistance, uint8 InteractionType, int32 OriginalInstanceIndex, const class FName& FoliageActorName, const class FName& FoliageComponentUUID, EFoliageState FoliageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidStateIFA", "InterServerCompleteIFGathering");

	Params::IntrepidStateIFA_InterServerCompleteIFGathering Parms{};

	Parms.PlayerGuid = std::move(PlayerGuid);
	Parms.PlayerTransform = std::move(PlayerTransform);
	Parms.PlayerInteractionDistance = PlayerInteractionDistance;
	Parms.InteractionType = InteractionType;
	Parms.OriginalInstanceIndex = OriginalInstanceIndex;
	Parms.FoliageActorName = FoliageActorName;
	Parms.FoliageComponentUUID = FoliageComponentUUID;
	Parms.FoliageState = FoliageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidStateIFA.InterServerForceAdvanceFoliageInstances
// (Net, NetReliable, Native, Event, Public)
// Parameters:
// const TArray<int32>&                    OriginalInstanceIndices                                (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// EFoliageState                           TargetFoliageState                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageActorName                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageComponentUUID                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bSuppressIndices                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AIntrepidStateIFA::InterServerForceAdvanceFoliageInstances(const TArray<int32>& OriginalInstanceIndices, EFoliageState TargetFoliageState, const class FName& FoliageActorName, const class FName& FoliageComponentUUID, bool bSuppressIndices)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidStateIFA", "InterServerForceAdvanceFoliageInstances");

	Params::IntrepidStateIFA_InterServerForceAdvanceFoliageInstances Parms{};

	Parms.OriginalInstanceIndices = std::move(OriginalInstanceIndices);
	Parms.TargetFoliageState = TargetFoliageState;
	Parms.FoliageActorName = FoliageActorName;
	Parms.FoliageComponentUUID = FoliageComponentUUID;
	Parms.bSuppressIndices = bSuppressIndices;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidStateIFA.InterServerInitiateIFGathering
// (Net, NetReliable, Native, Event, Public, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerGuid                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FTransform&                PlayerTransform                                        (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   PlayerInteractionDistance                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OriginalInstanceIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageActorName                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageComponentUUID                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EFoliageState                           FoliageState                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AIntrepidStateIFA::InterServerInitiateIFGathering(const struct FGuid& PlayerGuid, const struct FTransform& PlayerTransform, float PlayerInteractionDistance, int32 OriginalInstanceIndex, const class FName& FoliageActorName, const class FName& FoliageComponentUUID, EFoliageState FoliageState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidStateIFA", "InterServerInitiateIFGathering");

	Params::IntrepidStateIFA_InterServerInitiateIFGathering Parms{};

	Parms.PlayerGuid = std::move(PlayerGuid);
	Parms.PlayerTransform = std::move(PlayerTransform);
	Parms.PlayerInteractionDistance = PlayerInteractionDistance;
	Parms.OriginalInstanceIndex = OriginalInstanceIndex;
	Parms.FoliageActorName = FoliageActorName;
	Parms.FoliageComponentUUID = FoliageComponentUUID;
	Parms.FoliageState = FoliageState;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidStateIFA.InterServerInterruptIFGathering
// (Net, NetReliable, Native, Event, Public, HasDefaults)
// Parameters:
// const struct FGuid&                     PlayerGuid                                             (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OriginalInstanceIndex                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageActorName                                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class FName&                      FoliageComponentUUID                                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void AIntrepidStateIFA::InterServerInterruptIFGathering(const struct FGuid& PlayerGuid, int32 OriginalInstanceIndex, const class FName& FoliageActorName, const class FName& FoliageComponentUUID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidStateIFA", "InterServerInterruptIFGathering");

	Params::IntrepidStateIFA_InterServerInterruptIFGathering Parms{};

	Parms.PlayerGuid = std::move(PlayerGuid);
	Parms.OriginalInstanceIndex = OriginalInstanceIndex;
	Parms.FoliageActorName = FoliageActorName;
	Parms.FoliageComponentUUID = FoliageComponentUUID;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.IntrepidStateIFA.OnRep_RuntimeNetCullDistance
// (Final, Native, Public)

void AIntrepidStateIFA::OnRep_RuntimeNetCullDistance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("IntrepidStateIFA", "OnRep_RuntimeNetCullDistance");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.FoliageStatistics.FoliageOverlappingBoxCount
// (Final, RequiredAPI, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMesh*                StaticMesh                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBox&                      Box                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFoliageStatistics::FoliageOverlappingBoxCount(class UObject* WorldContextObject, const class UStaticMesh* StaticMesh, const struct FBox& Box)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FoliageStatistics", "FoliageOverlappingBoxCount");

	Params::FoliageStatistics_FoliageOverlappingBoxCount Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StaticMesh = StaticMesh;
	Parms.Box = std::move(Box);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Foliage.FoliageStatistics.FoliageOverlappingBoxTransforms
// (Final, RequiredAPI, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMesh*                StaticMesh                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FBox&                      Box                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FTransform>*              OutTransforms                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)

void UFoliageStatistics::FoliageOverlappingBoxTransforms(class UObject* WorldContextObject, const class UStaticMesh* StaticMesh, const struct FBox& Box, TArray<struct FTransform>* OutTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FoliageStatistics", "FoliageOverlappingBoxTransforms");

	Params::FoliageStatistics_FoliageOverlappingBoxTransforms Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StaticMesh = StaticMesh;
	Parms.Box = std::move(Box);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransforms != nullptr)
		*OutTransforms = std::move(Parms.OutTransforms);
}


// Function Foliage.FoliageStatistics.FoliageOverlappingSphereCount
// (Final, RequiredAPI, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const class UStaticMesh*                StaticMesh                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FVector&                   CenterPosition                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Radius                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UFoliageStatistics::FoliageOverlappingSphereCount(class UObject* WorldContextObject, const class UStaticMesh* StaticMesh, const struct FVector& CenterPosition, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FoliageStatistics", "FoliageOverlappingSphereCount");

	Params::FoliageStatistics_FoliageOverlappingSphereCount Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.StaticMesh = StaticMesh;
	Parms.CenterPosition = std::move(CenterPosition);
	Parms.Radius = Radius;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function Foliage.InteractiveFoliageActor.CapsuleTouched
// (Final, Native, Protected, HasOutParams)
// Parameters:
// class UPrimitiveComponent*              OverlappedComp                                         (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           Other                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*              OtherComp                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   OtherBodyIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bFromSweep                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// const struct FHitResult&                OverlapInfo                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

void AInteractiveFoliageActor::CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InteractiveFoliageActor", "CapsuleTouched");

	Params::InteractiveFoliageActor_CapsuleTouched Parms{};

	Parms.OverlappedComp = OverlappedComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.OverlapInfo = std::move(OverlapInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Foliage.ProceduralFoliageSpawner.Simulate
// (Final, RequiredAPI, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   NumSteps                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UProceduralFoliageSpawner::Simulate(int32 NumSteps)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ProceduralFoliageSpawner", "Simulate");

	Params::ProceduralFoliageSpawner_Simulate Parms{};

	Parms.NumSteps = NumSteps;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

