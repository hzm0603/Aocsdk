#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_EventObjectiveItem

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_EventObjectiveItem.WBP_EventObjectiveItem_C.ExecuteUbergraph_WBP_EventObjectiveItem
// 0x0020 (0x0020 - 0x0000)
struct WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            UniqueObjectNameForCooking_SlateColor;             // 0x0004(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem) == 0x000004, "Wrong alignment on WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem");
static_assert(sizeof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem) == 0x000020, "Wrong size on WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, EntryPoint) == 0x000000, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, UniqueObjectNameForCooking_SlateColor) == 0x000004, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::UniqueObjectNameForCooking_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, K2Node_Event_IsDesignTime) == 0x00001A, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, CallFunc_IsValid_ReturnValue_2) == 0x00001B, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'WBP_EventObjectiveItem_C_ExecuteUbergraph_WBP_EventObjectiveItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_EventObjectiveItem.WBP_EventObjectiveItem_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_EventObjectiveItem_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_EventObjectiveItem_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_EventObjectiveItem_C_PreConstruct");
static_assert(sizeof(WBP_EventObjectiveItem_C_PreConstruct) == 0x000001, "Wrong size on WBP_EventObjectiveItem_C_PreConstruct");
static_assert(offsetof(WBP_EventObjectiveItem_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_EventObjectiveItem_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

