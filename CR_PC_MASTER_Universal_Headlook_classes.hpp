#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_PC_MASTER_Universal_Headlook

#include "Basic.hpp"

#include "AnimationCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "PBIK_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass CR_PC_MASTER_Universal_Headlook.CR_PC_MASTER_Universal_Headlook_C
// 0x0048 (0x0678 - 0x0630)
class UCR_PC_MASTER_Universal_Headlook_C final : public UControlRig
{
public:
	bool                                          ShouldDoHeadLook;                                  // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAiming;                                          // 0x0631(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_632[0x6];                                      // 0x0632(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLookAtLocation;                               // 0x0638(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CRLookAtLocation;                                  // 0x0650(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LOD_Level;                                         // 0x0668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66C[0x4];                                      // 0x066C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Weight_From_Anim;                                  // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_PC_MASTER_Universal_Headlook_C">();
	}
	static class UCR_PC_MASTER_Universal_Headlook_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_PC_MASTER_Universal_Headlook_C>();
	}
};
static_assert(alignof(UCR_PC_MASTER_Universal_Headlook_C) == 0x000008, "Wrong alignment on UCR_PC_MASTER_Universal_Headlook_C");
static_assert(sizeof(UCR_PC_MASTER_Universal_Headlook_C) == 0x000678, "Wrong size on UCR_PC_MASTER_Universal_Headlook_C");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, ShouldDoHeadLook) == 0x000630, "Member 'UCR_PC_MASTER_Universal_Headlook_C::ShouldDoHeadLook' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, IsAiming) == 0x000631, "Member 'UCR_PC_MASTER_Universal_Headlook_C::IsAiming' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, WorldLookAtLocation) == 0x000638, "Member 'UCR_PC_MASTER_Universal_Headlook_C::WorldLookAtLocation' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, CRLookAtLocation) == 0x000650, "Member 'UCR_PC_MASTER_Universal_Headlook_C::CRLookAtLocation' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, LOD_Level) == 0x000668, "Member 'UCR_PC_MASTER_Universal_Headlook_C::LOD_Level' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_C, Weight_From_Anim) == 0x000670, "Member 'UCR_PC_MASTER_Universal_Headlook_C::Weight_From_Anim' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook.RigVMMemory_Literal
// 0x0CA8 (0x0CF0 - 0x0048)
class CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___ParentConstraint_2_Child__Const;      // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___ParentConstraint_2_bMaintainOffset__Const; // 0x0054(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransformFilter                       RigVMModel___ParentConstraint_2_Filter__Const;     // 0x0055(0x0009)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_2_Parents__Const;    // 0x0060(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_2_AdvancedSettings__Const; // 0x0070(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___ParentConstraint_2_Weight__Const;     // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_3_Child__Const;      // 0x0078(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_3_Parents__Const;    // 0x0088(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_3_AdvancedSettings__Const; // 0x0098(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___Set_Transform_Item__Const;            // 0x009C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___Set_Transform_Space__Const;           // 0x00A8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Set_Transform_bInitial__Const;        // 0x00A9(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x2];                                       // 0x00AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___GetTransform_6_Item__Const;           // 0x00AC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___Set_Transform_1_Item__Const;          // 0x00B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_6_1_Item__Const;         // 0x00C4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___GetCurveValue_Curve__Const;           // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_False__Const; // 0x00D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           RigVMModel___RigVMFunction_MathQuaternionToEuler_3_RotationOrder__Const; // 0x00DC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_SourceMinimum__Const;           // 0x00E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_SourceMaximum__Const;           // 0x00E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_TargetMinimum__Const;           // 0x00F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_TargetMaximum__Const;           // 0x00F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_Item__Const;     // 0x0100(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__Const;    // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_Item__Const;             // 0x0170(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Greater_1_B__Const;                   // 0x0180(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_2_B__Const;                       // 0x0188(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Greater_B__Const;                     // 0x01A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_SourceMaximum__Const;         // 0x01A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const; // 0x01B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitDebugTransformMode                    RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const; // 0x0210(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const; // 0x0214(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const; // 0x0224(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const; // 0x0228(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_Item__Const;   // 0x022C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_3_SourceMaximum__Const;         // 0x0238(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___Set_Transform_2_1_Item__Const;        // 0x0240(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_1_Strength__Const;       // 0x024C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___Set_Transform_2_2_Item__Const;        // 0x0250(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LessEqual_1_1_B__Const;               // 0x0260(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_1_1_Child__Const;    // 0x0268(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_2_1_B__Const;                  // 0x0274(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_1_1_Parents__Const;  // 0x0280(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_1_1_AdvancedSettings__Const; // 0x0290(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___Concat_1_1_1_B__Const;                // 0x0294(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__Const;             // 0x02A0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Secondary__Const;           // 0x02E8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimItem_1_DebugSettings__Const;       // 0x0330(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_2_Items__Const;   // 0x03A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_Items__Const;     // 0x03B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FFilterOptionPerAxis                   RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const; // 0x03C0(0x0003)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_3C3[0x5];                                      // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const; // 0x03C8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_RotationConstraint_AdvancedSettings RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const; // 0x03D8(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_3DA[0x6];                                      // 0x03DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_2_B__Const;                  // 0x03E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_1_Items__Const;   // 0x03E8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const; // 0x03F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const; // 0x0408(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_RotationConstraint_AdvancedSettings RigVMModel___RotationConstraintLocalSpaceOffset_1_1_AdvancedSettings__Const; // 0x0418(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_41A[0x6];                                      // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_2_1_1_B__Const;              // 0x0420(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const; // 0x0428(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_434[0x4];                                      // 0x0434(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const; // 0x0438(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___PBIK_Root__Const;                     // 0x0448(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPBIKEffector>                  RigVMModel___PBIK_Effectors__Const;                // 0x0450(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_1_1_1_Item__Const; // 0x0460(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EEulerRotationOrder                           RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const; // 0x046C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Subtract_B__Const;                    // 0x0470(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_SourceMaximum__Const;         // 0x0478(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_Strength__Const;         // 0x0480(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPBIKBoneSetting>               RigVMModel___PBIK_BoneSettings__Const;             // 0x0488(0x0010)(Edit, EditConst, NonTransactional)
	TArray<class FName>                           RigVMModel___PBIK_ExcludedBones__Const;            // 0x0498(0x0010)(Edit, EditConst, NonTransactional)
	struct FPBIKSolverSettings                    RigVMModel___PBIK_Settings__Const;                 // 0x04A8(0x003C)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FPBIKDebug                             RigVMModel___PBIK_Debug__Const;                    // 0x04E4(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)
	ERigUnitDebugTransformMode                    RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Mode__Const; // 0x04EC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Color__Const; // 0x04F0(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Scale__Const; // 0x0500(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_3_Parent__Const;         // 0x0504(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SpawnControl_3_Name__Const;           // 0x0510(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_518[0x8];                                      // 0x0518(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RigVMFunction_MathTransformMake_Rotation__Const; // 0x0520(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathTransformMake_Scale__Const; // 0x0540(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_3_Settings__Const; // 0x0560(0x00D0)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_2_Parent__Const;       // 0x0630(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SpawnControl_2_2_Name__Const;         // 0x063C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644[0xC];                                      // 0x0644(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SpawnControl_2_2_OffsetTransform__Const; // 0x0650(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_B__Const;                         // 0x06B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C8[0x8];                                      // 0x06C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_2_2_Settings__Const; // 0x06D0(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_Name__Const;             // 0x07A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A8[0x8];                                      // 0x07A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_Settings__Const; // 0x07B0(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_1_Name__Const;           // 0x0880(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___SpawnControl_1_OffsetSpace__Const;    // 0x0888(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_1_Settings__Const; // 0x0890(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_1_1_Name__Const;         // 0x0960(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_968[0x8];                                      // 0x0968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_1_1_Settings__Const; // 0x0970(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_1_1_1_Name__Const;       // 0x0A40(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_9_Item__Const;           // 0x0A48(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A54[0xC];                                      // 0x0A54(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_1_1_1_Settings__Const; // 0x0A60(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_1_1_2_Name__Const;       // 0x0B30(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SpawnControl_1_1_2_1_Name__Const;     // 0x0B38(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_2_Settings__Const; // 0x0B40(0x00D0)(Edit, EditConst, NonTransactional)
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_2_1_Settings__Const; // 0x0C10(0x00D0)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_Items__Const;       // 0x0CE0(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook.RigVMMemory_Literal", true>();
	}
	static class CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal");
static_assert(sizeof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal) == 0x000CF0, "Wrong size on CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_Child__Const) == 0x000048, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_bMaintainOffset__Const) == 0x000054, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_bMaintainOffset__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_Filter__Const) == 0x000055, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_Parents__Const) == 0x000060, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_AdvancedSettings__Const) == 0x000070, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_2_Weight__Const) == 0x000074, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_2_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_Child__Const) == 0x000078, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_Parents__Const) == 0x000088, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_AdvancedSettings__Const) == 0x000098, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_Item__Const) == 0x00009C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_Space__Const) == 0x0000A8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_bInitial__Const) == 0x0000A9, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___GetTransform_6_Item__Const) == 0x0000AC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___GetTransform_6_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_1_Item__Const) == 0x0000B8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___GetTransform_6_1_Item__Const) == 0x0000C4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___GetTransform_6_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___GetCurveValue_Curve__Const) == 0x0000D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___GetCurveValue_Curve__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_If_1_False__Const) == 0x0000D8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_If_1_False__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_MathQuaternionToEuler_3_RotationOrder__Const) == 0x0000DC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_MathQuaternionToEuler_3_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_SourceMinimum__Const) == 0x0000E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_SourceMaximum__Const) == 0x0000E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_TargetMinimum__Const) == 0x0000F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_TargetMinimum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_TargetMaximum__Const) == 0x0000F8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Item__Const) == 0x000100, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Value__Const) == 0x000110, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___GetTransform_Item__Const) == 0x000170, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Greater_1_B__Const) == 0x000180, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Greater_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Add_2_B__Const) == 0x000188, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Add_2_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Greater_B__Const) == 0x0001A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Greater_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_1_SourceMaximum__Const) == 0x0001A8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const) == 0x0001B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const) == 0x000210, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const) == 0x000214, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const) == 0x000224, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const) == 0x000228, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_Item__Const) == 0x00022C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_3_SourceMaximum__Const) == 0x000238, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_3_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_2_1_Item__Const) == 0x000240, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpringInterp_1_Strength__Const) == 0x00024C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpringInterp_1_Strength__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Set_Transform_2_2_Item__Const) == 0x000250, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Set_Transform_2_2_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___LessEqual_1_1_B__Const) == 0x000260, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___LessEqual_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_1_1_Child__Const) == 0x000268, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Concat_2_1_B__Const) == 0x000274, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Concat_2_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_1_1_Parents__Const) == 0x000280, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_1_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___ParentConstraint_1_1_AdvancedSettings__Const) == 0x000290, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___ParentConstraint_1_1_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Concat_1_1_1_B__Const) == 0x000294, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Concat_1_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___AimItem_1_Primary__Const) == 0x0002A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___AimItem_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___AimItem_1_Secondary__Const) == 0x0002E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___AimItem_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___AimItem_1_DebugSettings__Const) == 0x000330, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___AimItem_1_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_ItemArray_1_2_Items__Const) == 0x0003A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_ItemArray_1_2_Items__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_ItemArray_1_Items__Const) == 0x0003B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_ItemArray_1_Items__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const) == 0x0003C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const) == 0x0003C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const) == 0x0003D8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Multiply_2_B__Const) == 0x0003E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Multiply_2_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_ItemArray_1_1_Items__Const) == 0x0003E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_ItemArray_1_1_Items__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const) == 0x0003F8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const) == 0x000408, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_AdvancedSettings__Const) == 0x000418, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Multiply_2_1_1_B__Const) == 0x000420, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Multiply_2_1_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const) == 0x000428, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const) == 0x000438, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_Root__Const) == 0x000448, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_Root__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_Effectors__Const) == 0x000450, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_Effectors__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_1_1_1_Item__Const) == 0x000460, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const) == 0x00046C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Subtract_B__Const) == 0x000470, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Remap_2_SourceMaximum__Const) == 0x000478, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Remap_2_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpringInterp_Strength__Const) == 0x000480, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpringInterp_Strength__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_BoneSettings__Const) == 0x000488, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_BoneSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_ExcludedBones__Const) == 0x000498, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_ExcludedBones__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_Settings__Const) == 0x0004A8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___PBIK_Debug__Const) == 0x0004E4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___PBIK_Debug__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Mode__Const) == 0x0004EC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Mode__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Color__Const) == 0x0004F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Color__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Scale__Const) == 0x000500, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_1_Scale__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_3_Parent__Const) == 0x000504, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_3_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_3_Name__Const) == 0x000510, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_3_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_MathTransformMake_Rotation__Const) == 0x000520, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_MathTransformMake_Rotation__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigVMFunction_MathTransformMake_Scale__Const) == 0x000540, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigVMFunction_MathTransformMake_Scale__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_3_Settings__Const) == 0x000560, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_3_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Parent__Const) == 0x000630, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Name__Const) == 0x00063C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_OffsetTransform__Const) == 0x000650, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___Add_B__Const) == 0x0006B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___Add_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Settings__Const) == 0x0006D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_Name__Const) == 0x0007A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_Settings__Const) == 0x0007B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_Name__Const) == 0x000880, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_OffsetSpace__Const) == 0x000888, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_OffsetSpace__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_Settings__Const) == 0x000890, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_Name__Const) == 0x000960, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_Settings__Const) == 0x000970, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_1_Name__Const) == 0x000A40, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___GetTransform_9_Item__Const) == 0x000A48, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___GetTransform_9_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_1_Settings__Const) == 0x000A60, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_1_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_2_Name__Const) == 0x000B30, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_2_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_2_1_Name__Const) == 0x000B38, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_2_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_Settings__Const) == 0x000B40, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___SpawnControl_2_1_Settings__Const) == 0x000C10, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___SpawnControl_2_1_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal, RigVMModel___RigUnit_ItemArray_Items__Const) == 0x000CE0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Literal::RigVMModel___RigUnit_ItemArray_Items__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook.RigVMMemory_Work
// 0x17F8 (0x1840 - 0x0048)
class CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_2_ChildCache;        // 0x0048(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_2_ParentCaches;      // 0x0058(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_3_ChildCache;        // 0x0068(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_3_ParentCaches;      // 0x0078(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_6_Transform;             // 0x0090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_CachedIndex;           // 0x00F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_CachedIndex;            // 0x0100(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_6_1_Transform;           // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_1_CachedIndex;         // 0x0170(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_1_CachedIndex;          // 0x0180(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___From_World_1_2_1_Global;              // 0x0190(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_Result;                         // 0x01A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_1_Result;                    // 0x01B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_Result;   // 0x01B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___GetCurveValue_Valid;                  // 0x01BC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_Value;                  // 0x01C0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_CachedCurveIndex;       // 0x01C8(0x0010)(Edit, EditConst, NonTransactional)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition; // 0x01D8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_1_A;                         // 0x01E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_Result;                         // 0x01E8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Absolute_2_Result;                    // 0x01F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Result; // 0x01F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_2_Transform;             // 0x0210(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_2_CachedIndex;           // 0x0270(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Value; // 0x0280(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Absolute_2_Value;                     // 0x02A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___DISPATCH_RigVMDispatch_If_2_Result;   // 0x02A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result; // 0x02C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result; // 0x02C1(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result; // 0x02C2(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___LessEqual_Result;                     // 0x02C3(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LessEqual_A;                          // 0x02C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Greater_1_Result;                     // 0x02D0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigVMFunction_MathVectorDistance_1_Result; // 0x02D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D8[0x8];                                      // 0x02D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x02E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0340(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_1_A; // 0x0350(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Greater_1_A;                          // 0x0368(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition; // 0x0370(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0xF];                                      // 0x0371(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_7_Transform;             // 0x0380(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_7_CachedIndex;           // 0x03E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___DISPATCH_RigVMDispatch_If_2_True;     // 0x03F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_2_Result;                         // 0x0408(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_Result;     // 0x0420(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Greater_Result;                       // 0x0424(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigVMFunction_MathVectorAngle_Result; // 0x0428(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_Transform;       // 0x0430(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_CachedIndex;     // 0x0490(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorAngle_A;      // 0x04A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Greater_A;                            // 0x04B8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_Condition;  // 0x04C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_Result;                       // 0x04C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_Value;                        // 0x04D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_MathVectorDistance_Result; // 0x04D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_TargetMaximum;                // 0x04E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_True;       // 0x04E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4EC[0x4];                                      // 0x04EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Add_2_B__IO;                          // 0x04F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508[0x8];                                      // 0x0508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__IO;       // 0x0510(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_CachedIndex;     // 0x0570(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO; // 0x0580(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_2_1_1_Transform;       // 0x05E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_2_1_1_CachedIndex;     // 0x0640(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_4_Result;   // 0x0650(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_Result;                          // 0x0654(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Subtract_3_Result;                    // 0x0658(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_3_A;                         // 0x0660(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_3_Result;                       // 0x0668(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_2_Result;                    // 0x0670(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result; // 0x0678(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_Transform;     // 0x0690(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_CachedIndex;   // 0x06F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Value; // 0x0700(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_2_A;                         // 0x0720(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_MathVectorDistance_2_Result; // 0x0728(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72C[0x4];                                      // 0x072C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x0730(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x0790(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_2_A__IO; // 0x07A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_2_B__IO; // 0x07B8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_3_TargetMaximum;                // 0x07D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Less_B;                               // 0x07D8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_4_Condition; // 0x07E0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E1[0x3];                                      // 0x07E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_4_True;     // 0x07E4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_4_False;    // 0x07E8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EC[0x4];                                      // 0x07EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Set_Transform_2_Value__IO;            // 0x07F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_2_CachedIndex;          // 0x0808(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_1_Result;                // 0x0818(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_2_1_Transform;         // 0x0830(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_2_1_CachedIndex;       // 0x0890(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_1_Target;                // 0x08A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B8[0x8];                                      // 0x08B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_2_Transform;           // 0x08C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_2_CachedIndex;         // 0x0920(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_1_Current;               // 0x0930(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Velocity;              // 0x0948(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RigVMModel___SpringInterp_1_SimulatedResult;       // 0x0960(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVectorSpringState>             RigVMModel___SpringInterp_1_SpringState;           // 0x0970(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___Set_Transform_2_1_Value__IO;          // 0x0980(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_2_1_CachedIndex;        // 0x09E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result; // 0x09F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___LessEqual_1_1_Result;                 // 0x0A08(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A09[0x3];                                      // 0x0A09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigVMFunction_MathVectorDistance_1_1_Result; // 0x0A0C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_4_1_1_Transform;         // 0x0A10(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_1_1_CachedIndex;       // 0x0A70(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_1_1_A; // 0x0A80(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A98[0x8];                                      // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_Transform;             // 0x0AA0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_CachedIndex;           // 0x0B00(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_1_1_B; // 0x0B10(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___LessEqual_1_1_A;                      // 0x0B28(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_2_Result;                // 0x0B30(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B48[0x8];                                      // 0x0B48(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_3_Transform;           // 0x0B50(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_3_CachedIndex;         // 0x0BB0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_2_Target;                // 0x0BC0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_2_Velocity;              // 0x0BD8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RigVMModel___SpringInterp_2_SimulatedResult;       // 0x0BF0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVectorSpringState>             RigVMModel___SpringInterp_2_SpringState;           // 0x0C00(0x0010)(Edit, EditConst, NonTransactional)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition; // 0x0C10(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___Add_1_Result;                         // 0x0C18(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_1_Result;                     // 0x0C30(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_1_Value;                      // 0x0C38(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_1_B__IO;                          // 0x0C40(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C58[0x8];                                      // 0x0C58(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___Set_Transform_2_2_Value__IO;          // 0x0C60(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_2_2_CachedIndex;        // 0x0CC0(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Concat_2_1_Result;                    // 0x0CD0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Element; // 0x0CD8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_2_1_A;                         // 0x0CE4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_1_1_Child__IO;       // 0x0CEC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_1_1_Parents__IO;     // 0x0CF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_1_1_ChildCache;      // 0x0D08(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_1_1_ParentCaches;    // 0x0D18(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Concat_1_1_1_Result;                  // 0x0D28(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_Item__IO;                   // 0x0D30(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3C[0x4];                                      // 0x0D3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_3_1_Transform;           // 0x0D40(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_1_CachedIndex;         // 0x0DA0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_Primary__IO;                // 0x0DB0(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_CachedItem;                 // 0x0DF8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_PrimaryCachedSpace;         // 0x0E08(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_SecondaryCachedSpace;       // 0x0E18(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_bIsInitialized;             // 0x0E28(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_2_Items__IO;      // 0x0E38(0x0010)(Edit, EditConst, NonTransactional)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Index; // 0x0E48(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Count; // 0x0E4C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Ratio; // 0x0E50(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_BlockToRun; // 0x0E54(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_2_Result;                      // 0x0E5C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Element; // 0x0E64(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_2_A;                           // 0x0E70(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_1_Child__IO;         // 0x0E78(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E84[0x4];                                      // 0x0E84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_1_Parents__IO;       // 0x0E88(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_1_ChildCache;        // 0x0E98(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_1_ParentCaches;      // 0x0EA8(0x0010)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Concat_1_1_Result;                    // 0x0EB8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_Item__IO;                     // 0x0EC0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ECC[0x4];                                      // 0x0ECC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_3_Transform;             // 0x0ED0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_3_CachedIndex;           // 0x0F30(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x0F40(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x0F88(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x0F98(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x0FA8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x0FB8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_Items__IO;        // 0x0FC8(0x0010)(Edit, EditConst, NonTransactional)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Index; // 0x0FD8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Count; // 0x0FDC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Ratio; // 0x0FE0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_BlockToRun; // 0x0FE4(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Element; // 0x0FEC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_3_Result;                      // 0x0FF8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_3_A;                           // 0x1000(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FConstraintParent>              RigVMModel___RotationConstraintLocalSpaceOffset_Parents__IO; // 0x1008(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___Multiply_3_Result;                    // 0x1018(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_2_Result;                    // 0x1020(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Ratio; // 0x1028(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102C[0x4];                                     // 0x102C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_2_A;                         // 0x1030(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RotationConstraintLocalSpaceOffset_Weight; // 0x1038(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_103C[0x4];                                     // 0x103C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache; // 0x1040(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches; // 0x1050(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_1_1_Items__IO;      // 0x1060(0x0010)(Edit, EditConst, NonTransactional)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Index; // 0x1070(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Count; // 0x1074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_BlockToRun; // 0x1078(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_2_1_1_Result;                // 0x1080(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Weight; // 0x1088(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108C[0x4];                                     // 0x108C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache; // 0x1090(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches; // 0x10A0(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___Multiply_Result;                      // 0x10B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Weight; // 0x10B8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10BC[0x4];                                     // 0x10BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache; // 0x10C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches; // 0x10D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_8_Transform;             // 0x10E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_8_CachedIndex;           // 0x1140(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___SpringInterp_Result;                  // 0x1150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_6_Result;                    // 0x1158(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_4_Result;                    // 0x1160(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_Result;                       // 0x1168(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Absolute_Result;                      // 0x1170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_Result;                      // 0x1178(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_Result; // 0x1180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1198[0x8];                                     // 0x1198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_1_1_Transform; // 0x11A0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_1_1_CachedIndex; // 0x1200(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___RigVMFunction_MathQuaternionToEuler_Value; // 0x1210(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_A;                           // 0x1230(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_1_Result;                     // 0x1238(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Absolute_1_Result;                    // 0x1240(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_1_Result;                    // 0x1248(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Subtract_1_A;                         // 0x1250(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_3_Result;   // 0x1258(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_125C[0x4];                                     // 0x125C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_6_B;                         // 0x1260(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_Target;                  // 0x1268(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_Velocity;                // 0x126C(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 RigVMModel___SpringInterp_SimulatedResult;         // 0x1270(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FFloatSpringState>              RigVMModel___SpringInterp_SpringState;             // 0x1280(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___GetTransform_8_2_Transform;           // 0x1290(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_8_2_CachedIndex;         // 0x12F0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FPBIKEffector>                  RigVMModel___PBIK_Effectors__IO;                   // 0x1300(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<int32>>                         RigVMModel___PBIK_EffectorSolverIndices;           // 0x1310(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FPBIKWorkData>                  RigVMModel___PBIK_WorkData;                        // 0x1320(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___SpawnControl_3_Item;                  // 0x1330(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_133C[0x4];                                     // 0x133C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigVMFunction_MathTransformMake_Result; // 0x1340(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_2_Item;                // 0x13A0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13AC[0x4];                                     // 0x13AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_5_Transform;             // 0x13B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_5_CachedIndex;           // 0x1410(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___Add_Result;                           // 0x1420(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_A;                                // 0x1438(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___SpawnControl_2_2_InitialValue__IO;    // 0x1450(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_Item;                    // 0x14B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_Item;                  // 0x14BC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_1_Item;                // 0x14C8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_1_1_Item;              // 0x14D4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_9_Transform;             // 0x14E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_9_CachedIndex;           // 0x1540(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___SpawnControl_1_1_1_InitialValue__IO;  // 0x1550(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_1_2_Item;              // 0x15B0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_1_2_1_Item;            // 0x15BC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_Result;                        // 0x15C8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Element; // 0x15D0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___Concat_A;                             // 0x15DC(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_Item;                  // 0x15E4(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_Transform;             // 0x15F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_CachedIndex;           // 0x1650(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___SpawnControl_2_InitialValue__IO;      // 0x1660(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_2_Settings__IO;  // 0x16C0(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___Concat_1_Result;                      // 0x1790(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_1_Item;                // 0x1798(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A4[0xC];                                     // 0x17A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SpawnControl_2_1_InitialValue__IO;    // 0x17B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_Items__IO;          // 0x1810(0x0010)(Edit, EditConst, NonTransactional)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Index; // 0x1820(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Count; // 0x1824(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Ratio; // 0x1828(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_BlockToRun; // 0x182C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook.RigVMMemory_Work", true>();
	}
	static class CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work");
static_assert(sizeof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work) == 0x001840, "Wrong size on CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_2_ChildCache) == 0x000048, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_2_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_2_ParentCaches) == 0x000058, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_2_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_3_ChildCache) == 0x000068, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_3_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_3_ParentCaches) == 0x000078, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_3_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_6_Transform) == 0x000090, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_6_CachedIndex) == 0x0000F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_CachedIndex) == 0x000100, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_6_1_Transform) == 0x000110, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_6_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_6_1_CachedIndex) == 0x000170, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_6_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_1_CachedIndex) == 0x000180, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___From_World_1_2_1_Global) == 0x000190, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___From_World_1_2_1_Global' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Clamp_Result) == 0x0001A8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Clamp_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_1_Result) == 0x0001B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_Result) == 0x0001B8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetCurveValue_Valid) == 0x0001BC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetCurveValue_Valid' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetCurveValue_Value) == 0x0001C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetCurveValue_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetCurveValue_CachedCurveIndex) == 0x0001C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetCurveValue_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition) == 0x0001D8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_1_A) == 0x0001E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_Result) == 0x0001E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Absolute_2_Result) == 0x0001F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Absolute_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Result) == 0x0001F8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_2_Transform) == 0x000210, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_2_CachedIndex) == 0x000270, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Value) == 0x000280, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_3_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Absolute_2_Value) == 0x0002A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Absolute_2_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_Result) == 0x0002A8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result) == 0x0002C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result) == 0x0002C1, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result) == 0x0002C2, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___LessEqual_Result) == 0x0002C3, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___LessEqual_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___LessEqual_A) == 0x0002C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___LessEqual_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Greater_1_Result) == 0x0002D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Greater_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_Result) == 0x0002D4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x0002E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x000340, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_A) == 0x000350, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Greater_1_A) == 0x000368, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Greater_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition) == 0x000370, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_7_Transform) == 0x000380, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_7_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_7_CachedIndex) == 0x0003E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_7_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_True) == 0x0003F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_True' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_2_Result) == 0x000408, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Result) == 0x000420, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Greater_Result) == 0x000424, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Greater_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorAngle_Result) == 0x000428, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorAngle_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_Transform) == 0x000430, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_CachedIndex) == 0x000490, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorAngle_A) == 0x0004A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorAngle_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Greater_A) == 0x0004B8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Greater_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Condition) == 0x0004C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_1_Result) == 0x0004C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_1_Value) == 0x0004D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_1_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_Result) == 0x0004D8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_1_TargetMaximum) == 0x0004E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_1_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_True) == 0x0004E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_True' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_2_B__IO) == 0x0004F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_2_B__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Value__IO) == 0x000510, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_CachedIndex) == 0x000570, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO) == 0x000580, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_1_Transform) == 0x0005E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_1_CachedIndex) == 0x000640, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_4_Result) == 0x000650, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_4_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Less_Result) == 0x000654, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Less_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_3_Result) == 0x000658, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_3_A) == 0x000660, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_3_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_3_Result) == 0x000668, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_2_Result) == 0x000670, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result) == 0x000678, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_Transform) == 0x000690, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_CachedIndex) == 0x0006F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Value) == 0x000700, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_2_A) == 0x000720, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_2_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_2_Result) == 0x000728, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x000730, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x000790, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_2_A__IO) == 0x0007A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_2_A__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_2_B__IO) == 0x0007B8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_2_B__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_3_TargetMaximum) == 0x0007D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_3_TargetMaximum' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Less_B) == 0x0007D8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Less_B' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_4_Condition) == 0x0007E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_4_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_4_True) == 0x0007E4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_4_True' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_4_False) == 0x0007E8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_4_False' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_Value__IO) == 0x0007F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_CachedIndex) == 0x000808, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_Result) == 0x000818, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_Transform) == 0x000830, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_CachedIndex) == 0x000890, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_Target) == 0x0008A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_Target' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_Transform) == 0x0008C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_2_CachedIndex) == 0x000920, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_Current) == 0x000930, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_Current' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_Velocity) == 0x000948, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_Velocity' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_SimulatedResult) == 0x000960, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_SimulatedResult' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_1_SpringState) == 0x000970, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_1_SpringState' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_1_Value__IO) == 0x000980, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_1_CachedIndex) == 0x0009E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result) == 0x0009F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___LessEqual_1_1_Result) == 0x000A08, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___LessEqual_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_1_Result) == 0x000A0C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_Transform) == 0x000A10, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_1_1_CachedIndex) == 0x000A70, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_1_A) == 0x000A80, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_Transform) == 0x000AA0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_CachedIndex) == 0x000B00, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_1_B) == 0x000B10, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_1_B' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___LessEqual_1_1_A) == 0x000B28, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___LessEqual_1_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_2_Result) == 0x000B30, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_3_Transform) == 0x000B50, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_3_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_4_3_CachedIndex) == 0x000BB0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_4_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_2_Target) == 0x000BC0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_2_Target' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_2_Velocity) == 0x000BD8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_2_Velocity' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_2_SimulatedResult) == 0x000BF0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_2_SimulatedResult' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_2_SpringState) == 0x000C00, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_2_SpringState' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition) == 0x000C10, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_1_Result) == 0x000C18, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_1_1_Result) == 0x000C30, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_1_1_Value) == 0x000C38, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_1_1_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_1_B__IO) == 0x000C40, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_1_B__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_2_Value__IO) == 0x000C60, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_2_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Set_Transform_2_2_CachedIndex) == 0x000CC0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Set_Transform_2_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_2_1_Result) == 0x000CD0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_2_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Element) == 0x000CD8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Element' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_2_1_A) == 0x000CE4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_2_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_1_Child__IO) == 0x000CEC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_1_Child__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_1_Parents__IO) == 0x000CF8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_1_Parents__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_1_ChildCache) == 0x000D08, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_1_ParentCaches) == 0x000D18, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_1_1_1_Result) == 0x000D28, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_Item__IO) == 0x000D30, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_Item__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_3_1_Transform) == 0x000D40, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_3_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_3_1_CachedIndex) == 0x000DA0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_3_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_Primary__IO) == 0x000DB0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_CachedItem) == 0x000DF8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_PrimaryCachedSpace) == 0x000E08, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_SecondaryCachedSpace) == 0x000E18, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_1_bIsInitialized) == 0x000E28, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_ItemArray_1_2_Items__IO) == 0x000E38, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_ItemArray_1_2_Items__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Index) == 0x000E48, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Index' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Count) == 0x000E4C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Count' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Ratio) == 0x000E50, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_Ratio' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_BlockToRun) == 0x000E54, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_2_Result) == 0x000E5C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Element) == 0x000E64, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Element' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_2_A) == 0x000E70, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_2_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_Child__IO) == 0x000E78, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_Child__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_Parents__IO) == 0x000E88, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_Parents__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_ChildCache) == 0x000E98, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___ParentConstraint_1_ParentCaches) == 0x000EA8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___ParentConstraint_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_1_1_Result) == 0x000EB8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_Item__IO) == 0x000EC0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_Item__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_3_Transform) == 0x000ED0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_3_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_3_CachedIndex) == 0x000F30, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_3_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x000F40, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x000F88, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x000F98, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x000FA8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x000FB8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_ItemArray_1_Items__IO) == 0x000FC8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_ItemArray_1_Items__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Index) == 0x000FD8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Index' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Count) == 0x000FDC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Count' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Ratio) == 0x000FE0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_Ratio' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_BlockToRun) == 0x000FE4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_1_BlockToRun' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Element) == 0x000FEC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Element' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_3_Result) == 0x000FF8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_3_A) == 0x001000, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_3_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_Parents__IO) == 0x001008, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_Parents__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_3_Result) == 0x001018, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_2_Result) == 0x001020, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Ratio) == 0x001028, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Ratio' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_2_A) == 0x001030, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_2_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_Weight) == 0x001038, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_Weight' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache) == 0x001040, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches) == 0x001050, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_ItemArray_1_1_Items__IO) == 0x001060, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_ItemArray_1_1_Items__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Index) == 0x001070, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Index' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Count) == 0x001074, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_Count' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_BlockToRun) == 0x001078, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_BlockToRun' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_2_1_1_Result) == 0x001080, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_2_1_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Weight) == 0x001088, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_Weight' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache) == 0x001090, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches) == 0x0010A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_Result) == 0x0010B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Weight) == 0x0010B8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_Weight' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache) == 0x0010C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches) == 0x0010D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RotationConstraintLocalSpaceOffset_1_1_1_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_8_Transform) == 0x0010E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_8_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_8_CachedIndex) == 0x001140, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_8_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_Result) == 0x001150, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_6_Result) == 0x001158, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_6_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_4_Result) == 0x001160, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_4_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_2_Result) == 0x001168, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Absolute_Result) == 0x001170, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Absolute_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_Result) == 0x001178, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_Result) == 0x001180, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_1_Transform) == 0x0011A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_1_CachedIndex) == 0x001200, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_Value) == 0x001210, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_A) == 0x001230, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Remap_2_1_Result) == 0x001238, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Remap_2_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Absolute_1_Result) == 0x001240, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Absolute_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_1_Result) == 0x001248, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Subtract_1_A) == 0x001250, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Subtract_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_3_Result) == 0x001258, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_3_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Multiply_6_B) == 0x001260, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Multiply_6_B' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_Target) == 0x001268, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_Target' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_Velocity) == 0x00126C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_Velocity' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_SimulatedResult) == 0x001270, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_SimulatedResult' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpringInterp_SpringState) == 0x001280, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpringInterp_SpringState' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_8_2_Transform) == 0x001290, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_8_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_8_2_CachedIndex) == 0x0012F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_8_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___PBIK_Effectors__IO) == 0x001300, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___PBIK_Effectors__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___PBIK_EffectorSolverIndices) == 0x001310, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___PBIK_EffectorSolverIndices' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___PBIK_WorkData) == 0x001320, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___PBIK_WorkData' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_3_Item) == 0x001330, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_3_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigVMFunction_MathTransformMake_Result) == 0x001340, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigVMFunction_MathTransformMake_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_2_Item) == 0x0013A0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_2_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_5_Transform) == 0x0013B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_5_CachedIndex) == 0x001410, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_Result) == 0x001420, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Add_A) == 0x001438, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Add_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_2_InitialValue__IO) == 0x001450, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_2_InitialValue__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_Item) == 0x0014B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_Item) == 0x0014BC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_Item) == 0x0014C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_1_Item) == 0x0014D4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_9_Transform) == 0x0014E0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_9_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_9_CachedIndex) == 0x001540, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_9_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_1_InitialValue__IO) == 0x001550, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_1_InitialValue__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_2_Item) == 0x0015B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_2_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_2_1_Item) == 0x0015BC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_2_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_Result) == 0x0015C8, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Element) == 0x0015D0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Element' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_A) == 0x0015DC, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_Item) == 0x0015E4, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_1_Transform) == 0x0015F0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___GetTransform_1_CachedIndex) == 0x001650, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___GetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_InitialValue__IO) == 0x001660, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_InitialValue__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_Settings__IO) == 0x0016C0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_Settings__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___Concat_1_Result) == 0x001790, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___Concat_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_1_Item) == 0x001798, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___SpawnControl_2_1_InitialValue__IO) == 0x0017B0, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___SpawnControl_2_1_InitialValue__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___RigUnit_ItemArray_Items__IO) == 0x001810, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___RigUnit_ItemArray_Items__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Index) == 0x001820, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Index' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Count) == 0x001824, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Count' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Ratio) == 0x001828, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_Ratio' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_BlockToRun) == 0x00182C, "Member 'CR_PC_MASTER_Universal_Headlook::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_BlockToRun' has a wrong offset!");

}

