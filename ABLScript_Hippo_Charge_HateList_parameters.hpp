#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABLScript_Hippo_Charge_HateList

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function ABLScript_Hippo_Charge_HateList.ABLScript_Hippo_Charge_HateList_C.RunScript
// 0x01A8 (0x01A8 - 0x0000)
struct ABLScript_Hippo_Charge_HateList_C_RunScript final
{
public:
	struct FScriptActorInfo                       Target;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Instigator;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Source;                                            // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                AttackOrigin;                                      // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScriptTriggerInfo                     TriggerInfo;                                       // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewLocalVar;                                       // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Closest_Target_Healing;                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Closest_Target_Damage;                             // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         Closest_Target;                                    // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        Target_Distance;                                   // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Highest_Threat_Value;                              // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Threat_Level;                                      // 0x0098(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AHippo_C*                               Agent;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABaseCharacter*>                 Valid_Targets;                                     // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AHippo_C*                               K2Node_DynamicCast_AsHippo;                        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRunningOnServer_ReturnValue;            // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGuid, struct FHateEntry>         CallFunc_GetHatedCharacters_ReturnValue;           // 0x00D8(0x0050)()
	TArray<struct FHateEntry>                     CallFunc_Map_Values_Values;                        // 0x0128(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHateEntry                             CallFunc_Array_Get_Item;                           // 0x0148(0x0014)(NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABLScript_Hippo_Charge_HateList_C_RunScript) == 0x000008, "Wrong alignment on ABLScript_Hippo_Charge_HateList_C_RunScript");
static_assert(sizeof(ABLScript_Hippo_Charge_HateList_C_RunScript) == 0x0001A8, "Wrong size on ABLScript_Hippo_Charge_HateList_C_RunScript");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Target) == 0x000000, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Target' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Instigator) == 0x000010, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Instigator' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Source) == 0x000020, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Source' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, AttackOrigin) == 0x000030, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::AttackOrigin' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, TriggerInfo) == 0x000048, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::TriggerInfo' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, ReturnValue) == 0x000060, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, NewLocalVar) == 0x000068, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::NewLocalVar' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Closest_Target_Healing) == 0x000070, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Closest_Target_Healing' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Closest_Target_Damage) == 0x000078, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Closest_Target_Damage' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Closest_Target) == 0x000080, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Closest_Target' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Target_Distance) == 0x000088, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Target_Distance' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Highest_Threat_Value) == 0x000090, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Highest_Threat_Value' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Threat_Level) == 0x000098, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Threat_Level' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Agent) == 0x0000A8, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Agent' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Index_0) == 0x0000B0, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Index_0' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Valid_Targets) == 0x0000B8, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Valid_Targets' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, K2Node_DynamicCast_AsHippo) == 0x0000C8, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::K2Node_DynamicCast_AsHippo' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_IsRunningOnServer_ReturnValue) == 0x0000D1, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_IsRunningOnServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_GetHatedCharacters_ReturnValue) == 0x0000D8, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_GetHatedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Map_Values_Values) == 0x000128, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, Temp_int_Array_Index_Variable) == 0x000140, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Less_IntInt_ReturnValue) == 0x000144, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Array_Get_Item) == 0x000148, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000160, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000180, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Vector_Distance_ReturnValue) == 0x000198, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_Hippo_Charge_HateList_C_RunScript, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'ABLScript_Hippo_Charge_HateList_C_RunScript::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

}

