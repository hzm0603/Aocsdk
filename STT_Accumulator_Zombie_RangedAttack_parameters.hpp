#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Accumulator_Zombie_RangedAttack

#include "Basic.hpp"


namespace SDK::Params
{

// Function STT_Accumulator_Zombie_RangedAttack.STT_Accumulator_Zombie_RangedAttack_C.Accumulate
// 0x0070 (0x0070 - 0x0000)
struct STT_Accumulator_Zombie_RangedAttack_C_Accumulate final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Distance_ImplicitCast;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate) == 0x000008, "Wrong alignment on STT_Accumulator_Zombie_RangedAttack_C_Accumulate");
static_assert(sizeof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate) == 0x000070, "Wrong size on STT_Accumulator_Zombie_RangedAttack_C_Accumulate");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, DeltaTime) == 0x000000, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, Distance) == 0x000008, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::Distance' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, CallFunc_GetDistanceTo_ReturnValue) == 0x000064, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Accumulator_Zombie_RangedAttack_C_Accumulate, K2Node_VariableSet_Distance_ImplicitCast) == 0x000068, "Member 'STT_Accumulator_Zombie_RangedAttack_C_Accumulate::K2Node_VariableSet_Distance_ImplicitCast' has a wrong offset!");

}

