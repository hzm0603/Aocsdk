#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_MNT_Template

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_MNT_Template.ABP_MNT_Template_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_MNT_Template_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_MNT_Template_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_MNT_Template_C_AnimGraph");
static_assert(sizeof(ABP_MNT_Template_C_AnimGraph) == 0x000010, "Wrong size on ABP_MNT_Template_C_AnimGraph");
static_assert(offsetof(ABP_MNT_Template_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_MNT_Template_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_MNT_Template.ABP_MNT_Template_C.AttachParticleSystemToPoints
// 0x0070 (0x0070 - 0x0000)
struct ABP_MNT_Template_C_AttachParticleSystemToPoints final
{
public:
	class UNiagaraSystem*                         ParticleSystem;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           AttachPoints;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class UNiagaraComponent*>              ParticleSystems;                                   // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_MNT_Template_C_AttachParticleSystemToPoints) == 0x000008, "Wrong alignment on ABP_MNT_Template_C_AttachParticleSystemToPoints");
static_assert(sizeof(ABP_MNT_Template_C_AttachParticleSystemToPoints) == 0x000070, "Wrong size on ABP_MNT_Template_C_AttachParticleSystemToPoints");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, ParticleSystem) == 0x000000, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::ParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, AttachPoints) == 0x000008, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::AttachPoints' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, ParticleSystems) == 0x000018, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::ParticleSystems' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_GetOwningComponent_ReturnValue) == 0x000040, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000060, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_AttachParticleSystemToPoints, CallFunc_Array_Add_ReturnValue) == 0x000068, "Member 'ABP_MNT_Template_C_AttachParticleSystemToPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function ABP_MNT_Template.ABP_MNT_Template_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_MNT_Template_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_MNT_Template_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_MNT_Template_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_MNT_Template_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_MNT_Template_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_MNT_Template_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_MNT_Template_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_MNT_Template.ABP_MNT_Template_C.ExecuteUbergraph_ABP_MNT_Template
// 0x0020 (0x0020 - 0x0000)
struct ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template) == 0x000008, "Wrong alignment on ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template");
static_assert(sizeof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template) == 0x000020, "Wrong size on ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template");
static_assert(offsetof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template, EntryPoint) == 0x000000, "Member 'ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000010, "Member 'ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000018, "Member 'ABP_MNT_Template_C_ExecuteUbergraph_ABP_MNT_Template::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");

// Function ABP_MNT_Template.ABP_MNT_Template_C.GetBaseCharacterValues
// 0x0088 (0x0088 - 0x0000)
struct ABP_MNT_Template_C_GetBaseCharacterValues final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         K2Node_DynamicCast_AsBase_Character;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABaseCharacter*                         CallFunc_GetRider_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMounted_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_MNT_Template_C_GetBaseCharacterValues) == 0x000008, "Wrong alignment on ABP_MNT_Template_C_GetBaseCharacterValues");
static_assert(sizeof(ABP_MNT_Template_C_GetBaseCharacterValues) == 0x000088, "Wrong size on ABP_MNT_Template_C_GetBaseCharacterValues");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue_2) == 0x000004, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue_3) == 0x000005, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanOR_ReturnValue_2) == 0x000007, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue_4) == 0x000008, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanOR_ReturnValue_3) == 0x000009, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_Not_PreBool_ReturnValue_5) == 0x00000A, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanAND_ReturnValue_1) == 0x00000B, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanAND_ReturnValue_2) == 0x00000C, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanAND_ReturnValue_3) == 0x000018, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, K2Node_DynamicCast_AsBase_Character) == 0x000020, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_BooleanAND_ReturnValue_4) == 0x000029, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_GetRider_ReturnValue) == 0x000030, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_GetRider_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_IsMounted_ReturnValue) == 0x000038, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_IsMounted_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_GetSocketLocation_ReturnValue) == 0x000040, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_GetSocketRotation_ReturnValue) == 0x000058, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetBaseCharacterValues, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000070, "Member 'ABP_MNT_Template_C_GetBaseCharacterValues::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");

// Function ABP_MNT_Template.ABP_MNT_Template_C.GetCaravanValues
// 0x0060 (0x0060 - 0x0000)
struct ABP_MNT_Template_C_GetCaravanValues final
{
public:
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseTrailerVehicle*                    K2Node_DynamicCast_AsBase_Trailer_Vehicle;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAoCAnimInstance*                       K2Node_DynamicCast_AsAo_CAnim_Instance;            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_MNT_Template_C_GetCaravanValues) == 0x000008, "Wrong alignment on ABP_MNT_Template_C_GetCaravanValues");
static_assert(sizeof(ABP_MNT_Template_C_GetCaravanValues) == 0x000060, "Wrong size on ABP_MNT_Template_C_GetCaravanValues");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000000, "Member 'ABP_MNT_Template_C_GetCaravanValues::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, K2Node_DynamicCast_AsBase_Trailer_Vehicle) == 0x000008, "Member 'ABP_MNT_Template_C_GetCaravanValues::K2Node_DynamicCast_AsBase_Trailer_Vehicle' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_MNT_Template_C_GetCaravanValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, CallFunc_IsDead_ReturnValue) == 0x000011, "Member 'ABP_MNT_Template_C_GetCaravanValues::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, CallFunc_GetSocketRotation_ReturnValue) == 0x000018, "Member 'ABP_MNT_Template_C_GetCaravanValues::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, CallFunc_GetSocketLocation_ReturnValue) == 0x000030, "Member 'ABP_MNT_Template_C_GetCaravanValues::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'ABP_MNT_Template_C_GetCaravanValues::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, K2Node_DynamicCast_AsAo_CAnim_Instance) == 0x000050, "Member 'ABP_MNT_Template_C_GetCaravanValues::K2Node_DynamicCast_AsAo_CAnim_Instance' has a wrong offset!");
static_assert(offsetof(ABP_MNT_Template_C_GetCaravanValues, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'ABP_MNT_Template_C_GetCaravanValues::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

