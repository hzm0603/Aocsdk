#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BuckFloatingTextManager

#include "Basic.hpp"

#include "WBP_BuckFloatingTextManager_classes.hpp"
#include "WBP_BuckFloatingTextManager_parameters.hpp"


namespace SDK
{

// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.AbilitySystem_OnHit
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitInst&                  HitInst                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_BuckFloatingTextManager_C::AbilitySystem_OnHit(const struct FHitInst& HitInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "AbilitySystem_OnHit");

	Params::WBP_BuckFloatingTextManager_C_AbilitySystem_OnHit Parms{};

	Parms.HitInst = std::move(HitInst);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.AddFloaterToTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FStatModInst&              StatMod                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class ABaseCharacter*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitTargetInst&                  HitTargetInst                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FAbilityHitRecord&               HitRecord                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int64                                   SourceRecordType                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    hitting_OtherwiseGettingHit_                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FString&                    hitStr                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UWBP_BuckFloatingTextManager_C::AddFloaterToTarget(const struct FStatModInst& StatMod, class ABaseCharacter* Target, struct FHitTargetInst& HitTargetInst, struct FAbilityHitRecord& HitRecord, int64 SourceRecordType, bool hitting_OtherwiseGettingHit_, const class FString& hitStr)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "AddFloaterToTarget");

	Params::WBP_BuckFloatingTextManager_C_AddFloaterToTarget Parms{};

	Parms.StatMod = std::move(StatMod);
	Parms.Target = Target;
	Parms.HitTargetInst = std::move(HitTargetInst);
	Parms.HitRecord = std::move(HitRecord);
	Parms.SourceRecordType = SourceRecordType;
	Parms.hitting_OtherwiseGettingHit_ = hitting_OtherwiseGettingHit_;
	Parms.hitStr = std::move(hitStr);

	UObject::ProcessEvent(Func, &Parms);

	HitTargetInst = std::move(Parms.HitTargetInst);
	HitRecord = std::move(Parms.HitRecord);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.CacheCharsBP
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_BuckFloatingTextManager_C::CacheCharsBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "CacheCharsBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_BuckFloatingTextManager_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.EnsureDataBP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   BaseChar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingTextManager_C::EnsureDataBP(class ABaseCharacter* BaseChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "EnsureDataBP");

	Params::WBP_BuckFloatingTextManager_C_EnsureDataBP Parms{};

	Parms.BaseChar = BaseChar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.ExecuteUbergraph_WBP_BuckFloatingTextManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingTextManager_C::ExecuteUbergraph_WBP_BuckFloatingTextManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "ExecuteUbergraph_WBP_BuckFloatingTextManager");

	Params::WBP_BuckFloatingTextManager_C_ExecuteUbergraph_WBP_BuckFloatingTextManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.GetNextFloaterBP
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWBP_BuckFloatingText_C**         ret                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingTextManager_C::GetNextFloaterBP(class UWBP_BuckFloatingText_C** ret)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "GetNextFloaterBP");

	Params::WBP_BuckFloatingTextManager_C_GetNextFloaterBP Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ret != nullptr)
		*ret = Parms.ret;
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.OnClientEffectInstigated
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAoCStatsComponent*               AoCStatsComponent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// const struct FEffectInst&               EffectInst                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_BuckFloatingTextManager_C::OnClientEffectInstigated(class UAoCStatsComponent* AoCStatsComponent, const struct FEffectInst& EffectInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "OnClientEffectInstigated");

	Params::WBP_BuckFloatingTextManager_C_OnClientEffectInstigated Parms{};

	Parms.AoCStatsComponent = AoCStatsComponent;
	Parms.EffectInst = std::move(EffectInst);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_BuckFloatingTextManager.WBP_BuckFloatingTextManager_C.UpdateRunningAvgBP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Val                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_BuckFloatingTextManager_C::UpdateRunningAvgBP(double Val)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_BuckFloatingTextManager_C", "UpdateRunningAvgBP");

	Params::WBP_BuckFloatingTextManager_C_UpdateRunningAvgBP Parms{};

	Parms.Val = Val;

	UObject::ProcessEvent(Func, &Parms);
}

}

