#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ItemLockedOverlay

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ItemLockedOverlay.WBP_ItemLockedOverlay_C
// 0x0028 (0x0330 - 0x0308)
class UWBP_ItemLockedOverlay_C final : public ULockedOverlay
{
public:
	class UImage*                                 IMG_Locked;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_Locked_1;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               LockedOverlay;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ReviveOverlay;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ItemLockedOverlay_C">();
	}
	static class UWBP_ItemLockedOverlay_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ItemLockedOverlay_C>();
	}
};
static_assert(alignof(UWBP_ItemLockedOverlay_C) == 0x000008, "Wrong alignment on UWBP_ItemLockedOverlay_C");
static_assert(sizeof(UWBP_ItemLockedOverlay_C) == 0x000330, "Wrong size on UWBP_ItemLockedOverlay_C");
static_assert(offsetof(UWBP_ItemLockedOverlay_C, IMG_Locked) == 0x000308, "Member 'UWBP_ItemLockedOverlay_C::IMG_Locked' has a wrong offset!");
static_assert(offsetof(UWBP_ItemLockedOverlay_C, IMG_Locked_1) == 0x000310, "Member 'UWBP_ItemLockedOverlay_C::IMG_Locked_1' has a wrong offset!");
static_assert(offsetof(UWBP_ItemLockedOverlay_C, LockedOverlay) == 0x000318, "Member 'UWBP_ItemLockedOverlay_C::LockedOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ItemLockedOverlay_C, ReviveOverlay) == 0x000320, "Member 'UWBP_ItemLockedOverlay_C::ReviveOverlay' has a wrong offset!");
static_assert(offsetof(UWBP_ItemLockedOverlay_C, SizeBox) == 0x000328, "Member 'UWBP_ItemLockedOverlay_C::SizeBox' has a wrong offset!");

}

