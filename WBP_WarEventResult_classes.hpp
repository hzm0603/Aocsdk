#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WarEventResult

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_WarEventResult.WBP_WarEventResult_C
// 0x0050 (0x0358 - 0x0308)
class UWBP_WarEventResult_C final : public UWarEventResult
{
public:
	class UImage*                                 AttackerNodeIcon;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAoCCommonTextBlock*                    AttackerNodeNameTextBlock;                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAoCCommonTextBlock*                    AttackerVictoryPointsTextBlock;                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          B_AlternatingBG;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DefendererNodeIcon;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAoCCommonTextBlock*                    DefenderNodeNameTextBlock;                         // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAoCCommonTextBlock*                    DefenderVictoryPointsTextBlock;                    // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAoCCommonTextBlock*                    EventDescriptionText;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonButton_C*                        EventLocationButton;                               // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_ArrowIcon;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class UCommonBorder* GetBorder();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_WarEventResult_C">();
	}
	static class UWBP_WarEventResult_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_WarEventResult_C>();
	}
};
static_assert(alignof(UWBP_WarEventResult_C) == 0x000008, "Wrong alignment on UWBP_WarEventResult_C");
static_assert(sizeof(UWBP_WarEventResult_C) == 0x000358, "Wrong size on UWBP_WarEventResult_C");
static_assert(offsetof(UWBP_WarEventResult_C, AttackerNodeIcon) == 0x000308, "Member 'UWBP_WarEventResult_C::AttackerNodeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, AttackerNodeNameTextBlock) == 0x000310, "Member 'UWBP_WarEventResult_C::AttackerNodeNameTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, AttackerVictoryPointsTextBlock) == 0x000318, "Member 'UWBP_WarEventResult_C::AttackerVictoryPointsTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, B_AlternatingBG) == 0x000320, "Member 'UWBP_WarEventResult_C::B_AlternatingBG' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, DefendererNodeIcon) == 0x000328, "Member 'UWBP_WarEventResult_C::DefendererNodeIcon' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, DefenderNodeNameTextBlock) == 0x000330, "Member 'UWBP_WarEventResult_C::DefenderNodeNameTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, DefenderVictoryPointsTextBlock) == 0x000338, "Member 'UWBP_WarEventResult_C::DefenderVictoryPointsTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, EventDescriptionText) == 0x000340, "Member 'UWBP_WarEventResult_C::EventDescriptionText' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, EventLocationButton) == 0x000348, "Member 'UWBP_WarEventResult_C::EventLocationButton' has a wrong offset!");
static_assert(offsetof(UWBP_WarEventResult_C, IMG_ArrowIcon) == 0x000350, "Member 'UWBP_WarEventResult_C::IMG_ArrowIcon' has a wrong offset!");

}

