#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConstellationManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ConstellationManager.BP_ConstellationManager_C.Rotate Constellations
// 0x0110 (0x0110 - 0x0000)
struct BP_ConstellationManager_C_Rotate_Constellations final
{
public:
	struct FRotator                               New_Rotation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Normalized_Sunrise;                                // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0028(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ConstellationManager_C_Rotate_Constellations) == 0x000008, "Wrong alignment on BP_ConstellationManager_C_Rotate_Constellations");
static_assert(sizeof(BP_ConstellationManager_C_Rotate_Constellations) == 0x000110, "Wrong size on BP_ConstellationManager_C_Rotate_Constellations");
static_assert(offsetof(BP_ConstellationManager_C_Rotate_Constellations, New_Rotation) == 0x000000, "Member 'BP_ConstellationManager_C_Rotate_Constellations::New_Rotation' has a wrong offset!");
static_assert(offsetof(BP_ConstellationManager_C_Rotate_Constellations, Normalized_Sunrise) == 0x000018, "Member 'BP_ConstellationManager_C_Rotate_Constellations::Normalized_Sunrise' has a wrong offset!");
static_assert(offsetof(BP_ConstellationManager_C_Rotate_Constellations, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_ConstellationManager_C_Rotate_Constellations::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConstellationManager_C_Rotate_Constellations, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_ConstellationManager_C_Rotate_Constellations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ConstellationManager_C_Rotate_Constellations, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000028, "Member 'BP_ConstellationManager_C_Rotate_Constellations::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

}

