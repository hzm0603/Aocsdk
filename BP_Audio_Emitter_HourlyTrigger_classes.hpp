#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Audio_Emitter_HourlyTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SStartStopAudioEvents_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Audio_Emitter_HourlyTrigger.BP_Audio_Emitter_HourlyTrigger_C
// 0x0070 (0x03B8 - 0x0348)
class ABP_Audio_Emitter_HourlyTrigger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIntrepidAkComponent*                   IntrepidAK;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Widget;                                            // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             GlobalSkyActor;                                    // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSStartStopAudioEvents                 Ak_Events;                                         // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSStartStopAudioEvents                 Lifetime_Ak_Events;                                // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Trigger_Interval;                                  // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interval_Time_Current;                             // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Interval_Time_Previous;                            // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       Test;                                              // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AK_Event_Emitter;                                  // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Audio_Emitter_HourlyTrigger(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Audio_Emitter_HourlyTrigger_C">();
	}
	static class ABP_Audio_Emitter_HourlyTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Audio_Emitter_HourlyTrigger_C>();
	}
};
static_assert(alignof(ABP_Audio_Emitter_HourlyTrigger_C) == 0x000008, "Wrong alignment on ABP_Audio_Emitter_HourlyTrigger_C");
static_assert(sizeof(ABP_Audio_Emitter_HourlyTrigger_C) == 0x0003B8, "Wrong size on ABP_Audio_Emitter_HourlyTrigger_C");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, UberGraphFrame) == 0x000348, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, IntrepidAK) == 0x000350, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::IntrepidAK' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Widget) == 0x000358, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Widget' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, DefaultSceneRoot) == 0x000360, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, GlobalSkyActor) == 0x000368, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::GlobalSkyActor' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Ak_Events) == 0x000370, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Ak_Events' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Lifetime_Ak_Events) == 0x000380, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Lifetime_Ak_Events' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Trigger_Interval) == 0x000390, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Trigger_Interval' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Interval_Time_Current) == 0x000398, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Interval_Time_Current' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Interval_Time_Previous) == 0x0003A0, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Interval_Time_Previous' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, Test) == 0x0003A8, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::Test' has a wrong offset!");
static_assert(offsetof(ABP_Audio_Emitter_HourlyTrigger_C, AK_Event_Emitter) == 0x0003B0, "Member 'ABP_Audio_Emitter_HourlyTrigger_C::AK_Event_Emitter' has a wrong offset!");

}

