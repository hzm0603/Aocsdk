#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FilterPCGDataIndex

#include "Basic.hpp"

#include "PCG_structs.hpp"


namespace SDK::Params
{

// Function FilterPCGDataIndex.FilterPCGDataIndex_C.ExecuteWithContext
// 0x0150 (0x0150 - 0x0000)
struct FilterPCGDataIndex_C_ExecuteWithContext final
{
public:
	struct FPCGContext                            InContext;                                         // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPCGDataCollection                     Input;                                             // 0x00B8(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPCGDataCollection                     Output;                                            // 0x00D8(0x0020)(Parm, OutParm)
	TArray<struct FPCGTaggedData>                 CallFunc_GetTypedInputs_OutTaggedData;             // 0x00F8(0x0010)(ReferenceParm)
	TArray<class UPCGData*>                       CallFunc_GetTypedInputs_ReturnValue;               // 0x0108(0x0010)(ReferenceParm)
	TArray<struct FPCGPinProperties>              CallFunc_GetOutputPins_ReturnValue;                // 0x0118(0x0010)(ReferenceParm)
	class UPCGData*                               CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakPinProperty_Label;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakPinProperty_bAllowMultipleData;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakPinProperty_bAllowMultipleConnections; // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakPinProperty_bAdvancedPin;            // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPCGExclusiveDataType                         CallFunc_BreakPinProperty_AllowedType;             // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Set_ToArray_Result;                       // 0x0140(0x0010)(ReferenceParm)
};
static_assert(alignof(FilterPCGDataIndex_C_ExecuteWithContext) == 0x000008, "Wrong alignment on FilterPCGDataIndex_C_ExecuteWithContext");
static_assert(sizeof(FilterPCGDataIndex_C_ExecuteWithContext) == 0x000150, "Wrong size on FilterPCGDataIndex_C_ExecuteWithContext");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, InContext) == 0x000000, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::InContext' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, Input) == 0x0000B8, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::Input' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, Output) == 0x0000D8, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::Output' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_GetTypedInputs_OutTaggedData) == 0x0000F8, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_GetTypedInputs_OutTaggedData' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_GetTypedInputs_ReturnValue) == 0x000108, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_GetTypedInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_GetOutputPins_ReturnValue) == 0x000118, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_GetOutputPins_ReturnValue' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_Array_Get_Item) == 0x000128, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_BreakPinProperty_Label) == 0x000130, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_BreakPinProperty_Label' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_BreakPinProperty_bAllowMultipleData) == 0x000138, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_BreakPinProperty_bAllowMultipleData' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_BreakPinProperty_bAllowMultipleConnections) == 0x000139, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_BreakPinProperty_bAllowMultipleConnections' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_BreakPinProperty_bAdvancedPin) == 0x00013A, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_BreakPinProperty_bAdvancedPin' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_BreakPinProperty_AllowedType) == 0x00013B, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_BreakPinProperty_AllowedType' has a wrong offset!");
static_assert(offsetof(FilterPCGDataIndex_C_ExecuteWithContext, CallFunc_Set_ToArray_Result) == 0x000140, "Member 'FilterPCGDataIndex_C_ExecuteWithContext::CallFunc_Set_ToArray_Result' has a wrong offset!");

}

