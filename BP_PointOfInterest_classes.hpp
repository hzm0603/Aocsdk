#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PointOfInterest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ELocationType_structs.hpp"
#include "SWorldManagerInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PointOfInterest.BP_PointOfInterest_C
// 0x0158 (0x04A0 - 0x0348)
class ABP_PointOfInterest_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   ProgressBarAudio;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ProgressBarArt;                                    // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ProgressBarDesign;                                 // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   AreaCylinder;                                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   PointName;                                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   PointMarker;                                       // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_PointOfInterest_C*>          ChildLocations;                                    // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FSWorldManagerInfo                     POIInfo;                                           // 0x03A0(0x0088)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        POIAreaZOffset;                                    // 0x0428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	double                                        ZOffset;                                           // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ProgressBarDesignDMI;                              // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PointMarkerDMI;                                    // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           ChildLocationConnections;                          // 0x0448(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               ProgressBarArtDMI;                                 // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           ConnectionLines;                                   // 0x0460(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FGuid                                  Location_Volume_GUID;                              // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ProgressBarAudioDMI;                               // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TeleportToLocation;                                // 0x0488(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void TraceLandscapeUpdateLocation();
	void RefreshProgressOnly();
	void ExecuteUbergraph_BP_PointOfInterest(int32 EntryPoint);
	void ConstructionRefresh();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PointOfInterest_C">();
	}
	static class ABP_PointOfInterest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PointOfInterest_C>();
	}
};
static_assert(alignof(ABP_PointOfInterest_C) == 0x000008, "Wrong alignment on ABP_PointOfInterest_C");
static_assert(sizeof(ABP_PointOfInterest_C) == 0x0004A0, "Wrong size on ABP_PointOfInterest_C");
static_assert(offsetof(ABP_PointOfInterest_C, UberGraphFrame) == 0x000348, "Member 'ABP_PointOfInterest_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarAudio) == 0x000350, "Member 'ABP_PointOfInterest_C::ProgressBarAudio' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarArt) == 0x000358, "Member 'ABP_PointOfInterest_C::ProgressBarArt' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarDesign) == 0x000360, "Member 'ABP_PointOfInterest_C::ProgressBarDesign' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, Billboard) == 0x000368, "Member 'ABP_PointOfInterest_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, AreaCylinder) == 0x000370, "Member 'ABP_PointOfInterest_C::AreaCylinder' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, PointName) == 0x000378, "Member 'ABP_PointOfInterest_C::PointName' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, PointMarker) == 0x000380, "Member 'ABP_PointOfInterest_C::PointMarker' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, DefaultSceneRoot) == 0x000388, "Member 'ABP_PointOfInterest_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ChildLocations) == 0x000390, "Member 'ABP_PointOfInterest_C::ChildLocations' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, POIInfo) == 0x0003A0, "Member 'ABP_PointOfInterest_C::POIInfo' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, POIAreaZOffset) == 0x000428, "Member 'ABP_PointOfInterest_C::POIAreaZOffset' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ZOffset) == 0x000430, "Member 'ABP_PointOfInterest_C::ZOffset' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarDesignDMI) == 0x000438, "Member 'ABP_PointOfInterest_C::ProgressBarDesignDMI' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, PointMarkerDMI) == 0x000440, "Member 'ABP_PointOfInterest_C::PointMarkerDMI' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ChildLocationConnections) == 0x000448, "Member 'ABP_PointOfInterest_C::ChildLocationConnections' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarArtDMI) == 0x000458, "Member 'ABP_PointOfInterest_C::ProgressBarArtDMI' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ConnectionLines) == 0x000460, "Member 'ABP_PointOfInterest_C::ConnectionLines' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, Location_Volume_GUID) == 0x000470, "Member 'ABP_PointOfInterest_C::Location_Volume_GUID' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, ProgressBarAudioDMI) == 0x000480, "Member 'ABP_PointOfInterest_C::ProgressBarAudioDMI' has a wrong offset!");
static_assert(offsetof(ABP_PointOfInterest_C, TeleportToLocation) == 0x000488, "Member 'ABP_PointOfInterest_C::TeleportToLocation' has a wrong offset!");

}

