#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Verra_World_Master

#include "Basic.hpp"

#include "Verra_World_Master_classes.hpp"
#include "Verra_World_Master_parameters.hpp"


namespace SDK
{

// Function Verra_World_Master.Verra_World_Master_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVerra_World_Master_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "ReceiveTick");

	Params::Verra_World_Master_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Verra_World_Master.Verra_World_Master_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AVerra_World_Master_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Verra_World_Master.Verra_World_Master_C.IntrepidInitialize
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AVerra_World_Master_C::IntrepidInitialize(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "IntrepidInitialize");

	Params::Verra_World_Master_C_IntrepidInitialize Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Verra_World_Master.Verra_World_Master_C.InpActEvt_Multiply_UniqueObjectNameForCooking_2
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVerra_World_Master_C::InpActEvt_Multiply_UniqueObjectNameForCooking_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "InpActEvt_Multiply_UniqueObjectNameForCooking_2");

	Params::Verra_World_Master_C_InpActEvt_Multiply_UniqueObjectNameForCooking_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Verra_World_Master.Verra_World_Master_C.InpActEvt_Ctrl_Home_UniqueObjectNameForCooking_1
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AVerra_World_Master_C::InpActEvt_Ctrl_Home_UniqueObjectNameForCooking_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "InpActEvt_Ctrl_Home_UniqueObjectNameForCooking_1");

	Params::Verra_World_Master_C_InpActEvt_Ctrl_Home_UniqueObjectNameForCooking_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Verra_World_Master.Verra_World_Master_C.ExecuteUbergraph_Verra_World_Master
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AVerra_World_Master_C::ExecuteUbergraph_Verra_World_Master(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Verra_World_Master_C", "ExecuteUbergraph_Verra_World_Master");

	Params::Verra_World_Master_C_ExecuteUbergraph_Verra_World_Master Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

