#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageMeter

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ST_DamageMeterHitInfo_structs.hpp"
#include "ST_DamageMeterData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ST_DamageMeterBarData_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DamageMeter.WBP_DamageMeter_C
// 0x0240 (0x0530 - 0x02F0)
class UWBP_DamageMeter_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           BarVertBox;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                ClearButton;                                       // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        DamageCBString;                                    // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              EffectiveCB;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              EffectiveCB_1;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                HealthLogButton;                                   // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HoverText;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_70;                                          // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        InstigatorCBString;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MainVertBox;                                       // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              PercentCB;                                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TargetsSizeBox;                                    // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TargetsVertBox;                                    // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TargetTitleText;                                   // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleText;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FST_DamageMeterData>            InstigatorDataArray;                               // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGuid, int32>                     InstigatorDataMap;                                 // 0x0380(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UWBP_DamageMeterBar_C*>          Bars;                                              // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UWBP_DamageMeterBar_C*>          TargetBars;                                        // 0x03E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FST_DamageMeterBarData>         BarData;                                           // 0x03F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FST_DamageMeterBarData>         TargetBarData;                                     // 0x0400(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int64, struct FST_DamageMeterHitInfo>    HitInfoMap;                                        // 0x0410(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FLinearColor>        HitColorMap;                                       // 0x0460(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int64                                         FocusedHitGuid;                                    // 0x04B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FocusedInstigator;                                 // 0x04B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  FocusedTarget;                                     // 0x04C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MeterMode;                                         // 0x04D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         hoveredBarIndex;                                   // 0x04DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          hoveredMainBars;                                   // 0x04E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        combatTimeOut;                                     // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedsUpdate;                                       // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAoCHUDBase*                            MyHUD;                                             // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        DefaultPortraitPath;                               // 0x0500(0x0020)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateTimer;                                       // 0x0520(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UWBP_DamageMeterHealthLog_C*            DamageMeterHealthLog;                              // 0x0528(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateTitleText();
	void UpdateMeter();
	void UpdateHoverText();
	void UpdateDPS(TArray<struct FST_DamageMeterBarData>& BarData_0, TArray<class UWBP_DamageMeterBar_C*>& Bars_0, class UVerticalBox* vertBox);
	void UpdateBars(double dataMax, double dataTotal, TArray<struct FST_DamageMeterBarData>& BarData_0, TArray<class UWBP_DamageMeterBar_C*>& barList, class UVerticalBox* VerticalBox);
	void Trim_Bars(TArray<class UWBP_DamageMeterBar_C*>& Bars_0, int32 needed, class UVerticalBox* vertBox);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SetAbilityData(TMap<int64, struct FST_DamageMeterHitData>& Map);
	void ProcessHit(const struct FHitInst& HitInst);
	void OnClicked_Event();
	void OnAbilityEventBP_Event(const struct FHitInst& HitInst);
	void InsertIntoBarData(struct FST_DamageMeterBarData& Data, TArray<struct FST_DamageMeterBarData>& BarData_0, int32* Index_0);
	void InsertFlagBars(TMap<int64, struct FST_DamageMeterHitData>& Map);
	void InsertExtraBars();
	void Handle_Window_Content_Loaded(class UAoCWindow* Window);
	void GetTargetTotals();
	void GetPlayerTotals();
	void GetInstigatorInfo(class ABaseCharacter* Instigator, struct FLinearColor* Color, ECharacterClass* Class_0);
	void GetBarAtIndex(int32 Index_0, TArray<class UWBP_DamageMeterBar_C*>& barList, class UVerticalBox* vertBox, class UWBP_DamageMeterBar_C** bar);
	void GetAbilityTotals();
	void FindMinMax(TArray<struct FST_DamageMeterBarData>& BarData_0, double* dataMax, double* dataTotal);
	void ExecuteUbergraph_WBP_DamageMeter(int32 EntryPoint);
	void EnsureCharacterData(class ABaseCharacter* instigatorChar, bool* Success);
	void Destruct();
	void Construct();
	void CalcHitColorName(TArray<struct FGameplayTag>& Tags, class FName* hitName);
	void CalcCombatTime(const struct FGuid& PlayerGuid, double* Time, bool* IsActive);
	void BndEvt__DesignDamageMeter_CheckBox_301_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__DamageMeter_InstigatorCBString_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BndEvt__DamageMeter_IconsCB_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__DamageMeter_DeathLogButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__DamageMeter_DamageCBString_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void BarClicked(int32 Index_0, bool isMain, bool rightMouse);
	void AddMissToTargetMap(TMap<struct FGuid, int32>& TargetIndexMap, TArray<struct FST_DamageMeterMapData>& TargetMap, const struct FGuid& Target, int64 HitGuid);
	void AddMissToMap(struct FST_DamageMeterMapData& Map, int64 HitGuid);
	void AddDataToTargetMap(TMap<struct FGuid, int32>& TargetIndexMap, TArray<struct FST_DamageMeterMapData>& TargetMap, const struct FGuid& Target, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0);
	void AddDataToMaps(struct FST_DamageMeterMapData& Map, TMap<struct FGuid, int32>& indexMap, TArray<struct FST_DamageMeterMapData>& targetArary, const struct FGuid& Target, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0);
	void AddDataToMap(struct FST_DamageMeterMapData& Map, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DamageMeter_C">();
	}
	static class UWBP_DamageMeter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DamageMeter_C>();
	}
};
static_assert(alignof(UWBP_DamageMeter_C) == 0x000008, "Wrong alignment on UWBP_DamageMeter_C");
static_assert(sizeof(UWBP_DamageMeter_C) == 0x000530, "Wrong size on UWBP_DamageMeter_C");
static_assert(offsetof(UWBP_DamageMeter_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_DamageMeter_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, BarVertBox) == 0x0002F8, "Member 'UWBP_DamageMeter_C::BarVertBox' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, ClearButton) == 0x000300, "Member 'UWBP_DamageMeter_C::ClearButton' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, DamageCBString) == 0x000308, "Member 'UWBP_DamageMeter_C::DamageCBString' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, EffectiveCB) == 0x000310, "Member 'UWBP_DamageMeter_C::EffectiveCB' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, EffectiveCB_1) == 0x000318, "Member 'UWBP_DamageMeter_C::EffectiveCB_1' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, HealthLogButton) == 0x000320, "Member 'UWBP_DamageMeter_C::HealthLogButton' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, HoverText) == 0x000328, "Member 'UWBP_DamageMeter_C::HoverText' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, Image_70) == 0x000330, "Member 'UWBP_DamageMeter_C::Image_70' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, InstigatorCBString) == 0x000338, "Member 'UWBP_DamageMeter_C::InstigatorCBString' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, MainVertBox) == 0x000340, "Member 'UWBP_DamageMeter_C::MainVertBox' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, PercentCB) == 0x000348, "Member 'UWBP_DamageMeter_C::PercentCB' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TargetsSizeBox) == 0x000350, "Member 'UWBP_DamageMeter_C::TargetsSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TargetsVertBox) == 0x000358, "Member 'UWBP_DamageMeter_C::TargetsVertBox' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TargetTitleText) == 0x000360, "Member 'UWBP_DamageMeter_C::TargetTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TitleText) == 0x000368, "Member 'UWBP_DamageMeter_C::TitleText' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, InstigatorDataArray) == 0x000370, "Member 'UWBP_DamageMeter_C::InstigatorDataArray' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, InstigatorDataMap) == 0x000380, "Member 'UWBP_DamageMeter_C::InstigatorDataMap' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, Bars) == 0x0003D0, "Member 'UWBP_DamageMeter_C::Bars' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TargetBars) == 0x0003E0, "Member 'UWBP_DamageMeter_C::TargetBars' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, BarData) == 0x0003F0, "Member 'UWBP_DamageMeter_C::BarData' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, TargetBarData) == 0x000400, "Member 'UWBP_DamageMeter_C::TargetBarData' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, HitInfoMap) == 0x000410, "Member 'UWBP_DamageMeter_C::HitInfoMap' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, HitColorMap) == 0x000460, "Member 'UWBP_DamageMeter_C::HitColorMap' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, FocusedHitGuid) == 0x0004B0, "Member 'UWBP_DamageMeter_C::FocusedHitGuid' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, FocusedInstigator) == 0x0004B8, "Member 'UWBP_DamageMeter_C::FocusedInstigator' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, FocusedTarget) == 0x0004C8, "Member 'UWBP_DamageMeter_C::FocusedTarget' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, MeterMode) == 0x0004D8, "Member 'UWBP_DamageMeter_C::MeterMode' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, hoveredBarIndex) == 0x0004DC, "Member 'UWBP_DamageMeter_C::hoveredBarIndex' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, hoveredMainBars) == 0x0004E0, "Member 'UWBP_DamageMeter_C::hoveredMainBars' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, combatTimeOut) == 0x0004E8, "Member 'UWBP_DamageMeter_C::combatTimeOut' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, NeedsUpdate) == 0x0004F0, "Member 'UWBP_DamageMeter_C::NeedsUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, MyHUD) == 0x0004F8, "Member 'UWBP_DamageMeter_C::MyHUD' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, DefaultPortraitPath) == 0x000500, "Member 'UWBP_DamageMeter_C::DefaultPortraitPath' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, UpdateTimer) == 0x000520, "Member 'UWBP_DamageMeter_C::UpdateTimer' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeter_C, DamageMeterHealthLog) == 0x000528, "Member 'UWBP_DamageMeter_C::DamageMeterHealthLog' has a wrong offset!");

}

