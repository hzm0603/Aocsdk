#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Wait

#include "Basic.hpp"

#include "StateTreeModule_structs.hpp"


namespace SDK::Params
{

// Function STT_Wait.STT_Wait_C.ExecuteUbergraph_STT_Wait
// 0x0050 (0x0050 - 0x0000)
struct STT_Wait_C_ExecuteUbergraph_STT_Wait final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x0004(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Wait_C_ExecuteUbergraph_STT_Wait) == 0x000008, "Wrong alignment on STT_Wait_C_ExecuteUbergraph_STT_Wait");
static_assert(sizeof(STT_Wait_C_ExecuteUbergraph_STT_Wait) == 0x000050, "Wrong size on STT_Wait_C_ExecuteUbergraph_STT_Wait");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, EntryPoint) == 0x000000, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, K2Node_Event_Transition) == 0x000004, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, K2Node_Event_DeltaTime) == 0x000034, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Wait_C_ExecuteUbergraph_STT_Wait, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'STT_Wait_C_ExecuteUbergraph_STT_Wait::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function STT_Wait.STT_Wait_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_Wait_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Wait_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_Wait_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_Wait_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_Wait_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_Wait_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_Wait_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_Wait.STT_Wait_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_Wait_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Wait_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_Wait_C_ReceiveLatentTick");
static_assert(sizeof(STT_Wait_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_Wait_C_ReceiveLatentTick");
static_assert(offsetof(STT_Wait_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_Wait_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

}

