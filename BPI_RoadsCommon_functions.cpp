#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_RoadsCommon

#include "Basic.hpp"

#include "BPI_RoadsCommon_classes.hpp"
#include "BPI_RoadsCommon_parameters.hpp"


namespace SDK
{

// Function BPI_RoadsCommon.BPI_RoadsCommon_C.Capture Minimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Capturing                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Height_Offset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Width_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_RoadsCommon_C::Capture_Minimap(bool Is_Capturing, double Height_Offset, double Width_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_RoadsCommon_C", "Capture Minimap");

	Params::BPI_RoadsCommon_C_Capture_Minimap Parms{};

	Parms.Is_Capturing = Is_Capturing;
	Parms.Height_Offset = Height_Offset;
	Parms.Width_Scale = Width_Scale;

	UObject::ProcessEvent(Func, &Parms);
}

}

