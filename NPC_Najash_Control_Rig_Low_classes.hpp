#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Najash_Control_Rig_Low

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "AnimationCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass NPC_Najash_Control_Rig_Low.RigVMMemory_Work
// 0x0758 (0x07A0 - 0x0048)
class NPC_Najash_Control_Rig_Low::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___trace_pelvis_z_Hit_Normal;            // 0x0050(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Add_Result;        // 0x0070(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             trace_pelvis_z___trace_pelvis_z_GetTransform_Transform; // 0x0090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              trace_pelvis_z___trace_pelvis_z_GetTransform_CachedIndex; // 0x00F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Add_A__IO;         // 0x0100(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Add_B__IO;         // 0x0118(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Subtract_Result;   // 0x0130(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Subtract_A__IO;    // 0x0148(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Subtract_B__IO;    // 0x0160(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             trace_pelvis_z___trace_pelvis_z_AimBoneMath_Result; // 0x0180(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitNormal; // 0x01E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_bHit; // 0x01F8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitLocation; // 0x0200(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__IO; // 0x0218(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	TArray<struct FCachedRigElement>              trace_pelvis_z___trace_pelvis_z_AimBoneMath_PrimaryCachedSpace; // 0x0260(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              trace_pelvis_z___trace_pelvis_z_AimBoneMath_SecondaryCachedSpace; // 0x0270(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  trace_pelvis_z___trace_pelvis_z_AimBoneMath_bIsInitialized; // 0x0280(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_Result; // 0x0290(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_Print_Value;   // 0x02A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_Result;      // 0x02B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___Multiply_Result;                      // 0x02D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x02F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0350(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___Multiply_B;                           // 0x0360(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_AngularVelocity; // 0x0380(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FQuat>                          RigVMModel___SpringInterpQuaternionV2_SimulatedResult; // 0x0398(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FQuaternionSpringState>         RigVMModel___SpringInterpQuaternionV2_SpringState; // 0x03A8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_CachedIndex;            // 0x03B8(0x0010)(Edit, EditConst, NonTransactional)
	float                                         RigVMModel___AlphaInterp_Result;                   // 0x03C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_Result;     // 0x03CC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_Condition;  // 0x03D0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D1[0x3];                                      // 0x03D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_Result;   // 0x03D4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_Result;                          // 0x03D8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Less_A;                               // 0x03E0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition; // 0x03E8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_Result;                       // 0x03F0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_True;     // 0x03F8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_1_Result;                     // 0x0400(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_False;    // 0x0408(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Add_Result;                           // 0x0410(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Result; // 0x0418(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_1_Result;                      // 0x041C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Less_1_1_A;                           // 0x0420(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Condition; // 0x0428(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_2_1_Result;                   // 0x0430(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_True; // 0x0438(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_1_1_1_Result;                 // 0x0440(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_False; // 0x0448(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44C[0x4];                                      // 0x044C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Add_A;                                // 0x0450(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result; // 0x0458(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Less_1_Result;                        // 0x045C(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition; // 0x045D(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45E[0x2];                                      // 0x045E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_2_Result;                     // 0x0460(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_True;   // 0x0468(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Remap_1_1_1_Result;                   // 0x0470(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_1_1_False;  // 0x0478(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Add_B;                                // 0x0480(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_False;      // 0x0488(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C[0x4];                                      // 0x048C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FInputScaleBiasClamp>           RigVMModel___AlphaInterp_ScaleBiasClamp;           // 0x0490(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_ItemToModify__IO; // 0x04A0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigUnit_ModifyTransforms_WorkData> RigVMModel___ModifyTransforms_WorkData;        // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Element; // 0x04C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CC[0x4];                                      // 0x04CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Result; // 0x04D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result; // 0x04F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_508[0x8];                                      // 0x0508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___From_World_2_Global;                  // 0x0510(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_1_1_Result;  // 0x0530(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___To_World_2_World;                     // 0x0550(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___GetTransform_1_2_1_Transform;         // 0x0570(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_1_2_1_CachedIndex;       // 0x05D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___To_World_2_Value;                     // 0x05E0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_1_1_AngularVelocity; // 0x0600(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FQuat>                          RigVMModel___SpringInterpQuaternionV2_1_1_SimulatedResult; // 0x0618(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FQuaternionSpringState>         RigVMModel___SpringInterpQuaternionV2_1_1_SpringState; // 0x0628(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionToEuler_2_Result; // 0x0638(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Euler__IO; // 0x0650(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___From_World_1_1_Global;                // 0x0668(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_1_1_Result;            // 0x0680(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___To_World_1_1_World;                   // 0x0698(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___To_World_1_1_Value;                   // 0x06B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_1_1_Velocity;          // 0x06C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RigVMModel___SpringInterp_1_1_1_SimulatedResult;   // 0x06E0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVectorSpringState>             RigVMModel___SpringInterp_1_1_1_SpringState;       // 0x06F0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___Set_Transform_1_1_2_Value__IO;        // 0x0700(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_1_1_2_CachedIndex;      // 0x0760(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_3_Items__IO;        // 0x0770(0x0010)(Edit, EditConst, NonTransactional)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Index; // 0x0780(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Count; // 0x0784(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Ratio; // 0x0788(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_BlockToRun; // 0x078C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass NPC_Najash_Control_Rig_Low.RigVMMemory_Work", true>();
	}
	static class NPC_Najash_Control_Rig_Low::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<NPC_Najash_Control_Rig_Low::URigVMMemory_Work>();
	}
};
static_assert(alignof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work) == 0x000010, "Wrong alignment on NPC_Najash_Control_Rig_Low::URigVMMemory_Work");
static_assert(sizeof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work) == 0x0007A0, "Wrong size on NPC_Najash_Control_Rig_Low::URigVMMemory_Work");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___trace_pelvis_z_Hit_Normal) == 0x000050, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___trace_pelvis_z_Hit_Normal' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Add_Result) == 0x000070, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Add_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_GetTransform_Transform) == 0x000090, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_GetTransform_CachedIndex) == 0x0000F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Add_A__IO) == 0x000100, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Add_A__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Add_B__IO) == 0x000118, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Add_B__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Subtract_Result) == 0x000130, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Subtract_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Subtract_A__IO) == 0x000148, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Subtract_A__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_Subtract_B__IO) == 0x000160, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_Subtract_B__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_AimBoneMath_Result) == 0x000180, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_AimBoneMath_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitNormal) == 0x0001E0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitNormal' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_bHit) == 0x0001F8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_bHit' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitLocation) == 0x000200, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_HitLocation' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__IO) == 0x000218, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_AimBoneMath_PrimaryCachedSpace) == 0x000260, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_AimBoneMath_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_AimBoneMath_SecondaryCachedSpace) == 0x000270, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_AimBoneMath_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, trace_pelvis_z___trace_pelvis_z_AimBoneMath_bIsInitialized) == 0x000280, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::trace_pelvis_z___trace_pelvis_z_AimBoneMath_bIsInitialized' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_Result) == 0x000290, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_Print_Value) == 0x0002A8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_Print_Value' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_Result) == 0x0002B0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Multiply_Result) == 0x0002D0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x0002F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x000350, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Multiply_B) == 0x000360, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Multiply_B' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_AngularVelocity) == 0x000380, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_AngularVelocity' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_SimulatedResult) == 0x000398, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_SimulatedResult' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_SpringState) == 0x0003A8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_SpringState' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Set_Transform_CachedIndex) == 0x0003B8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Set_Transform_CachedIndex' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___AlphaInterp_Result) == 0x0003C8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___AlphaInterp_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Result) == 0x0003CC, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Condition) == 0x0003D0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Condition' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_Result) == 0x0003D4, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Less_Result) == 0x0003D8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Less_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Less_A) == 0x0003E0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Less_A' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition) == 0x0003E8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_Condition' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_Result) == 0x0003F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_True) == 0x0003F8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_True' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_1_Result) == 0x000400, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_False) == 0x000408, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_False' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Add_Result) == 0x000410, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Add_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Result) == 0x000418, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Less_1_1_Result) == 0x00041C, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Less_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Less_1_1_A) == 0x000420, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Less_1_1_A' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Condition) == 0x000428, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_Condition' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_2_1_Result) == 0x000430, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_2_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_True) == 0x000438, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_True' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_1_1_1_Result) == 0x000440, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_False) == 0x000448, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_1_False' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Add_A) == 0x000450, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Add_A' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result) == 0x000458, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Less_1_Result) == 0x00045C, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Less_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition) == 0x00045D, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_Condition' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_2_Result) == 0x000460, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_2_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_True) == 0x000468, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_True' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Remap_1_1_1_Result) == 0x000470, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Remap_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_1_1_False) == 0x000478, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_1_1_False' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Add_B) == 0x000480, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Add_B' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_False) == 0x000488, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_False' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___AlphaInterp_ScaleBiasClamp) == 0x000490, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___AlphaInterp_ScaleBiasClamp' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___ModifyTransforms_ItemToModify__IO) == 0x0004A0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___ModifyTransforms_ItemToModify__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___ModifyTransforms_WorkData) == 0x0004B0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___ModifyTransforms_WorkData' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Element) == 0x0004C0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Element' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Result) == 0x0004D0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result) == 0x0004F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___From_World_2_Global) == 0x000510, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___From_World_2_Global' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_1_1_Result) == 0x000530, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___To_World_2_World) == 0x000550, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___To_World_2_World' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_Transform) == 0x000570, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_Transform' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___GetTransform_1_2_1_CachedIndex) == 0x0005D0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___GetTransform_1_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___To_World_2_Value) == 0x0005E0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___To_World_2_Value' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_1_1_AngularVelocity) == 0x000600, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_1_1_AngularVelocity' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_1_1_SimulatedResult) == 0x000618, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_1_1_SimulatedResult' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_1_1_SpringState) == 0x000628, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_1_1_SpringState' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionToEuler_2_Result) == 0x000638, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionToEuler_2_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Euler__IO) == 0x000650, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathQuaternionFromEuler_1_Euler__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___From_World_1_1_Global) == 0x000668, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___From_World_1_1_Global' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_1_1_Result) == 0x000680, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_1_1_Result' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___To_World_1_1_World) == 0x000698, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___To_World_1_1_World' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___To_World_1_1_Value) == 0x0006B0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___To_World_1_1_Value' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_1_1_Velocity) == 0x0006C8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_1_1_Velocity' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_1_1_SimulatedResult) == 0x0006E0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_1_1_SimulatedResult' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_1_1_SpringState) == 0x0006F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_1_1_SpringState' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Set_Transform_1_1_2_Value__IO) == 0x000700, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Set_Transform_1_1_2_Value__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___Set_Transform_1_1_2_CachedIndex) == 0x000760, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___Set_Transform_1_1_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___RigUnit_ItemArray_3_Items__IO) == 0x000770, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___RigUnit_ItemArray_3_Items__IO' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Index) == 0x000780, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Index' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Count) == 0x000784, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Count' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Ratio) == 0x000788, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_Ratio' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_BlockToRun) == 0x00078C, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_ArrayIterator_2_1_BlockToRun' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass NPC_Najash_Control_Rig_Low.RigVMMemory_Literal
// 0x03E8 (0x0430 - 0x0048)
class NPC_Najash_Control_Rig_Low::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___trace_pelvis_z_Node__Const;           // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___trace_pelvis_z_Ray_Cast_Start__Const; // 0x0058(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___trace_pelvis_z_Ray_Cast_End__Const;   // 0x0060(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  LocalVariableDefault__trace_pelvis_z_foot_normal_hit_L__Const; // 0x0070(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  LocalVariableDefault__trace_pelvis_z_foot_normal_hit_target__Const; // 0x0090(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r__Const; // 0x00B0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r_target__Const; // 0x00D0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Add_A__Const;      // 0x00F0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          trace_pelvis_z___trace_pelvis_z_GetTransform_Space__Const; // 0x0108(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          trace_pelvis_z___trace_pelvis_z_GetTransform_bInitial__Const; // 0x0109(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Add_B__Const;      // 0x0110(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                trace_pelvis_z___trace_pelvis_z_Subtract_B__Const; // 0x0128(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Color__Const; // 0x0140(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Thickness__Const; // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0xC];                                      // 0x0154(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_WorldOffset__Const; // 0x0160(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_bEnabled__Const; // 0x01C0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__Const; // 0x01C8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	ETraceTypeQuery                               trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_TraceChannel__Const; // 0x0210(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_Radius__Const; // 0x0214(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimItem_Target                trace_pelvis_z___trace_pelvis_z_AimBoneMath_Secondary__Const; // 0x0218(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         trace_pelvis_z___trace_pelvis_z_AimBoneMath_Weight__Const; // 0x0260(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0xC];                                      // 0x0264(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimBone_DebugSettings         trace_pelvis_z___trace_pelvis_z_AimBoneMath_DebugSettings__Const; // 0x0270(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	EEulerRotationOrder                           RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const; // 0x02E0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RigVMModel___DISPATCH_RigVMDispatch_Print_Prefix__Const; // 0x02E8(0x0010)(Edit, ZeroConstructor, EditConst, NonTransactional, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_Print_Enabled__Const; // 0x02F8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenDuration__Const; // 0x02FC(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenColor__Const; // 0x0300(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___Set_Transform_Space__Const;           // 0x0310(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___SpringInterpQuaternionV2_Strength__Const; // 0x0314(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const; // 0x0318(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_Torque__Const; // 0x0320(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_338[0x8];                                      // 0x0338(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_Current__Const; // 0x0340(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_TargetVelocityAmount__Const; // 0x0360(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Set_Transform_bPropagateToChildren__Const; // 0x0364(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigUnit_ModifyTransforms_PerItem> RigVMModel___ModifyTransforms_ItemToModify__Const; // 0x0368(0x0010)(Edit, EditConst, NonTransactional)
	double                                        RigVMModel___Less_B__Const;                        // 0x0378(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_SourceMaximum__Const;         // 0x0380(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_TargetMaximum__Const;         // 0x0388(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_1_SourceMaximum__Const;       // 0x0390(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_2_1_TargetMaximum__Const;     // 0x0398(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FInputRange                            RigVMModel___AlphaInterp_InRange__Const;           // 0x03A0(0x0008)(Edit, EditConst, NonTransactional, NoDestructor)
	float                                         RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const; // 0x03A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EControlRigModifyBoneMode                     RigVMModel___ModifyTransforms_Mode__Const;         // 0x03AC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___Set_Transform_1_1_2_Value__Const;     // 0x03B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_1_1_Strength__Const; // 0x0410(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_1_1_CriticalDamping__Const; // 0x0414(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_1_1_1_CriticalDamping__Const; // 0x0418(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FRigElementKey>                 RigVMModel___RigUnit_ItemArray_3_Items__Const;     // 0x0420(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass NPC_Najash_Control_Rig_Low.RigVMMemory_Literal", true>();
	}
	static class NPC_Najash_Control_Rig_Low::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<NPC_Najash_Control_Rig_Low::URigVMMemory_Literal>();
	}
};
static_assert(alignof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal) == 0x000010, "Wrong alignment on NPC_Najash_Control_Rig_Low::URigVMMemory_Literal");
static_assert(sizeof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal) == 0x000430, "Wrong size on NPC_Najash_Control_Rig_Low::URigVMMemory_Literal");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___trace_pelvis_z_Node__Const) == 0x000048, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___trace_pelvis_z_Node__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___trace_pelvis_z_Ray_Cast_Start__Const) == 0x000058, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___trace_pelvis_z_Ray_Cast_Start__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___trace_pelvis_z_Ray_Cast_End__Const) == 0x000060, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___trace_pelvis_z_Ray_Cast_End__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, LocalVariableDefault__trace_pelvis_z_foot_normal_hit_L__Const) == 0x000070, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::LocalVariableDefault__trace_pelvis_z_foot_normal_hit_L__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, LocalVariableDefault__trace_pelvis_z_foot_normal_hit_target__Const) == 0x000090, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::LocalVariableDefault__trace_pelvis_z_foot_normal_hit_target__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r__Const) == 0x0000B0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r_target__Const) == 0x0000D0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::LocalVariableDefault__trace_pelvis_z_foot_normal_hit_r_target__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_Add_A__Const) == 0x0000F0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_Add_A__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_GetTransform_Space__Const) == 0x000108, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_GetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_GetTransform_bInitial__Const) == 0x000109, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_GetTransform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_Add_B__Const) == 0x000110, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_Add_B__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_Subtract_B__Const) == 0x000128, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_Subtract_B__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Color__Const) == 0x000140, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Color__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Thickness__Const) == 0x000150, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_Thickness__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_WorldOffset__Const) == 0x000160, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_WorldOffset__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_bEnabled__Const) == 0x0001C0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_RigVMFunction_DebugLineNoSpace_bEnabled__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__Const) == 0x0001C8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_AimBoneMath_Primary__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_TraceChannel__Const) == 0x000210, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_TraceChannel__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_Radius__Const) == 0x000214, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_SphereTraceByTraceChannel_Radius__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_AimBoneMath_Secondary__Const) == 0x000218, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_AimBoneMath_Secondary__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_AimBoneMath_Weight__Const) == 0x000260, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_AimBoneMath_Weight__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, trace_pelvis_z___trace_pelvis_z_AimBoneMath_DebugSettings__Const) == 0x000270, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::trace_pelvis_z___trace_pelvis_z_AimBoneMath_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const) == 0x0002E0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_MathQuaternionToEuler_RotationOrder__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_Print_Prefix__Const) == 0x0002E8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_Print_Prefix__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_Print_Enabled__Const) == 0x0002F8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_Print_Enabled__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenDuration__Const) == 0x0002FC, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenDuration__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenColor__Const) == 0x000300, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_Print_ScreenColor__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Set_Transform_Space__Const) == 0x000310, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Set_Transform_Space__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Strength__Const) == 0x000314, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Strength__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const) == 0x000318, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Torque__Const) == 0x000320, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Torque__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Current__Const) == 0x000340, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Current__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_TargetVelocityAmount__Const) == 0x000360, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_TargetVelocityAmount__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Set_Transform_bPropagateToChildren__Const) == 0x000364, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Set_Transform_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___ModifyTransforms_ItemToModify__Const) == 0x000368, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___ModifyTransforms_ItemToModify__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Less_B__Const) == 0x000378, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Less_B__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Remap_1_SourceMaximum__Const) == 0x000380, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Remap_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Remap_1_TargetMaximum__Const) == 0x000388, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Remap_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Remap_1_1_SourceMaximum__Const) == 0x000390, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Remap_1_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Remap_1_2_1_TargetMaximum__Const) == 0x000398, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Remap_1_2_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___AlphaInterp_InRange__Const) == 0x0003A0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___AlphaInterp_InRange__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const) == 0x0003A8, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___AlphaInterp_InterpSpeedIncreasing__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___ModifyTransforms_Mode__Const) == 0x0003AC, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___ModifyTransforms_Mode__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___Set_Transform_1_1_2_Value__Const) == 0x0003B0, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___Set_Transform_1_1_2_Value__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_1_1_Strength__Const) == 0x000410, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_1_1_Strength__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_1_1_CriticalDamping__Const) == 0x000414, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_1_1_CriticalDamping__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___SpringInterp_1_1_1_CriticalDamping__Const) == 0x000418, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___SpringInterp_1_1_1_CriticalDamping__Const' has a wrong offset!");
static_assert(offsetof(NPC_Najash_Control_Rig_Low::URigVMMemory_Literal, RigVMModel___RigUnit_ItemArray_3_Items__Const) == 0x000420, "Member 'NPC_Najash_Control_Rig_Low::URigVMMemory_Literal::RigVMModel___RigUnit_ItemArray_3_Items__Const' has a wrong offset!");

// RigVMBlueprintGeneratedClass NPC_Najash_Control_Rig_Low.NPC_Najash_Control_Rig_Low_C
// 0x0010 (0x0640 - 0x0630)
class UNPC_Najash_Control_Rig_Low_C final : public UControlRig
{
public:
	double                                        trace_depth;                                       // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_Najash_Control_Rig_Low_C">();
	}
	static class UNPC_Najash_Control_Rig_Low_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPC_Najash_Control_Rig_Low_C>();
	}
};
static_assert(alignof(UNPC_Najash_Control_Rig_Low_C) == 0x000008, "Wrong alignment on UNPC_Najash_Control_Rig_Low_C");
static_assert(sizeof(UNPC_Najash_Control_Rig_Low_C) == 0x000640, "Wrong size on UNPC_Najash_Control_Rig_Low_C");
static_assert(offsetof(UNPC_Najash_Control_Rig_Low_C, trace_depth) == 0x000630, "Member 'UNPC_Najash_Control_Rig_Low_C::trace_depth' has a wrong offset!");
static_assert(offsetof(UNPC_Najash_Control_Rig_Low_C, Dead) == 0x000638, "Member 'UNPC_Najash_Control_Rig_Low_C::Dead' has a wrong offset!");

}

