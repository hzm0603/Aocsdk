#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandscapeBrushManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Landscape_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LandscapeBrushManager.BP_LandscapeBrushManager_C
// 0x01C8 (0x0510 - 0x0348)
class ABP_LandscapeBrushManager_C final : public ALandscapeBrushManagerActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneCaptureComponent2D*               SceneCaptureComponent2D;                           // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 In_RT;                                             // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Apply_Captures_Height_DMI;                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Capture_RT_Specify;                                // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Apply_Capture_Weights_DMI;                         // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         Render_Pass;                                       // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALandscapeBrushBaseActor*>       Brushes;                                           // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ALandscapeBrushBaseActor*>       Only_Update_Brushes;                               // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ALandscapeBrushBaseActor*>       Brushes_Specify;                                   // 0x03A0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ALandscapeBrushBaseActor*>       Brushes_Offset;                                    // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FLinearColor                           Apply_Capture_Scale_Offset;                        // 0x03C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Scene_Cap_RT_Size;                                 // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0x4];                                      // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Capture_RT_Offset;                                 // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class FString>              LayersBrushes;                                     // 0x03E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UTextureRenderTarget2D*                 Capture_RT_Weights;                                // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_438[0x8];                                      // 0x0438(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             In_Landscape_Transform;                            // 0x0440(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FIntPoint                              In_Landscape_Size;                                 // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FIntPoint                              In_Landscape_Render_Target_Size;                   // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FVector                                Camera_Position;                                   // 0x04B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Camera_Ortho_Width;                                // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ignore_Brushes_In_Level_Instances;                 // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALandscapeBrushBaseActor*>       Brushes_Specify_Sub_1;                             // 0x04D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UTextureRenderTarget2D*                 Capture_RT_Specify_Sub_1;                          // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Roads_Only_Mode;                                   // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ALandscapeBrushBaseActor*>       Brushes_Specify_Sub_2;                             // 0x04F8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UTextureRenderTarget2D*                 Capture_RT_Specify_Sub_2;                          // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Clear_RTs();
	void EditorAddLandscapeBrushToUpdateArrayBP(class ALandscapeBrushBaseActor* LandscapeBrushBaseActorToAdd);
	void EditorRemoveLandscapeBrushFromUpdateArrayBP(class ALandscapeBrushBaseActor* LandscapeBrushBaseActorToRemove);
	void ExecuteUbergraph_BP_LandscapeBrushManager(int32 EntryPoint);
	void Initialize(const struct FTransform& InLandscapeTransform, const struct FIntPoint& InLandscapeSize, const struct FIntPoint& InLandscapeRenderTargetSize);
	class UTextureRenderTarget2D* RenderLayer(const struct FLandscapeBrushParameters& InParameters);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LandscapeBrushManager_C">();
	}
	static class ABP_LandscapeBrushManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LandscapeBrushManager_C>();
	}
};
static_assert(alignof(ABP_LandscapeBrushManager_C) == 0x000010, "Wrong alignment on ABP_LandscapeBrushManager_C");
static_assert(sizeof(ABP_LandscapeBrushManager_C) == 0x000510, "Wrong size on ABP_LandscapeBrushManager_C");
static_assert(offsetof(ABP_LandscapeBrushManager_C, UberGraphFrame) == 0x000348, "Member 'ABP_LandscapeBrushManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, SceneCaptureComponent2D) == 0x000350, "Member 'ABP_LandscapeBrushManager_C::SceneCaptureComponent2D' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, In_RT) == 0x000358, "Member 'ABP_LandscapeBrushManager_C::In_RT' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Apply_Captures_Height_DMI) == 0x000360, "Member 'ABP_LandscapeBrushManager_C::Apply_Captures_Height_DMI' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Capture_RT_Specify) == 0x000368, "Member 'ABP_LandscapeBrushManager_C::Capture_RT_Specify' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Apply_Capture_Weights_DMI) == 0x000370, "Member 'ABP_LandscapeBrushManager_C::Apply_Capture_Weights_DMI' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Render_Pass) == 0x000378, "Member 'ABP_LandscapeBrushManager_C::Render_Pass' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Brushes) == 0x000380, "Member 'ABP_LandscapeBrushManager_C::Brushes' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Only_Update_Brushes) == 0x000390, "Member 'ABP_LandscapeBrushManager_C::Only_Update_Brushes' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Brushes_Specify) == 0x0003A0, "Member 'ABP_LandscapeBrushManager_C::Brushes_Specify' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Brushes_Offset) == 0x0003B0, "Member 'ABP_LandscapeBrushManager_C::Brushes_Offset' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Apply_Capture_Scale_Offset) == 0x0003C0, "Member 'ABP_LandscapeBrushManager_C::Apply_Capture_Scale_Offset' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Scene_Cap_RT_Size) == 0x0003D0, "Member 'ABP_LandscapeBrushManager_C::Scene_Cap_RT_Size' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Capture_RT_Offset) == 0x0003D8, "Member 'ABP_LandscapeBrushManager_C::Capture_RT_Offset' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, LayersBrushes) == 0x0003E0, "Member 'ABP_LandscapeBrushManager_C::LayersBrushes' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Capture_RT_Weights) == 0x000430, "Member 'ABP_LandscapeBrushManager_C::Capture_RT_Weights' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, In_Landscape_Transform) == 0x000440, "Member 'ABP_LandscapeBrushManager_C::In_Landscape_Transform' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, In_Landscape_Size) == 0x0004A0, "Member 'ABP_LandscapeBrushManager_C::In_Landscape_Size' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, In_Landscape_Render_Target_Size) == 0x0004A8, "Member 'ABP_LandscapeBrushManager_C::In_Landscape_Render_Target_Size' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Camera_Position) == 0x0004B0, "Member 'ABP_LandscapeBrushManager_C::Camera_Position' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Camera_Ortho_Width) == 0x0004C8, "Member 'ABP_LandscapeBrushManager_C::Camera_Ortho_Width' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Ignore_Brushes_In_Level_Instances) == 0x0004D0, "Member 'ABP_LandscapeBrushManager_C::Ignore_Brushes_In_Level_Instances' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Brushes_Specify_Sub_1) == 0x0004D8, "Member 'ABP_LandscapeBrushManager_C::Brushes_Specify_Sub_1' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Capture_RT_Specify_Sub_1) == 0x0004E8, "Member 'ABP_LandscapeBrushManager_C::Capture_RT_Specify_Sub_1' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Roads_Only_Mode) == 0x0004F0, "Member 'ABP_LandscapeBrushManager_C::Roads_Only_Mode' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Brushes_Specify_Sub_2) == 0x0004F8, "Member 'ABP_LandscapeBrushManager_C::Brushes_Specify_Sub_2' has a wrong offset!");
static_assert(offsetof(ABP_LandscapeBrushManager_C, Capture_RT_Specify_Sub_2) == 0x000508, "Member 'ABP_LandscapeBrushManager_C::Capture_RT_Specify_Sub_2' has a wrong offset!");

}

