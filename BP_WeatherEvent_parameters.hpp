#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeatherEvent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_EnvironmentSettings_structs.hpp"
#include "S_EnvironmentSettingsSwitches_structs.hpp"


namespace SDK::Params
{

// Function BP_WeatherEvent.BP_WeatherEvent_C.Disable Preview
// 0x0008 (0x0008 - 0x0000)
struct BP_WeatherEvent_C_Disable_Preview final
{
public:
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_Disable_Preview) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_Disable_Preview");
static_assert(sizeof(BP_WeatherEvent_C_Disable_Preview) == 0x000008, "Wrong size on BP_WeatherEvent_C_Disable_Preview");
static_assert(offsetof(BP_WeatherEvent_C_Disable_Preview, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000000, "Member 'BP_WeatherEvent_C_Disable_Preview::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.Enable Preview
// 0x0008 (0x0008 - 0x0000)
struct BP_WeatherEvent_C_Enable_Preview final
{
public:
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_Enable_Preview) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_Enable_Preview");
static_assert(sizeof(BP_WeatherEvent_C_Enable_Preview) == 0x000008, "Wrong size on BP_WeatherEvent_C_Enable_Preview");
static_assert(offsetof(BP_WeatherEvent_C_Enable_Preview, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000000, "Member 'BP_WeatherEvent_C_Enable_Preview::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.ExecuteUbergraph_BP_WeatherEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent");
static_assert(sizeof(BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent) == 0x000018, "Wrong size on BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent");
static_assert(offsetof(BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent, EntryPoint) == 0x000000, "Member 'BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000008, "Member 'BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_WeatherEvent_C_ExecuteUbergraph_BP_WeatherEvent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.Get Weather Settings
// 0x08E0 (0x08E0 - 0x0000)
struct BP_WeatherEvent_C_Get_Weather_Settings final
{
public:
	double                                        Delta_Seconds;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EnvironmentSettings                 Settings;                                          // 0x0010(0x0600)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FS_EnvironmentSettingsSwitches         Switches;                                          // 0x0610(0x0013)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_623[0x5];                                      // 0x0623(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Radius_0;                                          // 0x0628(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity_0;                                       // 0x0630(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_638[0x8];                                      // 0x0638(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               Lightning_Pos_Size;                                // 0x0640(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Random_Vector_In_Radius;                           // 0x0660(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0690(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F2[0x2];                                      // 0x06F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x06F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_799[0x7];                                      // 0x0799(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x07C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x07F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0820(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_828[0x8];                                      // 0x0828(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue_1;                // 0x0830(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86D[0x3];                                      // 0x086D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x08B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCylinder_Radius_ImplicitCast;    // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_Get_Weather_Settings) == 0x000010, "Wrong alignment on BP_WeatherEvent_C_Get_Weather_Settings");
static_assert(sizeof(BP_WeatherEvent_C_Get_Weather_Settings) == 0x0008E0, "Wrong size on BP_WeatherEvent_C_Get_Weather_Settings");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Delta_Seconds) == 0x000000, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Settings) == 0x000010, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Settings' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Switches) == 0x000610, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Switches' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Radius_0) == 0x000628, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Radius_0' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Intensity_0) == 0x000630, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Intensity_0' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Lightning_Pos_Size) == 0x000640, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Lightning_Pos_Size' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, Random_Vector_In_Radius) == 0x000660, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::Random_Vector_In_Radius' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector_ReturnValue) == 0x000678, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector4_ReturnValue) == 0x000690, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_GetPlayerController_ReturnValue) == 0x0006B0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_K2_GetPawn_ReturnValue) == 0x0006B8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0006C0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_X) == 0x0006D8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Y) == 0x0006E0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Z) == 0x0006E8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0006F0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BooleanAND_ReturnValue) == 0x0006F1, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_RandomFloatFromStream_ReturnValue) == 0x0006F4, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x0006F8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000710, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000728, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000740, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000748, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000750, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_RandomFloatInRange_ReturnValue) == 0x000758, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector_ReturnValue_1) == 0x000760, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000778, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000790, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000798, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0007A0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_X_1) == 0x0007B8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Y_1) == 0x0007C0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Z_1) == 0x0007C8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector_ReturnValue_2) == 0x0007D0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0007E8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Add_VectorVector_ReturnValue) == 0x0007F0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_X_2) == 0x000808, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Y_2) == 0x000810, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Z_2) == 0x000818, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000820, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector4_ReturnValue_1) == 0x000830, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector4_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector_ReturnValue_3) == 0x000850, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_PostEventAtLocation_ReturnValue) == 0x000868, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_IsWithEditor_ReturnValue) == 0x00086C, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000870, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BooleanAND_ReturnValue_1) == 0x000878, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000880, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_X_3) == 0x000898, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Y_3) == 0x0008A0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_BreakVector_Z_3) == 0x0008A8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_MakeVector_ReturnValue_4) == 0x0008B0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0008C8, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Get_Weather_Settings, CallFunc_DrawDebugCylinder_Radius_ImplicitCast) == 0x0008D0, "Member 'BP_WeatherEvent_C_Get_Weather_Settings::CallFunc_DrawDebugCylinder_Radius_ImplicitCast' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WeatherEvent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WeatherEvent_C_ReceiveTick");
static_assert(sizeof(BP_WeatherEvent_C_ReceiveTick) == 0x000004, "Wrong size on BP_WeatherEvent_C_ReceiveTick");
static_assert(offsetof(BP_WeatherEvent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WeatherEvent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.Set DMI Parameters
// 0x00E8 (0x00E8 - 0x0000)
struct BP_WeatherEvent_C_Set_DMI_Parameters final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UniqueObjectNameForCooking_LinearColor;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UniqueObjectNameForCooking_LinearColor_1;          // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_R_ImplicitCast;         // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_G_ImplicitCast;         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_B_ImplicitCast;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_R_ImplicitCast_1;       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_G_ImplicitCast_1;       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_B_ImplicitCast_1;       // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_Set_DMI_Parameters) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_Set_DMI_Parameters");
static_assert(sizeof(BP_WeatherEvent_C_Set_DMI_Parameters) == 0x0000E8, "Wrong size on BP_WeatherEvent_C_Set_DMI_Parameters");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector2D_X) == 0x000000, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_LinearColor) == 0x000060, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000070, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000080, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector2D_X_1) == 0x000090, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_BreakVector2D_Y_1) == 0x000098, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_LinearColor_1) == 0x0000A8, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0000B8, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0000C0, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000C8, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_R_ImplicitCast) == 0x0000D0, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_G_ImplicitCast) == 0x0000D4, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_B_ImplicitCast) == 0x0000D8, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_R_ImplicitCast_1) == 0x0000DC, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_G_ImplicitCast_1) == 0x0000E0, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Set_DMI_Parameters, UniqueObjectNameForCooking_B_ImplicitCast_1) == 0x0000E4, "Member 'BP_WeatherEvent_C_Set_DMI_Parameters::UniqueObjectNameForCooking_B_ImplicitCast_1' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.Travel
// 0x02C8 (0x02C8 - 0x0000)
struct BP_WeatherEvent_C_Travel final
{
public:
	double                                        Delta_Seconds;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                New_Location;                                      // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0048(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_1_ImplicitCast;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_1_ImplicitCast_1;             // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_Travel) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_Travel");
static_assert(sizeof(BP_WeatherEvent_C_Travel) == 0x0002C8, "Wrong size on BP_WeatherEvent_C_Travel");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Delta_Seconds) == 0x000000, "Member 'BP_WeatherEvent_C_Travel::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, New_Location) == 0x000008, "Member 'BP_WeatherEvent_C_Travel::New_Location' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_real_Variable) == 0x000020, "Member 'BP_WeatherEvent_C_Travel::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000028, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_bool_Variable) == 0x000040, "Member 'BP_WeatherEvent_C_Travel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000048, "Member 'BP_WeatherEvent_C_Travel::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000130, "Member 'BP_WeatherEvent_C_Travel::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_bool_Variable_1) == 0x000131, "Member 'BP_WeatherEvent_C_Travel::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_real_Variable_1) == 0x000138, "Member 'BP_WeatherEvent_C_Travel::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_bool_Variable_2) == 0x000140, "Member 'BP_WeatherEvent_C_Travel::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, Temp_bool_Variable_3) == 0x000141, "Member 'BP_WeatherEvent_C_Travel::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_X) == 0x000148, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_Y) == 0x000150, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_Z) == 0x000158, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000160, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000168, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000190, "Member 'BP_WeatherEvent_C_Travel::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001A8, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0001A9, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_GetActorForwardVector_ReturnValue) == 0x0001B0, "Member 'BP_WeatherEvent_C_Travel::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0001D0, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001E8, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Default) == 0x000200, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_X_1) == 0x000208, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_Y_1) == 0x000210, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_BreakVector_Z_1) == 0x000218, "Member 'BP_WeatherEvent_C_Travel::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Default_1) == 0x000220, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_MakeVector_ReturnValue) == 0x000228, "Member 'BP_WeatherEvent_C_Travel::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Add_VectorVector_ReturnValue) == 0x000248, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Default_2) == 0x000260, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Default_3) == 0x000268, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_MakeVector_ReturnValue_1) == 0x000270, "Member 'BP_WeatherEvent_C_Travel::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000288, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Option_1_ImplicitCast) == 0x0002A0, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Option_1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, K2Node_Select_Option_1_ImplicitCast_1) == 0x0002A8, "Member 'BP_WeatherEvent_C_Travel::K2Node_Select_Option_1_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0002B0, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002B8, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_Travel, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x0002C0, "Member 'BP_WeatherEvent_C_Travel::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");

// Function BP_WeatherEvent.BP_WeatherEvent_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_WeatherEvent_C_UserConstructionScript final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeatherEvent_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_WeatherEvent_C_UserConstructionScript");
static_assert(sizeof(BP_WeatherEvent_C_UserConstructionScript) == 0x000020, "Wrong size on BP_WeatherEvent_C_UserConstructionScript");
static_assert(offsetof(BP_WeatherEvent_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_WeatherEvent_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_UserConstructionScript, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'BP_WeatherEvent_C_UserConstructionScript::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_WeatherEvent_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeatherEvent_C_UserConstructionScript, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000018, "Member 'BP_WeatherEvent_C_UserConstructionScript::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");

}

