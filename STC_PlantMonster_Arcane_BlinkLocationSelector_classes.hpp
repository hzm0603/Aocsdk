#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_PlantMonster_Arcane_BlinkLocationSelector

#include "Basic.hpp"

#include "DesignDataPlugin_structs.hpp"
#include "StateTreeModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STC_PlantMonster_Arcane_BlinkLocationSelector.STC_PlantMonster_Arcane_BlinkLocationSelector_C
// 0x0080 (0x00E8 - 0x0068)
class USTC_PlantMonster_Arcane_BlinkLocationSelector_C final : public UStateTreeConditionBlueprintBase
{
public:
	class ABaseCharacter*                         Agent;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Target_Distance;                                   // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Min_Travel_Distance;                               // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Sample_Number;                                     // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAoCExpression                         Target_Expression;                                 // 0x0088(0x0050)(Edit, BlueprintVisible)
	class ABaseCharacter*                         Target;                                            // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   BB_Storage;                                        // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool ReceiveTestCondition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STC_PlantMonster_Arcane_BlinkLocationSelector_C">();
	}
	static class USTC_PlantMonster_Arcane_BlinkLocationSelector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTC_PlantMonster_Arcane_BlinkLocationSelector_C>();
	}
};
static_assert(alignof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C) == 0x000008, "Wrong alignment on USTC_PlantMonster_Arcane_BlinkLocationSelector_C");
static_assert(sizeof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C) == 0x0000E8, "Wrong size on USTC_PlantMonster_Arcane_BlinkLocationSelector_C");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Agent) == 0x000068, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Agent' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Target_Distance) == 0x000070, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Target_Distance' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Min_Travel_Distance) == 0x000078, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Min_Travel_Distance' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Sample_Number) == 0x000080, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Sample_Number' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Target_Expression) == 0x000088, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Target_Expression' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, Target) == 0x0000D8, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::Target' has a wrong offset!");
static_assert(offsetof(USTC_PlantMonster_Arcane_BlinkLocationSelector_C, BB_Storage) == 0x0000E0, "Member 'USTC_PlantMonster_Arcane_BlinkLocationSelector_C::BB_Storage' has a wrong offset!");

}

