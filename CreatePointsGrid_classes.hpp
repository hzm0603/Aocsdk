#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CreatePointsGrid

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PCG_classes.hpp"
#include "PCGCoordinatePlaneAxes_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CreatePointsGrid.CreatePointsGrid_C
// 0x0088 (0x0110 - 0x0088)
class UCreatePointsGrid_C final : public UPCGBlueprintElement
{
public:
	struct FVector                                GridExtents;                                       // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Cell_Size;                                         // 0x00A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GridCenterPosition;                                // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local;                                             // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_Inverse_Transform;                           // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Volume;                                            // 0x00D2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPCGCoordinatePlaneAxes                       Coordinate_Plane_Axes;                             // 0x00D3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPCGSpatialData*                        Context_PCGSpatial_Data;                           // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntVector                             Increments;                                        // 0x00E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                IncrementSize;                                     // 0x00F0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CullPointsOutsideVolume;                           // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteWithContext(struct FPCGContext& InContext, const struct FPCGDataCollection& Input, struct FPCGDataCollection* Output);

	class FName NodeTitleOverride() const;
	bool IterationLoopBody(const struct FPCGContext& InContext, int64 Iteration, const class UPCGSpatialData* InA, const class UPCGSpatialData* InB, struct FPCGPoint* OutPoint, class UPCGMetadata* OutMetadata) const;
	bool IsCacheableOverride() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CreatePointsGrid_C">();
	}
	static class UCreatePointsGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCreatePointsGrid_C>();
	}
};
static_assert(alignof(UCreatePointsGrid_C) == 0x000008, "Wrong alignment on UCreatePointsGrid_C");
static_assert(sizeof(UCreatePointsGrid_C) == 0x000110, "Wrong size on UCreatePointsGrid_C");
static_assert(offsetof(UCreatePointsGrid_C, GridExtents) == 0x000088, "Member 'UCreatePointsGrid_C::GridExtents' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Cell_Size) == 0x0000A0, "Member 'UCreatePointsGrid_C::Cell_Size' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, GridCenterPosition) == 0x0000B8, "Member 'UCreatePointsGrid_C::GridCenterPosition' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Local) == 0x0000D0, "Member 'UCreatePointsGrid_C::Local' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Local_Inverse_Transform) == 0x0000D1, "Member 'UCreatePointsGrid_C::Local_Inverse_Transform' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Volume) == 0x0000D2, "Member 'UCreatePointsGrid_C::Volume' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Coordinate_Plane_Axes) == 0x0000D3, "Member 'UCreatePointsGrid_C::Coordinate_Plane_Axes' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Context_PCGSpatial_Data) == 0x0000D8, "Member 'UCreatePointsGrid_C::Context_PCGSpatial_Data' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, Increments) == 0x0000E0, "Member 'UCreatePointsGrid_C::Increments' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, IncrementSize) == 0x0000F0, "Member 'UCreatePointsGrid_C::IncrementSize' has a wrong offset!");
static_assert(offsetof(UCreatePointsGrid_C, CullPointsOutsideVolume) == 0x000108, "Member 'UCreatePointsGrid_C::CullPointsOutsideVolume' has a wrong offset!");

}

