#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MorphHighlight

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_MorphHighlight.WBP_MorphHighlight_C.ExecuteUbergraph_WBP_MorphHighlight
// 0x0048 (0x0048 - 0x0000)
struct WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight) == 0x000008, "Wrong alignment on WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight");
static_assert(sizeof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight) == 0x000048, "Wrong size on WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight");
static_assert(offsetof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight, EntryPoint) == 0x000000, "Member 'WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WBP_MorphHighlight_C_ExecuteUbergraph_WBP_MorphHighlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_MorphHighlight.WBP_MorphHighlight_C.GetToolTipText_0
// 0x0040 (0x0040 - 0x0000)
struct WBP_MorphHighlight_C_GetToolTipText_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UCharacterCreatorWidgetComponent*       K2Node_DynamicCast_AsCharacter_Creator_Widget_Component; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0028(0x0018)()
};
static_assert(alignof(WBP_MorphHighlight_C_GetToolTipText_0) == 0x000008, "Wrong alignment on WBP_MorphHighlight_C_GetToolTipText_0");
static_assert(sizeof(WBP_MorphHighlight_C_GetToolTipText_0) == 0x000040, "Wrong size on WBP_MorphHighlight_C_GetToolTipText_0");
static_assert(offsetof(WBP_MorphHighlight_C_GetToolTipText_0, ReturnValue) == 0x000000, "Member 'WBP_MorphHighlight_C_GetToolTipText_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_GetToolTipText_0, K2Node_DynamicCast_AsCharacter_Creator_Widget_Component) == 0x000018, "Member 'WBP_MorphHighlight_C_GetToolTipText_0::K2Node_DynamicCast_AsCharacter_Creator_Widget_Component' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_GetToolTipText_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WBP_MorphHighlight_C_GetToolTipText_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_GetToolTipText_0, CallFunc_Conv_NameToText_ReturnValue) == 0x000028, "Member 'WBP_MorphHighlight_C_GetToolTipText_0::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function WBP_MorphHighlight.WBP_MorphHighlight_C.OnMouseButtonUp
// 0x0220 (0x0220 - 0x0000)
struct WBP_MorphHighlight_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(WBP_MorphHighlight_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_MorphHighlight_C_OnMouseButtonUp");
static_assert(sizeof(WBP_MorphHighlight_C_OnMouseButtonUp) == 0x000220, "Wrong size on WBP_MorphHighlight_C_OnMouseButtonUp");
static_assert(offsetof(WBP_MorphHighlight_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_MorphHighlight_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_MorphHighlight_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_MorphHighlight_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_MorphHighlight_C_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_MorphHighlight.WBP_MorphHighlight_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_MorphHighlight_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MorphHighlight_C_Tick) == 0x000004, "Wrong alignment on WBP_MorphHighlight_C_Tick");
static_assert(sizeof(WBP_MorphHighlight_C_Tick) == 0x00003C, "Wrong size on WBP_MorphHighlight_C_Tick");
static_assert(offsetof(WBP_MorphHighlight_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_MorphHighlight_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_MorphHighlight_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_MorphHighlight_C_Tick::InDeltaTime' has a wrong offset!");

}

