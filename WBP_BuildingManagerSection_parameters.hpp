#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BuildingManagerSection

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_BuildingManagerSection.WBP_BuildingManagerSection_C.ExecuteUbergraph_WBP_BuildingManagerSection
// 0x0020 (0x0020 - 0x0000)
struct WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_SectionLabel;                   // 0x0008(0x0018)()
};
static_assert(alignof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection) == 0x000008, "Wrong alignment on WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection");
static_assert(sizeof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection) == 0x000020, "Wrong size on WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection");
static_assert(offsetof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection, EntryPoint) == 0x000000, "Member 'WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection, K2Node_Event_IsDesignTime) == 0x000005, "Member 'WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection, K2Node_CustomEvent_SectionLabel) == 0x000008, "Member 'WBP_BuildingManagerSection_C_ExecuteUbergraph_WBP_BuildingManagerSection::K2Node_CustomEvent_SectionLabel' has a wrong offset!");

// Function WBP_BuildingManagerSection.WBP_BuildingManagerSection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_BuildingManagerSection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_BuildingManagerSection_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_BuildingManagerSection_C_PreConstruct");
static_assert(sizeof(WBP_BuildingManagerSection_C_PreConstruct) == 0x000001, "Wrong size on WBP_BuildingManagerSection_C_PreConstruct");
static_assert(offsetof(WBP_BuildingManagerSection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_BuildingManagerSection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_BuildingManagerSection.WBP_BuildingManagerSection_C.Set Section Label
// 0x0018 (0x0018 - 0x0000)
struct WBP_BuildingManagerSection_C_Set_Section_Label final
{
public:
	class FText                                   SectionLabel_0;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_BuildingManagerSection_C_Set_Section_Label) == 0x000008, "Wrong alignment on WBP_BuildingManagerSection_C_Set_Section_Label");
static_assert(sizeof(WBP_BuildingManagerSection_C_Set_Section_Label) == 0x000018, "Wrong size on WBP_BuildingManagerSection_C_Set_Section_Label");
static_assert(offsetof(WBP_BuildingManagerSection_C_Set_Section_Label, SectionLabel_0) == 0x000000, "Member 'WBP_BuildingManagerSection_C_Set_Section_Label::SectionLabel_0' has a wrong offset!");

}

