#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TimerTextBlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_TimerTextBlock.WBP_TimerTextBlock_C.ConstructSettings
// 0x0158 (0x0158 - 0x0000)
struct WBP_TimerTextBlock_C_ConstructSettings final
{
public:
	class UTextBlock*                             Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisible_0;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Text;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          HasPostfix;                                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData;     // 0x0058(0x0050)(HasGetValueTypeHash)
	class FText                                   Temp_text_Variable_1;                              // 0x00A8(0x0018)()
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x00C8(0x0018)()
	struct FFormatArgumentData                    UniqueObjectNameForCooking_FormatArgumentData_1;   // 0x00E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            UniqueObjectNameForCooking_Array;                  // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0140(0x0018)()
};
static_assert(alignof(WBP_TimerTextBlock_C_ConstructSettings) == 0x000008, "Wrong alignment on WBP_TimerTextBlock_C_ConstructSettings");
static_assert(sizeof(WBP_TimerTextBlock_C_ConstructSettings) == 0x000158, "Wrong size on WBP_TimerTextBlock_C_ConstructSettings");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Widget) == 0x000000, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Widget' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, IsVisible_0) == 0x000008, "Member 'WBP_TimerTextBlock_C_ConstructSettings::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Text) == 0x000010, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Text' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, HasPostfix) == 0x000020, "Member 'WBP_TimerTextBlock_C_ConstructSettings::HasPostfix' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_text_Variable) == 0x000028, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'WBP_TimerTextBlock_C_ConstructSettings::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, UniqueObjectNameForCooking_FormatArgumentData) == 0x000058, "Member 'WBP_TimerTextBlock_C_ConstructSettings::UniqueObjectNameForCooking_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_text_Variable_1) == 0x0000A8, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_bool_Variable) == 0x0000C0, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_byte_Variable) == 0x0000C1, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_byte_Variable_1) == 0x0000C2, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, Temp_bool_Variable_1) == 0x0000C3, "Member 'WBP_TimerTextBlock_C_ConstructSettings::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, K2Node_Select_Default) == 0x0000C4, "Member 'WBP_TimerTextBlock_C_ConstructSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, K2Node_Select_Default_1) == 0x0000C8, "Member 'WBP_TimerTextBlock_C_ConstructSettings::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, UniqueObjectNameForCooking_FormatArgumentData_1) == 0x0000E0, "Member 'WBP_TimerTextBlock_C_ConstructSettings::UniqueObjectNameForCooking_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, UniqueObjectNameForCooking_Array) == 0x000130, "Member 'WBP_TimerTextBlock_C_ConstructSettings::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ConstructSettings, CallFunc_Format_ReturnValue) == 0x000140, "Member 'WBP_TimerTextBlock_C_ConstructSettings::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_TimerTextBlock.WBP_TimerTextBlock_C.ExecuteUbergraph_WBP_TimerTextBlock
// 0x0008 (0x0008 - 0x0000)
struct WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock) == 0x000004, "Wrong alignment on WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock");
static_assert(sizeof(WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock) == 0x000008, "Wrong size on WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock");
static_assert(offsetof(WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock, EntryPoint) == 0x000000, "Member 'WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_TimerTextBlock_C_ExecuteUbergraph_WBP_TimerTextBlock::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_TimerTextBlock.WBP_TimerTextBlock_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TimerTextBlock_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TimerTextBlock_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TimerTextBlock_C_PreConstruct");
static_assert(sizeof(WBP_TimerTextBlock_C_PreConstruct) == 0x000001, "Wrong size on WBP_TimerTextBlock_C_PreConstruct");
static_assert(offsetof(WBP_TimerTextBlock_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TimerTextBlock_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

