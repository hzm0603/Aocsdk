#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Ballista_AnimBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PC_Ballista_AnimBP.PC_Ballista_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct PC_Ballista_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(PC_Ballista_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on PC_Ballista_AnimBP_C_AnimGraph");
static_assert(sizeof(PC_Ballista_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on PC_Ballista_AnimBP_C_AnimGraph");
static_assert(offsetof(PC_Ballista_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'PC_Ballista_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function PC_Ballista_AnimBP.PC_Ballista_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct PC_Ballista_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Ballista_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on PC_Ballista_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(PC_Ballista_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on PC_Ballista_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(PC_Ballista_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'PC_Ballista_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function PC_Ballista_AnimBP.PC_Ballista_AnimBP_C.ExecuteUbergraph_PC_Ballista_AnimBP
// 0x00A8 (0x00A8 - 0x0000)
struct PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IISiegeWeaponDirver_C> UniqueObjectNameForCooking_AsISiege_Weapon_Dirver; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UniqueObjectNameForCooking_bSuccess;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USiegeWeaponComponent*                  CallFunc_GetDrivenSiegeWeapon_SiegeWeaponComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASiegeStationaryBase*                   K2Node_DynamicCast_AsSiege_Stationary_Base;        // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UnwindDegrees_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UnwindDegrees_ReturnValue_1;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Yaw_ImplicitCast;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Pitch_ImplicitCast;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP) == 0x000008, "Wrong alignment on PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP");
static_assert(sizeof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP) == 0x0000A8, "Wrong size on PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, EntryPoint) == 0x000000, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, Temp_bool_Variable) == 0x000004, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, Temp_real_Variable) == 0x000008, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, K2Node_Event_DeltaTimeX) == 0x000014, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000018, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, UniqueObjectNameForCooking_AsISiege_Weapon_Dirver) == 0x000020, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::UniqueObjectNameForCooking_AsISiege_Weapon_Dirver' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, UniqueObjectNameForCooking_bSuccess) == 0x000030, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::UniqueObjectNameForCooking_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, Temp_real_Variable_1) == 0x000038, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_GetDrivenSiegeWeapon_SiegeWeaponComponent) == 0x000040, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_GetDrivenSiegeWeapon_SiegeWeaponComponent' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, K2Node_DynamicCast_AsSiege_Stationary_Base) == 0x000060, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::K2Node_DynamicCast_AsSiege_Stationary_Base' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000069, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_UnwindDegrees_ReturnValue) == 0x000078, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_UnwindDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_UnwindDegrees_ReturnValue_1) == 0x00007C, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_UnwindDegrees_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000090, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, K2Node_VariableSet_Yaw_ImplicitCast) == 0x000098, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::K2Node_VariableSet_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP, K2Node_VariableSet_Pitch_ImplicitCast) == 0x0000A0, "Member 'PC_Ballista_AnimBP_C_ExecuteUbergraph_PC_Ballista_AnimBP::K2Node_VariableSet_Pitch_ImplicitCast' has a wrong offset!");

}

