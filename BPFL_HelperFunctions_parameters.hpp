#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPFL_HelperFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EZone_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "S_BiomeSelection_structs.hpp"


namespace SDK::Params
{

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.ColorTempToRGB
// 0x0100 (0x0100 - 0x0000)
struct BPFL_HelperFunctions_C_ColorTempToRGB final
{
public:
	double                                        Temp;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Return_Color;                                      // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Red;                                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Green;                                             // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Blue;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K;                                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UniqueObjectNameForCooking_LinearColor;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Loge_ReturnValue;                         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Loge_ReturnValue_1;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_2;     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UniqueObjectNameForCooking_B_ImplicitCast;         // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_G_ImplicitCast;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_R_ImplicitCast;         // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_ColorTempToRGB) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_ColorTempToRGB");
static_assert(sizeof(BPFL_HelperFunctions_C_ColorTempToRGB) == 0x000100, "Wrong size on BPFL_HelperFunctions_C_ColorTempToRGB");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, Temp) == 0x000000, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::Temp' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, __WorldContext) == 0x000008, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, Return_Color) == 0x000010, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::Return_Color' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, Red) == 0x000020, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::Red' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, Green) == 0x000028, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::Green' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, Blue) == 0x000030, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::Blue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, K) == 0x000038, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::K' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, UniqueObjectNameForCooking_LinearColor) == 0x000068, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::UniqueObjectNameForCooking_LinearColor' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Loge_ReturnValue) == 0x000080, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Loge_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A9, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000AA, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Loge_ReturnValue_1) == 0x0000B0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Loge_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0000E0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, CallFunc_LessEqual_DoubleDouble_ReturnValue_2) == 0x0000F0, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::CallFunc_LessEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, UniqueObjectNameForCooking_B_ImplicitCast) == 0x0000F4, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::UniqueObjectNameForCooking_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, UniqueObjectNameForCooking_G_ImplicitCast) == 0x0000F8, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::UniqueObjectNameForCooking_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_ColorTempToRGB, UniqueObjectNameForCooking_R_ImplicitCast) == 0x0000FC, "Member 'BPFL_HelperFunctions_C_ColorTempToRGB::UniqueObjectNameForCooking_R_ImplicitCast' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.Get Biome From Location
// 0x0030 (0x0030 - 0x0000)
struct BPFL_HelperFunctions_C_Get_Biome_From_Location final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Biome;                                             // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Get_Biomes_From_Location_Red_Category_Name; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Get_Biomes_From_Location_Red_Category_Amount; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Get_Biomes_From_Location_Green_Category_Name; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Get_Biomes_From_Location_Green_Category_Amount; // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Get_Biomes_From_Location_Blue_Category_Name; // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Get_Biomes_From_Location_Blue_Category_Amount; // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Get_Biomes_From_Location_Alpha_Category_Name; // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Get_Biomes_From_Location_Alpha_Category_Amount; // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue;                         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue_1;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_BMax_ReturnValue_2;                       // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_ByteByte_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    K2Node_Select_Default;                             // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    K2Node_Select_Default_1;                           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    K2Node_Select_Default_2;                           // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_Get_Biome_From_Location) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_Get_Biome_From_Location");
static_assert(sizeof(BPFL_HelperFunctions_C_Get_Biome_From_Location) == 0x000030, "Wrong size on BPFL_HelperFunctions_C_Get_Biome_From_Location");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, Location) == 0x000000, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::Location' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, __WorldContext) == 0x000010, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, Biome) == 0x000018, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::Biome' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Red_Category_Name) == 0x000019, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Red_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Red_Category_Amount) == 0x00001A, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Red_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Green_Category_Name) == 0x00001B, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Green_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Green_Category_Amount) == 0x00001C, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Green_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Blue_Category_Name) == 0x00001D, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Blue_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Blue_Category_Amount) == 0x00001E, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Blue_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Alpha_Category_Name) == 0x00001F, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Alpha_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Get_Biomes_From_Location_Alpha_Category_Amount) == 0x000020, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Get_Biomes_From_Location_Alpha_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, Temp_bool_Variable) == 0x000021, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_BMax_ReturnValue) == 0x000022, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_BMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, Temp_bool_Variable_1) == 0x000023, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_BMax_ReturnValue_1) == 0x000024, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_BMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, Temp_bool_Variable_2) == 0x000025, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_BMax_ReturnValue_2) == 0x000026, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_BMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000027, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_Less_ByteByte_ReturnValue) == 0x000028, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_Less_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, K2Node_Select_Default) == 0x00002B, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, K2Node_Select_Default_1) == 0x00002C, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biome_From_Location, K2Node_Select_Default_2) == 0x00002D, "Member 'BPFL_HelperFunctions_C_Get_Biome_From_Location::K2Node_Select_Default_2' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.Get Zone From Location
// 0x0078 (0x0078 - 0x0000)
struct BPFL_HelperFunctions_C_Get_Zone_From_Location final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EZone                                         Zone;                                              // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Get_Biome_From_Location_Biome;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_1;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_2;                              // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_3;                              // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_4;                              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_5;                              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_6;                              // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_7;                              // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_8;                              // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_9;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_10;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_11;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_12;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_13;                             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_14;                             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_15;                             // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default;                             // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_16;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_17;                             // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_1;                           // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_18;                             // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_19;                             // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_2;                           // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_20;                             // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_21;                             // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_3;                           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_22;                             // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_23;                             // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_24;                             // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_25;                             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_26;                             // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_4;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         Temp_byte_Variable_27;                             // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Temp_byte_Variable_28;                             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_5;                           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EZone                                         K2Node_Select_Default_6;                           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_Get_Zone_From_Location) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_Get_Zone_From_Location");
static_assert(sizeof(BPFL_HelperFunctions_C_Get_Zone_From_Location) == 0x000078, "Wrong size on BPFL_HelperFunctions_C_Get_Zone_From_Location");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Location) == 0x000000, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Location' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, __WorldContext) == 0x000010, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Zone) == 0x000018, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Zone' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable) == 0x000019, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_Get_Biome_From_Location_Biome) == 0x00001A, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_Get_Biome_From_Location_Biome' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_1) == 0x000030, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000031, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_2) == 0x000041, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_3) == 0x000042, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_4) == 0x000043, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_5) == 0x000044, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_6) == 0x000045, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_7) == 0x000046, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_8) == 0x000047, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_9) == 0x000048, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_10) == 0x000049, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_11) == 0x00004A, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_12) == 0x00004B, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_13) == 0x00004C, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable) == 0x00004D, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_14) == 0x00004E, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_15) == 0x00004F, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable_1) == 0x000050, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default) == 0x000051, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_16) == 0x000052, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_17) == 0x000053, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable_2) == 0x000054, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_1) == 0x000055, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_18) == 0x000056, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_19) == 0x000057, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable_3) == 0x000058, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_2) == 0x000059, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_20) == 0x00005A, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_21) == 0x00005B, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable_4) == 0x00005C, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_3) == 0x00005D, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_22) == 0x00005E, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_23) == 0x00005F, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_bool_Variable_5) == 0x000060, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_24) == 0x000061, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_24' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_25) == 0x000062, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_25' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_26) == 0x000063, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_26' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_4) == 0x000064, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_27) == 0x000065, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_27' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000068, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, Temp_byte_Variable_28) == 0x000071, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::Temp_byte_Variable_28' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_5) == 0x000072, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Zone_From_Location, K2Node_Select_Default_6) == 0x000073, "Member 'BPFL_HelperFunctions_C_Get_Zone_From_Location::K2Node_Select_Default_6' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.GetIntrepidSkyInstance
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_HelperFunctions_C_GetIntrepidSkyInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       IntrepidSky;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   IntrepidSky_Class;                                 // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       LocalIntrepidSky;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAoCGameInstance*                       K2Node_DynamicCast_AsAo_CGame_Instance;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UWorld*                                 CallFunc_GetWorldContext_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UniqueObjectNameForCooking_AsIntrepid_Sky_Base;    // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UniqueObjectNameForCooking_bSuccess;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetSkyInstance_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AIntrepidSkyBase*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       K2Node_DynamicCast_AsIntrepid_Sky_Base;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_GetIntrepidSkyInstance");
static_assert(sizeof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance) == 0x0000F0, "Wrong size on BPFL_HelperFunctions_C_GetIntrepidSkyInstance");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, __WorldContext) == 0x000000, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, IntrepidSky) == 0x000008, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::IntrepidSky' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, IntrepidSky_Class) == 0x000010, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::IntrepidSky_Class' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, LocalIntrepidSky) == 0x000038, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::LocalIntrepidSky' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_AsAo_CGame_Instance) == 0x000058, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_AsAo_CGame_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetIntrepidSkyInstance_ReturnValue) == 0x000068, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetIntrepidSkyInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsServer_ReturnValue) == 0x000071, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x000080, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000090, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetWorldContext_ReturnValue) == 0x000098, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetWorldContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, UniqueObjectNameForCooking_AsIntrepid_Sky_Base) == 0x0000A0, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::UniqueObjectNameForCooking_AsIntrepid_Sky_Base' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, UniqueObjectNameForCooking_bSuccess) == 0x0000A8, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::UniqueObjectNameForCooking_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetSkyInstance_ReturnValue) == 0x0000B0, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetSkyInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B8, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsValid_ReturnValue_1) == 0x0000CC, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0000CD, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsValid_ReturnValue_2) == 0x0000CE, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_AsIntrepid_Sky_Base) == 0x0000E0, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_AsIntrepid_Sky_Base' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetIntrepidSkyInstance, CallFunc_IsWithEditor_ReturnValue) == 0x0000EA, "Member 'BPFL_HelperFunctions_C_GetIntrepidSkyInstance::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.GetVerraGlobalSkyInstance
// 0x00F0 (0x00F0 - 0x0000)
struct BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       VerraGlobalSky;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   VerraWorldGlobalSky_Class;                         // 0x0010(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       LocalVerraGlobalSky;                               // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAoCGameInstance*                       K2Node_DynamicCast_AsAo_CGame_Instance;            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_ReturnValue;       // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWorld*                                 CallFunc_GetWorldContext_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       CallFunc_GetSkyInstance_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UniqueObjectNameForCooking_AsIntrepid_Sky_Base;    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UniqueObjectNameForCooking_bSuccess;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AIntrepidSkyBase*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AIntrepidSkyBase*                       K2Node_DynamicCast_AsIntrepid_Sky_Base;            // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance");
static_assert(sizeof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance) == 0x0000F0, "Wrong size on BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, __WorldContext) == 0x000000, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, VerraGlobalSky) == 0x000008, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::VerraGlobalSky' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, VerraWorldGlobalSky_Class) == 0x000010, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::VerraWorldGlobalSky_Class' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, LocalVerraGlobalSky) == 0x000038, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::LocalVerraGlobalSky' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_AsAo_CGame_Instance) == 0x000058, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_AsAo_CGame_Instance' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetIntrepidSkyInstance_ReturnValue) == 0x000068, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetIntrepidSkyInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsServer_ReturnValue) == 0x000071, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetPlayerController_ReturnValue) == 0x000078, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x000080, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetWorldContext_ReturnValue) == 0x000090, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetWorldContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000098, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetSkyInstance_ReturnValue) == 0x0000A0, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetSkyInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, UniqueObjectNameForCooking_AsIntrepid_Sky_Base) == 0x0000A8, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::UniqueObjectNameForCooking_AsIntrepid_Sky_Base' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, UniqueObjectNameForCooking_bSuccess) == 0x0000B0, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::UniqueObjectNameForCooking_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000B8, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, Temp_int_Array_Index_Variable) == 0x0000D4, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_AsIntrepid_Sky_Base) == 0x0000E0, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_AsIntrepid_Sky_Base' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsValid_ReturnValue_3) == 0x0000E9, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance, CallFunc_IsWithEditor_ReturnValue) == 0x0000EA, "Member 'BPFL_HelperFunctions_C_GetVerraGlobalSkyInstance::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.IsLocalPlayer
// 0x0040 (0x0040 - 0x0000)
struct BPFL_HelperFunctions_C_IsLocalPlayer final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Local_Player;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_GetActualPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_IsLocalPlayer) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_IsLocalPlayer");
static_assert(sizeof(BPFL_HelperFunctions_C_IsLocalPlayer) == 0x000040, "Wrong size on BPFL_HelperFunctions_C_IsLocalPlayer");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, Actor) == 0x000000, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::Actor' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, __WorldContext) == 0x000008, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, Local_Player) == 0x000010, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::Local_Player' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x000020, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, CallFunc_GetActualPlayer_ReturnValue) == 0x000030, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::CallFunc_GetActualPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_IsLocalPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'BPFL_HelperFunctions_C_IsLocalPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BPFL_HelperFunctions.BPFL_HelperFunctions_C.Get Biomes From Location
// 0x0188 (0x0188 - 0x0000)
struct BPFL_HelperFunctions_C_Get_Biomes_From_Location final
{
public:
	struct FVector2D                              Location;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Red_Category_Name;                                 // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Red_Category_Amount;                               // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Green_Category_Name;                               // 0x001A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Green_Category_Amount;                             // 0x001B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Blue_Category_Name;                                // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Blue_Category_Amount;                              // 0x001D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Alpha_Category_Name;                               // 0x001E(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Alpha_Category_Amount;                             // 0x001F(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EBiomeType>                            Alpha_Biome_Mapping;                               // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<EBiomeType>                            Blue_Biome_Mapping;                                // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<EBiomeType>                            Green_Biome_Mapping;                               // 0x0040(0x0010)(Edit, BlueprintVisible)
	TArray<EBiomeType>                            Red_Biome_Mapping;                                 // 0x0050(0x0010)(Edit, BlueprintVisible)
	class UDataTable*                             BiomeSettingSelectionTable;                        // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EBiomeType>                            UniqueObjectNameForCooking_Array;                  // 0x0088(0x0010)(ReferenceParm)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EBiomeType>                            UniqueObjectNameForCooking_Array_1;                // 0x00B8(0x0010)(ReferenceParm)
	TArray<EBiomeType>                            UniqueObjectNameForCooking_Array_2;                // 0x00C8(0x0010)(ReferenceParm)
	TArray<EBiomeType>                            UniqueObjectNameForCooking_Array_3;                // 0x00D8(0x0010)(ReferenceParm)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BiomeSelection                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item;                           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item_1;                         // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_2;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item_2;                         // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item_3;                         // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPFL_HelperFunctions_C_Get_Biomes_From_Location) == 0x000008, "Wrong alignment on BPFL_HelperFunctions_C_Get_Biomes_From_Location");
static_assert(sizeof(BPFL_HelperFunctions_C_Get_Biomes_From_Location) == 0x000188, "Wrong size on BPFL_HelperFunctions_C_Get_Biomes_From_Location");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Location) == 0x000000, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Location' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, __WorldContext) == 0x000010, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Red_Category_Name) == 0x000018, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Red_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Red_Category_Amount) == 0x000019, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Red_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Green_Category_Name) == 0x00001A, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Green_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Green_Category_Amount) == 0x00001B, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Green_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Blue_Category_Name) == 0x00001C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Blue_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Blue_Category_Amount) == 0x00001D, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Blue_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Alpha_Category_Name) == 0x00001E, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Alpha_Category_Name' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Alpha_Category_Amount) == 0x00001F, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Alpha_Category_Amount' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Alpha_Biome_Mapping) == 0x000020, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Alpha_Biome_Mapping' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Blue_Biome_Mapping) == 0x000030, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Blue_Biome_Mapping' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Green_Biome_Mapping) == 0x000040, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Green_Biome_Mapping' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, Red_Biome_Mapping) == 0x000050, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::Red_Biome_Mapping' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, BiomeSettingSelectionTable) == 0x000060, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::BiomeSettingSelectionTable' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000068, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_BreakVector2D_X) == 0x000070, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_BreakVector2D_Y) == 0x000078, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, UniqueObjectNameForCooking_Array) == 0x000088, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::UniqueObjectNameForCooking_Array' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000098, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, UniqueObjectNameForCooking_Array_1) == 0x0000B8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::UniqueObjectNameForCooking_Array_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, UniqueObjectNameForCooking_Array_2) == 0x0000C8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::UniqueObjectNameForCooking_Array_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, UniqueObjectNameForCooking_Array_3) == 0x0000D8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::UniqueObjectNameForCooking_Array_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0000E8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_FTrunc_ReturnValue) == 0x0000F8, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_FTrunc_ReturnValue_1) == 0x0000FC, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_IntInt_ReturnValue) == 0x000108, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_FTrunc_ReturnValue_2) == 0x00010C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Conv_IntToString_ReturnValue) == 0x000118, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Conv_StringToName_ReturnValue) == 0x000128, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_GetDataTableRowFromName_OutRow) == 0x000130, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000138, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_IntInt_ReturnValue) == 0x00013C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000140, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Array_Get_Item) == 0x000144, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Subtract_IntInt_ReturnValue) == 0x000148, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00014C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000150, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Array_Get_Item_1) == 0x000154, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000158, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_IntInt_ReturnValue_2) == 0x00015C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x000160, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Array_Get_Item_2) == 0x000164, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000168, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Array_Get_Item_3) == 0x00016C, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000178, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPFL_HelperFunctions_C_Get_Biomes_From_Location, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000180, "Member 'BPFL_HelperFunctions_C_Get_Biomes_From_Location::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

}

