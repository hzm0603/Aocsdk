#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AoCAIControllerBP

#include "Basic.hpp"


namespace SDK::Params
{

// Function AoCAIControllerBP.AoCAIControllerBP_C.ExecuteUbergraph_AoCAIControllerBP
// 0x0018 (0x0018 - 0x0000)
struct AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP) == 0x000008, "Wrong alignment on AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP");
static_assert(sizeof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP) == 0x000018, "Wrong size on AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP");
static_assert(offsetof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP, EntryPoint) == 0x000000, "Member 'AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP, K2Node_Event_PossessedPawn) == 0x000008, "Member 'AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP, K2Node_Event_UnpossessedPawn) == 0x000010, "Member 'AoCAIControllerBP_C_ExecuteUbergraph_AoCAIControllerBP::K2Node_Event_UnpossessedPawn' has a wrong offset!");

// Function AoCAIControllerBP.AoCAIControllerBP_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct AoCAIControllerBP_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCAIControllerBP_C_ReceivePossess) == 0x000008, "Wrong alignment on AoCAIControllerBP_C_ReceivePossess");
static_assert(sizeof(AoCAIControllerBP_C_ReceivePossess) == 0x000008, "Wrong size on AoCAIControllerBP_C_ReceivePossess");
static_assert(offsetof(AoCAIControllerBP_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'AoCAIControllerBP_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function AoCAIControllerBP.AoCAIControllerBP_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct AoCAIControllerBP_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCAIControllerBP_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on AoCAIControllerBP_C_ReceiveUnPossess");
static_assert(sizeof(AoCAIControllerBP_C_ReceiveUnPossess) == 0x000008, "Wrong size on AoCAIControllerBP_C_ReceiveUnPossess");
static_assert(offsetof(AoCAIControllerBP_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'AoCAIControllerBP_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

}

