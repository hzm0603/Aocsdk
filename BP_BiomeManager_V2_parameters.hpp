#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BiomeManager_V2

#include "Basic.hpp"

#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_BiomeManager_V2.BP_BiomeManager_V2_C.ExecuteUbergraph_BP_BiomeManager_V2
// 0x0058 (0x0058 - 0x0000)
struct BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UIntrepidSkySubsystem*                  CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_GetBiomeAmounts_RedCatName;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_GetBiomeAmounts_GreenCatName;             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_GetBiomeAmounts_BlueCatName;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_GetBiomeAmounts_AlphaCatName;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBiomeAmounts_RedCatAmount;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBiomeAmounts_GreenCatAmount;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBiomeAmounts_BlueCatAmount;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBiomeAmounts_AlphaCatAmount;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaTime;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime)>              UniqueObjectNameForCooking_OutputDelegate;         // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2) == 0x000008, "Wrong alignment on BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2");
static_assert(sizeof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2) == 0x000058, "Wrong size on BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, EntryPoint) == 0x000000, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_RedCatName) == 0x000012, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_RedCatName' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_GreenCatName) == 0x000013, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_GreenCatName' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_BlueCatName) == 0x000014, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_BlueCatName' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_AlphaCatName) == 0x000015, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_AlphaCatName' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_RedCatAmount) == 0x000018, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_RedCatAmount' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_GreenCatAmount) == 0x00001C, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_GreenCatAmount' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_BlueCatAmount) == 0x000020, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_BlueCatAmount' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetBiomeAmounts_AlphaCatAmount) == 0x000024, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetBiomeAmounts_AlphaCatAmount' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, K2Node_CustomEvent_DeltaTime) == 0x00002C, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::K2Node_CustomEvent_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_IsWithEditor_ReturnValue) == 0x000030, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_GetGameState_ReturnValue) == 0x000038, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, UniqueObjectNameForCooking_OutputDelegate) == 0x000040, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::UniqueObjectNameForCooking_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'BP_BiomeManager_V2_C_ExecuteUbergraph_BP_BiomeManager_V2::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_BiomeManager_V2.BP_BiomeManager_V2_C.GlobalSkyTickBP
// 0x0004 (0x0004 - 0x0000)
struct BP_BiomeManager_V2_C_GlobalSkyTickBP final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BiomeManager_V2_C_GlobalSkyTickBP) == 0x000004, "Wrong alignment on BP_BiomeManager_V2_C_GlobalSkyTickBP");
static_assert(sizeof(BP_BiomeManager_V2_C_GlobalSkyTickBP) == 0x000004, "Wrong size on BP_BiomeManager_V2_C_GlobalSkyTickBP");
static_assert(offsetof(BP_BiomeManager_V2_C_GlobalSkyTickBP, DeltaTime) == 0x000000, "Member 'BP_BiomeManager_V2_C_GlobalSkyTickBP::DeltaTime' has a wrong offset!");

// Function BP_BiomeManager_V2.BP_BiomeManager_V2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BiomeManager_V2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BiomeManager_V2_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BiomeManager_V2_C_ReceiveTick");
static_assert(sizeof(BP_BiomeManager_V2_C_ReceiveTick) == 0x000004, "Wrong size on BP_BiomeManager_V2_C_ReceiveTick");
static_assert(offsetof(BP_BiomeManager_V2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BiomeManager_V2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BiomeManager_V2.BP_BiomeManager_V2_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct BP_BiomeManager_V2_C_UserConstructionScript final
{
public:
	TMap<EBiomeType, class UAtmosphereOverrideDataAsset*> NewLocalVar;                                       // 0x0000(0x0050)(Edit, BlueprintVisible)
	TMap<EBiomeType, class UAtmosphereOverrideDataAsset*> UniqueObjectNameForCooking_MakeVariableOutput;     // 0x0050(0x0050)()
};
static_assert(alignof(BP_BiomeManager_V2_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BiomeManager_V2_C_UserConstructionScript");
static_assert(sizeof(BP_BiomeManager_V2_C_UserConstructionScript) == 0x0000A0, "Wrong size on BP_BiomeManager_V2_C_UserConstructionScript");
static_assert(offsetof(BP_BiomeManager_V2_C_UserConstructionScript, NewLocalVar) == 0x000000, "Member 'BP_BiomeManager_V2_C_UserConstructionScript::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_BiomeManager_V2_C_UserConstructionScript, UniqueObjectNameForCooking_MakeVariableOutput) == 0x000050, "Member 'BP_BiomeManager_V2_C_UserConstructionScript::UniqueObjectNameForCooking_MakeVariableOutput' has a wrong offset!");

}

