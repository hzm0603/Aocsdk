#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MorphTool

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MorphTool.MorphTool_C
// 0x0058 (0x0380 - 0x0328)
class UMorphTool_C final : public UMorphTool
{
public:
	class UButton*                                Button_75;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCharacterCreatorWidgetComponent*       MorphTargetSpot;                                   // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseStartPosition;                                // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCharacterCustomizationMorphSections   ActiveMorphSection;                                // 0x0350(0x0030)(Edit, BlueprintVisible)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MorphTool_C">();
	}
	static class UMorphTool_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMorphTool_C>();
	}
};
static_assert(alignof(UMorphTool_C) == 0x000008, "Wrong alignment on UMorphTool_C");
static_assert(sizeof(UMorphTool_C) == 0x000380, "Wrong size on UMorphTool_C");
static_assert(offsetof(UMorphTool_C, Button_75) == 0x000328, "Member 'UMorphTool_C::Button_75' has a wrong offset!");
static_assert(offsetof(UMorphTool_C, Image) == 0x000330, "Member 'UMorphTool_C::Image' has a wrong offset!");
static_assert(offsetof(UMorphTool_C, MorphTargetSpot) == 0x000338, "Member 'UMorphTool_C::MorphTargetSpot' has a wrong offset!");
static_assert(offsetof(UMorphTool_C, MouseStartPosition) == 0x000340, "Member 'UMorphTool_C::MouseStartPosition' has a wrong offset!");
static_assert(offsetof(UMorphTool_C, ActiveMorphSection) == 0x000350, "Member 'UMorphTool_C::ActiveMorphSection' has a wrong offset!");

}

