#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FloatAttributeFilter

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PCG_structs.hpp"


namespace SDK::Params
{

// Function FloatAttributeFilter.FloatAttributeFilter_C.ExecuteWithContext
// 0x01C0 (0x01C0 - 0x0000)
struct FloatAttributeFilter_C_ExecuteWithContext final
{
public:
	struct FPCGContext                            InContext;                                         // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPCGDataCollection                     Input;                                             // 0x00B8(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FPCGDataCollection                     Output;                                            // 0x00D8(0x0020)(Parm, OutParm)
	const class UPCGPointData*                    CallFunc_ToPointDataWithContext_ReturnValue;       // 0x00F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPCGTaggedData>                 CallFunc_GetInputs_ReturnValue;                    // 0x0100(0x0010)(ReferenceParm)
	class UPCGPointData*                          CallFunc_PointLoop_OutData;                        // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPCGTaggedData                         K2Node_MakeStruct_PCGTaggedData;                   // 0x0118(0x0068)()
	TArray<struct FPCGTaggedData>                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm)
	class UPCGSpatialData*                        K2Node_DynamicCast_AsPCGSpatial_Data;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPCGDataCollection                     K2Node_MakeStruct_PCGDataCollection;               // 0x01A0(0x0020)()
};
static_assert(alignof(FloatAttributeFilter_C_ExecuteWithContext) == 0x000008, "Wrong alignment on FloatAttributeFilter_C_ExecuteWithContext");
static_assert(sizeof(FloatAttributeFilter_C_ExecuteWithContext) == 0x0001C0, "Wrong size on FloatAttributeFilter_C_ExecuteWithContext");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, InContext) == 0x000000, "Member 'FloatAttributeFilter_C_ExecuteWithContext::InContext' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, Input) == 0x0000B8, "Member 'FloatAttributeFilter_C_ExecuteWithContext::Input' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, Output) == 0x0000D8, "Member 'FloatAttributeFilter_C_ExecuteWithContext::Output' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, CallFunc_ToPointDataWithContext_ReturnValue) == 0x0000F8, "Member 'FloatAttributeFilter_C_ExecuteWithContext::CallFunc_ToPointDataWithContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, CallFunc_GetInputs_ReturnValue) == 0x000100, "Member 'FloatAttributeFilter_C_ExecuteWithContext::CallFunc_GetInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, CallFunc_PointLoop_OutData) == 0x000110, "Member 'FloatAttributeFilter_C_ExecuteWithContext::CallFunc_PointLoop_OutData' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, K2Node_MakeStruct_PCGTaggedData) == 0x000118, "Member 'FloatAttributeFilter_C_ExecuteWithContext::K2Node_MakeStruct_PCGTaggedData' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, K2Node_MakeArray_Array) == 0x000180, "Member 'FloatAttributeFilter_C_ExecuteWithContext::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, K2Node_DynamicCast_AsPCGSpatial_Data) == 0x000190, "Member 'FloatAttributeFilter_C_ExecuteWithContext::K2Node_DynamicCast_AsPCGSpatial_Data' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'FloatAttributeFilter_C_ExecuteWithContext::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_ExecuteWithContext, K2Node_MakeStruct_PCGDataCollection) == 0x0001A0, "Member 'FloatAttributeFilter_C_ExecuteWithContext::K2Node_MakeStruct_PCGDataCollection' has a wrong offset!");

// Function FloatAttributeFilter.FloatAttributeFilter_C.NodeColorOverride
// 0x0010 (0x0010 - 0x0000)
struct FloatAttributeFilter_C_NodeColorOverride final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FloatAttributeFilter_C_NodeColorOverride) == 0x000004, "Wrong alignment on FloatAttributeFilter_C_NodeColorOverride");
static_assert(sizeof(FloatAttributeFilter_C_NodeColorOverride) == 0x000010, "Wrong size on FloatAttributeFilter_C_NodeColorOverride");
static_assert(offsetof(FloatAttributeFilter_C_NodeColorOverride, ReturnValue) == 0x000000, "Member 'FloatAttributeFilter_C_NodeColorOverride::ReturnValue' has a wrong offset!");

// Function FloatAttributeFilter.FloatAttributeFilter_C.NodeTitleOverride
// 0x0008 (0x0008 - 0x0000)
struct FloatAttributeFilter_C_NodeTitleOverride final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FloatAttributeFilter_C_NodeTitleOverride) == 0x000004, "Wrong alignment on FloatAttributeFilter_C_NodeTitleOverride");
static_assert(sizeof(FloatAttributeFilter_C_NodeTitleOverride) == 0x000008, "Wrong size on FloatAttributeFilter_C_NodeTitleOverride");
static_assert(offsetof(FloatAttributeFilter_C_NodeTitleOverride, ReturnValue) == 0x000000, "Member 'FloatAttributeFilter_C_NodeTitleOverride::ReturnValue' has a wrong offset!");

// Function FloatAttributeFilter.FloatAttributeFilter_C.PointLoopBody
// 0x02B0 (0x02B0 - 0x0000)
struct FloatAttributeFilter_C_PointLoopBody final
{
public:
	struct FPCGContext                            InContext;                                         // 0x0000(0x00B8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	const class UPCGPointData*                    InData;                                            // 0x00B8(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPCGPoint                              InPoint;                                           // 0x00C0(0x00D0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FPCGPoint                              OutPoint;                                          // 0x0190(0x00D0)(Parm, OutParm, NoDestructor)
	class UPCGMetadata*                           OutMetadata;                                       // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0268(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Layer_Value;                                       // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAttribute_ReturnValue;                 // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x027D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27E[0x2];                                      // 0x027E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FloatAttributeFilter_C_PointLoopBody) == 0x000010, "Wrong alignment on FloatAttributeFilter_C_PointLoopBody");
static_assert(sizeof(FloatAttributeFilter_C_PointLoopBody) == 0x0002B0, "Wrong size on FloatAttributeFilter_C_PointLoopBody");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, InContext) == 0x000000, "Member 'FloatAttributeFilter_C_PointLoopBody::InContext' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, InData) == 0x0000B8, "Member 'FloatAttributeFilter_C_PointLoopBody::InData' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, InPoint) == 0x0000C0, "Member 'FloatAttributeFilter_C_PointLoopBody::InPoint' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, OutPoint) == 0x000190, "Member 'FloatAttributeFilter_C_PointLoopBody::OutPoint' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, OutMetadata) == 0x000260, "Member 'FloatAttributeFilter_C_PointLoopBody::OutMetadata' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, ReturnValue) == 0x000268, "Member 'FloatAttributeFilter_C_PointLoopBody::ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, Layer_Value) == 0x00026C, "Member 'FloatAttributeFilter_C_PointLoopBody::Layer_Value' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000270, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000271, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000272, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000273, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000274, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000275, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_GetFloatAttribute_ReturnValue) == 0x000278, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_HasAttribute_ReturnValue) == 0x00027C, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_HasAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, K2Node_SwitchEnum_CmpSuccess) == 0x00027D, "Member 'FloatAttributeFilter_C_PointLoopBody::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000280, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000290, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000298, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0002A0, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(FloatAttributeFilter_C_PointLoopBody, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0002A8, "Member 'FloatAttributeFilter_C_PointLoopBody::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

