#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SelectablePipButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SelectablePipButton.WBP_SelectablePipButton_C
// 0x0038 (0x0328 - 0x02F0)
class UWBP_SelectablePipButton_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAoCCommonTextBlock*                    LabelTextBlock;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PipIcon;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bSelected;                                         // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label;                                             // 0x0310(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void PreConstruct(bool IsDesignTime);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void ExecuteUbergraph_WBP_SelectablePipButton(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SelectablePipButton_C">();
	}
	static class UWBP_SelectablePipButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SelectablePipButton_C>();
	}
};
static_assert(alignof(UWBP_SelectablePipButton_C) == 0x000008, "Wrong alignment on UWBP_SelectablePipButton_C");
static_assert(sizeof(UWBP_SelectablePipButton_C) == 0x000328, "Wrong size on UWBP_SelectablePipButton_C");
static_assert(offsetof(UWBP_SelectablePipButton_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_SelectablePipButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SelectablePipButton_C, LabelTextBlock) == 0x0002F8, "Member 'UWBP_SelectablePipButton_C::LabelTextBlock' has a wrong offset!");
static_assert(offsetof(UWBP_SelectablePipButton_C, PipIcon) == 0x000300, "Member 'UWBP_SelectablePipButton_C::PipIcon' has a wrong offset!");
static_assert(offsetof(UWBP_SelectablePipButton_C, bSelected) == 0x000308, "Member 'UWBP_SelectablePipButton_C::bSelected' has a wrong offset!");
static_assert(offsetof(UWBP_SelectablePipButton_C, Label) == 0x000310, "Member 'UWBP_SelectablePipButton_C::Label' has a wrong offset!");

}

