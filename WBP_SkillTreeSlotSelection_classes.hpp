#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTreeSlotSelection

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SkillTreeSlotSelection.WBP_SkillTreeSlotSelection_C
// 0x0040 (0x0368 - 0x0328)
class UWBP_SkillTreeSlotSelection_C final : public USkillTreeSlotSelection
{
public:
	class UWBP_ScrollWindow_Gradient_C*           ScW_Choices;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice;                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_1;                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_2;                         // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_3;                         // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_4;                         // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_5;                         // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeSlotChoice_C*             WBP_SkillTreeSlotChoice_6;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SkillTreeSlotSelection_C">();
	}
	static class UWBP_SkillTreeSlotSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SkillTreeSlotSelection_C>();
	}
};
static_assert(alignof(UWBP_SkillTreeSlotSelection_C) == 0x000008, "Wrong alignment on UWBP_SkillTreeSlotSelection_C");
static_assert(sizeof(UWBP_SkillTreeSlotSelection_C) == 0x000368, "Wrong size on UWBP_SkillTreeSlotSelection_C");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, ScW_Choices) == 0x000328, "Member 'UWBP_SkillTreeSlotSelection_C::ScW_Choices' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice) == 0x000330, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_1) == 0x000338, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_1' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_2) == 0x000340, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_2' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_3) == 0x000348, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_3' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_4) == 0x000350, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_4' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_5) == 0x000358, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_5' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTreeSlotSelection_C, WBP_SkillTreeSlotChoice_6) == 0x000360, "Member 'UWBP_SkillTreeSlotSelection_C::WBP_SkillTreeSlotChoice_6' has a wrong offset!");

}

