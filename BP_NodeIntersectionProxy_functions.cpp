#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NodeIntersectionProxy

#include "Basic.hpp"

#include "BP_NodeIntersectionProxy_classes.hpp"
#include "BP_NodeIntersectionProxy_parameters.hpp"


namespace SDK
{

// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Apply PCG Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NodeIntersectionProxy_C::Apply_PCG_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeIntersectionProxy_C", "Apply PCG Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Clear All PCG Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NodeIntersectionProxy_C::Clear_All_PCG_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeIntersectionProxy_C", "Clear All PCG Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Create Splines
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USplineComponent*>&        In_Splines                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_NodeIntersectionProxy_C::Create_Splines(TArray<class USplineComponent*>& In_Splines)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeIntersectionProxy_C", "Create Splines");

	Params::BP_NodeIntersectionProxy_C_Create_Splines Parms{};

	Parms.In_Splines = std::move(In_Splines);

	UObject::ProcessEvent(Func, &Parms);

	In_Splines = std::move(Parms.In_Splines);
}


// Function BP_NodeIntersectionProxy.BP_NodeIntersectionProxy_C.Update PCG Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NodeIntersectionProxy_C::Update_PCG_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NodeIntersectionProxy_C", "Update PCG Data");

	UObject::ProcessEvent(Func, nullptr);
}

}

