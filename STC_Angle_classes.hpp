#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_Angle

#include "Basic.hpp"

#include "StateTreeModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STC_Angle.STC_Angle_C
// 0x0020 (0x0088 - 0x0068)
class USTC_Angle_C final : public UStateTreeConditionBlueprintBase
{
public:
	class ABaseCharacter*                         Agent;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inverse;                                           // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Directional;                                       // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool ReceiveTestCondition() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STC_Angle_C">();
	}
	static class USTC_Angle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTC_Angle_C>();
	}
};
static_assert(alignof(USTC_Angle_C) == 0x000008, "Wrong alignment on USTC_Angle_C");
static_assert(sizeof(USTC_Angle_C) == 0x000088, "Wrong size on USTC_Angle_C");
static_assert(offsetof(USTC_Angle_C, Agent) == 0x000068, "Member 'USTC_Angle_C::Agent' has a wrong offset!");
static_assert(offsetof(USTC_Angle_C, Target) == 0x000070, "Member 'USTC_Angle_C::Target' has a wrong offset!");
static_assert(offsetof(USTC_Angle_C, Angle) == 0x000078, "Member 'USTC_Angle_C::Angle' has a wrong offset!");
static_assert(offsetof(USTC_Angle_C, Inverse) == 0x000080, "Member 'USTC_Angle_C::Inverse' has a wrong offset!");
static_assert(offsetof(USTC_Angle_C, Directional) == 0x000081, "Member 'USTC_Angle_C::Directional' has a wrong offset!");

}

