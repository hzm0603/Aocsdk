#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AoCLoginGameModeBP

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AoCLoginGameModeBP.AoCLoginGameModeBP_C.ExecuteUbergraph_AoCLoginGameModeBP
// 0x0038 (0x0038 - 0x0000)
struct AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_Username;                             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Password;                             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   K2Node_Event_PlayerController;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP) == 0x000008, "Wrong alignment on AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP");
static_assert(sizeof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP) == 0x000038, "Wrong size on AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, EntryPoint) == 0x000000, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, K2Node_Event_EndPlayReason) == 0x000004, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, CallFunc_HasAuthority_ReturnValue) == 0x000006, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, K2Node_Event_Username) == 0x000010, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::K2Node_Event_Username' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, K2Node_Event_Password) == 0x000020, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::K2Node_Event_Password' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP, K2Node_Event_PlayerController) == 0x000030, "Member 'AoCLoginGameModeBP_C_ExecuteUbergraph_AoCLoginGameModeBP::K2Node_Event_PlayerController' has a wrong offset!");

// Function AoCLoginGameModeBP.AoCLoginGameModeBP_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct AoCLoginGameModeBP_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCLoginGameModeBP_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on AoCLoginGameModeBP_C_ReceiveEndPlay");
static_assert(sizeof(AoCLoginGameModeBP_C_ReceiveEndPlay) == 0x000001, "Wrong size on AoCLoginGameModeBP_C_ReceiveEndPlay");
static_assert(offsetof(AoCLoginGameModeBP_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'AoCLoginGameModeBP_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function AoCLoginGameModeBP.AoCLoginGameModeBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AoCLoginGameModeBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCLoginGameModeBP_C_ReceiveTick) == 0x000004, "Wrong alignment on AoCLoginGameModeBP_C_ReceiveTick");
static_assert(sizeof(AoCLoginGameModeBP_C_ReceiveTick) == 0x000004, "Wrong size on AoCLoginGameModeBP_C_ReceiveTick");
static_assert(offsetof(AoCLoginGameModeBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AoCLoginGameModeBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AoCLoginGameModeBP.AoCLoginGameModeBP_C.VerifyLoginInformation
// 0x0028 (0x0028 - 0x0000)
struct AoCLoginGameModeBP_C_VerifyLoginInformation final
{
public:
	class FString                                 UserName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Password;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AAoCPlayerController*                   PlayerController;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCLoginGameModeBP_C_VerifyLoginInformation) == 0x000008, "Wrong alignment on AoCLoginGameModeBP_C_VerifyLoginInformation");
static_assert(sizeof(AoCLoginGameModeBP_C_VerifyLoginInformation) == 0x000028, "Wrong size on AoCLoginGameModeBP_C_VerifyLoginInformation");
static_assert(offsetof(AoCLoginGameModeBP_C_VerifyLoginInformation, UserName) == 0x000000, "Member 'AoCLoginGameModeBP_C_VerifyLoginInformation::UserName' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_VerifyLoginInformation, Password) == 0x000010, "Member 'AoCLoginGameModeBP_C_VerifyLoginInformation::Password' has a wrong offset!");
static_assert(offsetof(AoCLoginGameModeBP_C_VerifyLoginInformation, PlayerController) == 0x000020, "Member 'AoCLoginGameModeBP_C_VerifyLoginInformation::PlayerController' has a wrong offset!");

}

