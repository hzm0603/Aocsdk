#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentPaperdoll

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EquipmentPaperdoll.BP_EquipmentPaperdoll_C
// 0x0050 (0x04C8 - 0x0478)
class ABP_EquipmentPaperdoll_C final : public APaperdollBase
{
public:
	class UPointLightComponent*                   PointLight3;                                       // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight2;                                       // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall5;                                          // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall4;                                          // 0x04A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall3;                                          // 0x04A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall2;                                          // 0x04B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall1;                                          // 0x04B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Wall0;                                          // 0x04C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentPaperdoll_C">();
	}
	static class ABP_EquipmentPaperdoll_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EquipmentPaperdoll_C>();
	}
};
static_assert(alignof(ABP_EquipmentPaperdoll_C) == 0x000008, "Wrong alignment on ABP_EquipmentPaperdoll_C");
static_assert(sizeof(ABP_EquipmentPaperdoll_C) == 0x0004C8, "Wrong size on ABP_EquipmentPaperdoll_C");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, PointLight3) == 0x000478, "Member 'ABP_EquipmentPaperdoll_C::PointLight3' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, PointLight2) == 0x000480, "Member 'ABP_EquipmentPaperdoll_C::PointLight2' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, PointLight1) == 0x000488, "Member 'ABP_EquipmentPaperdoll_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, PointLight) == 0x000490, "Member 'ABP_EquipmentPaperdoll_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall5) == 0x000498, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall5' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall4) == 0x0004A0, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall4' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall3) == 0x0004A8, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall3' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall2) == 0x0004B0, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall2' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall1) == 0x0004B8, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall1' has a wrong offset!");
static_assert(offsetof(ABP_EquipmentPaperdoll_C, SM_Wall0) == 0x0004C0, "Member 'ABP_EquipmentPaperdoll_C::SM_Wall0' has a wrong offset!");

}

