#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_WeatherEventInterface

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_WeatherEventInterface.BPI_WeatherEventInterface_C.Adjust Weather
// 0x0050 (0x0050 - 0x0000)
struct BPI_WeatherEventInterface_C_Adjust_Weather final
{
public:
	double                                        Custom_Humidity_Max;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Humidity_Min;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Precipitation_Amount_Max;                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Precipitation_Amount_Min;                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Temp_Max;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Temp_Min;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_WindSpeed_Max;                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Wind_Speed_Min;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Chance_Of_Precip_Max;                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Chance_Of_Precip_Min;                       // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeatherEventInterface_C_Adjust_Weather) == 0x000008, "Wrong alignment on BPI_WeatherEventInterface_C_Adjust_Weather");
static_assert(sizeof(BPI_WeatherEventInterface_C_Adjust_Weather) == 0x000050, "Wrong size on BPI_WeatherEventInterface_C_Adjust_Weather");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Humidity_Max) == 0x000000, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Humidity_Max' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Humidity_Min) == 0x000008, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Humidity_Min' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Precipitation_Amount_Max) == 0x000010, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Precipitation_Amount_Max' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Precipitation_Amount_Min) == 0x000018, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Precipitation_Amount_Min' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Temp_Max) == 0x000020, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Temp_Max' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Temp_Min) == 0x000028, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Temp_Min' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_WindSpeed_Max) == 0x000030, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_WindSpeed_Max' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Wind_Speed_Min) == 0x000038, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Wind_Speed_Min' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Chance_Of_Precip_Max) == 0x000040, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Chance_Of_Precip_Max' has a wrong offset!");
static_assert(offsetof(BPI_WeatherEventInterface_C_Adjust_Weather, Custom_Chance_Of_Precip_Min) == 0x000048, "Member 'BPI_WeatherEventInterface_C_Adjust_Weather::Custom_Chance_Of_Precip_Min' has a wrong offset!");

// Function BPI_WeatherEventInterface.BPI_WeatherEventInterface_C.WeatherTransition
// 0x0008 (0x0008 - 0x0000)
struct BPI_WeatherEventInterface_C_WeatherTransition final
{
public:
	double                                        Transition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_WeatherEventInterface_C_WeatherTransition) == 0x000008, "Wrong alignment on BPI_WeatherEventInterface_C_WeatherTransition");
static_assert(sizeof(BPI_WeatherEventInterface_C_WeatherTransition) == 0x000008, "Wrong size on BPI_WeatherEventInterface_C_WeatherTransition");
static_assert(offsetof(BPI_WeatherEventInterface_C_WeatherTransition, Transition) == 0x000000, "Member 'BPI_WeatherEventInterface_C_WeatherTransition::Transition' has a wrong offset!");

}

