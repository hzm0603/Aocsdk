#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Foliage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Foliage_structs.hpp"


namespace SDK::Params
{

// Function Foliage.GatherableFISMC.OnFoliageSkeletalMeshComponentHitEvent
// 0x0118 (0x0118 - 0x0000)
struct GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent) == 0x000008, "Wrong alignment on GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent");
static_assert(sizeof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent) == 0x000118, "Wrong size on GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent");
static_assert(offsetof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent, HitComponent) == 0x000000, "Member 'GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent::HitComponent' has a wrong offset!");
static_assert(offsetof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent, OtherActor) == 0x000008, "Member 'GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent::OtherActor' has a wrong offset!");
static_assert(offsetof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent, OtherComponent) == 0x000010, "Member 'GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent::OtherComponent' has a wrong offset!");
static_assert(offsetof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent, NormalImpulse) == 0x000018, "Member 'GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent::NormalImpulse' has a wrong offset!");
static_assert(offsetof(GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent, Hit) == 0x000030, "Member 'GatherableFISMC_OnFoliageSkeletalMeshComponentHitEvent::Hit' has a wrong offset!");

// Function Foliage.GatherableFISMC.RegisterToSystem
// 0x0008 (0x0008 - 0x0000)
struct GatherableFISMC_RegisterToSystem final
{
public:
	class UWorld*                                 InWorld;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GatherableFISMC_RegisterToSystem) == 0x000008, "Wrong alignment on GatherableFISMC_RegisterToSystem");
static_assert(sizeof(GatherableFISMC_RegisterToSystem) == 0x000008, "Wrong size on GatherableFISMC_RegisterToSystem");
static_assert(offsetof(GatherableFISMC_RegisterToSystem, InWorld) == 0x000000, "Member 'GatherableFISMC_RegisterToSystem::InWorld' has a wrong offset!");

// Function Foliage.GatherableFISMC.UnRegisterFromSystem
// 0x0008 (0x0008 - 0x0000)
struct GatherableFISMC_UnRegisterFromSystem final
{
public:
	class UWorld*                                 InWorld;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(GatherableFISMC_UnRegisterFromSystem) == 0x000008, "Wrong alignment on GatherableFISMC_UnRegisterFromSystem");
static_assert(sizeof(GatherableFISMC_UnRegisterFromSystem) == 0x000008, "Wrong size on GatherableFISMC_UnRegisterFromSystem");
static_assert(offsetof(GatherableFISMC_UnRegisterFromSystem, InWorld) == 0x000000, "Member 'GatherableFISMC_UnRegisterFromSystem::InWorld' has a wrong offset!");

// Function Foliage.IntrepidFoliageActorSystem.AddFoliageInstanceToQuadTree
// 0x0008 (0x0008 - 0x0000)
struct IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree final
{
public:
	const class AInstancedFoliageActor*           InstancedFoliageActor;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree) == 0x000008, "Wrong alignment on IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree");
static_assert(sizeof(IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree) == 0x000008, "Wrong size on IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree");
static_assert(offsetof(IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree, InstancedFoliageActor) == 0x000000, "Member 'IntrepidFoliageActorSystem_AddFoliageInstanceToQuadTree::InstancedFoliageActor' has a wrong offset!");

// Function Foliage.IntrepidFoliageActorSystem.FindNearestFoliageActorsToTick
// 0x0028 (0x0028 - 0x0000)
struct IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick final
{
public:
	struct FVector                                PlayerPosition;                                    // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick) == 0x000008, "Wrong alignment on IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick");
static_assert(sizeof(IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick) == 0x000028, "Wrong size on IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick");
static_assert(offsetof(IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick, PlayerPosition) == 0x000000, "Member 'IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick::PlayerPosition' has a wrong offset!");
static_assert(offsetof(IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick, ReturnValue) == 0x000018, "Member 'IntrepidFoliageActorSystem_FindNearestFoliageActorsToTick::ReturnValue' has a wrong offset!");

// Function Foliage.IntrepidFoliageActorSystem.RemoveFoliageInstanceFromQuadTree
// 0x0008 (0x0008 - 0x0000)
struct IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree final
{
public:
	const class AInstancedFoliageActor*           InstancedFoliageActor;                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree) == 0x000008, "Wrong alignment on IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree");
static_assert(sizeof(IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree) == 0x000008, "Wrong size on IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree");
static_assert(offsetof(IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree, InstancedFoliageActor) == 0x000000, "Member 'IntrepidFoliageActorSystem_RemoveFoliageInstanceFromQuadTree::InstancedFoliageActor' has a wrong offset!");

// Function Foliage.IntrepidFoliageActorSystem.GetPlayerPosition
// 0x0018 (0x0018 - 0x0000)
struct IntrepidFoliageActorSystem_GetPlayerPosition final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidFoliageActorSystem_GetPlayerPosition) == 0x000008, "Wrong alignment on IntrepidFoliageActorSystem_GetPlayerPosition");
static_assert(sizeof(IntrepidFoliageActorSystem_GetPlayerPosition) == 0x000018, "Wrong size on IntrepidFoliageActorSystem_GetPlayerPosition");
static_assert(offsetof(IntrepidFoliageActorSystem_GetPlayerPosition, ReturnValue) == 0x000000, "Member 'IntrepidFoliageActorSystem_GetPlayerPosition::ReturnValue' has a wrong offset!");

// Function Foliage.IntrepidFoliageStateComponent.OnIndexedStatesChanged
// 0x0004 (0x0004 - 0x0000)
struct IntrepidFoliageStateComponent_OnIndexedStatesChanged final
{
public:
	uint16                                        Guid;                                              // 0x0000(0x0002)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedFoliageState                 NewFoliageState;                                   // 0x0002(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidFoliageStateComponent_OnIndexedStatesChanged) == 0x000002, "Wrong alignment on IntrepidFoliageStateComponent_OnIndexedStatesChanged");
static_assert(sizeof(IntrepidFoliageStateComponent_OnIndexedStatesChanged) == 0x000004, "Wrong size on IntrepidFoliageStateComponent_OnIndexedStatesChanged");
static_assert(offsetof(IntrepidFoliageStateComponent_OnIndexedStatesChanged, Guid) == 0x000000, "Member 'IntrepidFoliageStateComponent_OnIndexedStatesChanged::Guid' has a wrong offset!");
static_assert(offsetof(IntrepidFoliageStateComponent_OnIndexedStatesChanged, NewFoliageState) == 0x000002, "Member 'IntrepidFoliageStateComponent_OnIndexedStatesChanged::NewFoliageState' has a wrong offset!");

// Function Foliage.IntrepidFoliageStateComponent.OnIndexedStatesRemoved
// 0x0004 (0x0004 - 0x0000)
struct IntrepidFoliageStateComponent_OnIndexedStatesRemoved final
{
public:
	uint16                                        Guid;                                              // 0x0000(0x0002)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedFoliageState                 OldFoliageState;                                   // 0x0002(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidFoliageStateComponent_OnIndexedStatesRemoved) == 0x000002, "Wrong alignment on IntrepidFoliageStateComponent_OnIndexedStatesRemoved");
static_assert(sizeof(IntrepidFoliageStateComponent_OnIndexedStatesRemoved) == 0x000004, "Wrong size on IntrepidFoliageStateComponent_OnIndexedStatesRemoved");
static_assert(offsetof(IntrepidFoliageStateComponent_OnIndexedStatesRemoved, Guid) == 0x000000, "Member 'IntrepidFoliageStateComponent_OnIndexedStatesRemoved::Guid' has a wrong offset!");
static_assert(offsetof(IntrepidFoliageStateComponent_OnIndexedStatesRemoved, OldFoliageState) == 0x000002, "Member 'IntrepidFoliageStateComponent_OnIndexedStatesRemoved::OldFoliageState' has a wrong offset!");

// Function Foliage.IntrepidStateIFA.InterServerCompleteIFGathering
// 0x0090 (0x0090 - 0x0000)
struct IntrepidStateIFA_InterServerCompleteIFGathering final
{
public:
	struct FGuid                                  PlayerGuid;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             PlayerTransform;                                   // 0x0010(0x0060)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerInteractionDistance;                         // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         InteractionType;                                   // 0x0074(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OriginalInstanceIndex;                             // 0x0078(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageActorName;                                  // 0x007C(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageComponentUUID;                              // 0x0084(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFoliageState                                 FoliageState;                                      // 0x008C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidStateIFA_InterServerCompleteIFGathering) == 0x000010, "Wrong alignment on IntrepidStateIFA_InterServerCompleteIFGathering");
static_assert(sizeof(IntrepidStateIFA_InterServerCompleteIFGathering) == 0x000090, "Wrong size on IntrepidStateIFA_InterServerCompleteIFGathering");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, PlayerGuid) == 0x000000, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::PlayerGuid' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, PlayerTransform) == 0x000010, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::PlayerTransform' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, PlayerInteractionDistance) == 0x000070, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::PlayerInteractionDistance' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, InteractionType) == 0x000074, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::InteractionType' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, OriginalInstanceIndex) == 0x000078, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::OriginalInstanceIndex' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, FoliageActorName) == 0x00007C, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::FoliageActorName' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, FoliageComponentUUID) == 0x000084, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::FoliageComponentUUID' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerCompleteIFGathering, FoliageState) == 0x00008C, "Member 'IntrepidStateIFA_InterServerCompleteIFGathering::FoliageState' has a wrong offset!");

// Function Foliage.IntrepidStateIFA.InterServerForceAdvanceFoliageInstances
// 0x0028 (0x0028 - 0x0000)
struct IntrepidStateIFA_InterServerForceAdvanceFoliageInstances final
{
public:
	TArray<int32>                                 OriginalInstanceIndices;                           // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	EFoliageState                                 TargetFoliageState;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   FoliageActorName;                                  // 0x0014(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageComponentUUID;                              // 0x001C(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSuppressIndices;                                  // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances) == 0x000008, "Wrong alignment on IntrepidStateIFA_InterServerForceAdvanceFoliageInstances");
static_assert(sizeof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances) == 0x000028, "Wrong size on IntrepidStateIFA_InterServerForceAdvanceFoliageInstances");
static_assert(offsetof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances, OriginalInstanceIndices) == 0x000000, "Member 'IntrepidStateIFA_InterServerForceAdvanceFoliageInstances::OriginalInstanceIndices' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances, TargetFoliageState) == 0x000010, "Member 'IntrepidStateIFA_InterServerForceAdvanceFoliageInstances::TargetFoliageState' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances, FoliageActorName) == 0x000014, "Member 'IntrepidStateIFA_InterServerForceAdvanceFoliageInstances::FoliageActorName' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances, FoliageComponentUUID) == 0x00001C, "Member 'IntrepidStateIFA_InterServerForceAdvanceFoliageInstances::FoliageComponentUUID' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerForceAdvanceFoliageInstances, bSuppressIndices) == 0x000024, "Member 'IntrepidStateIFA_InterServerForceAdvanceFoliageInstances::bSuppressIndices' has a wrong offset!");

// Function Foliage.IntrepidStateIFA.InterServerInitiateIFGathering
// 0x0090 (0x0090 - 0x0000)
struct IntrepidStateIFA_InterServerInitiateIFGathering final
{
public:
	struct FGuid                                  PlayerGuid;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             PlayerTransform;                                   // 0x0010(0x0060)(ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayerInteractionDistance;                         // 0x0070(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OriginalInstanceIndex;                             // 0x0074(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageActorName;                                  // 0x0078(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageComponentUUID;                              // 0x0080(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFoliageState                                 FoliageState;                                      // 0x0088(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidStateIFA_InterServerInitiateIFGathering) == 0x000010, "Wrong alignment on IntrepidStateIFA_InterServerInitiateIFGathering");
static_assert(sizeof(IntrepidStateIFA_InterServerInitiateIFGathering) == 0x000090, "Wrong size on IntrepidStateIFA_InterServerInitiateIFGathering");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, PlayerGuid) == 0x000000, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::PlayerGuid' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, PlayerTransform) == 0x000010, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::PlayerTransform' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, PlayerInteractionDistance) == 0x000070, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::PlayerInteractionDistance' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, OriginalInstanceIndex) == 0x000074, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::OriginalInstanceIndex' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, FoliageActorName) == 0x000078, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::FoliageActorName' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, FoliageComponentUUID) == 0x000080, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::FoliageComponentUUID' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInitiateIFGathering, FoliageState) == 0x000088, "Member 'IntrepidStateIFA_InterServerInitiateIFGathering::FoliageState' has a wrong offset!");

// Function Foliage.IntrepidStateIFA.InterServerInterruptIFGathering
// 0x0024 (0x0024 - 0x0000)
struct IntrepidStateIFA_InterServerInterruptIFGathering final
{
public:
	struct FGuid                                  PlayerGuid;                                        // 0x0000(0x0010)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OriginalInstanceIndex;                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageActorName;                                  // 0x0014(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   FoliageComponentUUID;                              // 0x001C(0x0008)(ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidStateIFA_InterServerInterruptIFGathering) == 0x000004, "Wrong alignment on IntrepidStateIFA_InterServerInterruptIFGathering");
static_assert(sizeof(IntrepidStateIFA_InterServerInterruptIFGathering) == 0x000024, "Wrong size on IntrepidStateIFA_InterServerInterruptIFGathering");
static_assert(offsetof(IntrepidStateIFA_InterServerInterruptIFGathering, PlayerGuid) == 0x000000, "Member 'IntrepidStateIFA_InterServerInterruptIFGathering::PlayerGuid' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInterruptIFGathering, OriginalInstanceIndex) == 0x000010, "Member 'IntrepidStateIFA_InterServerInterruptIFGathering::OriginalInstanceIndex' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInterruptIFGathering, FoliageActorName) == 0x000014, "Member 'IntrepidStateIFA_InterServerInterruptIFGathering::FoliageActorName' has a wrong offset!");
static_assert(offsetof(IntrepidStateIFA_InterServerInterruptIFGathering, FoliageComponentUUID) == 0x00001C, "Member 'IntrepidStateIFA_InterServerInterruptIFGathering::FoliageComponentUUID' has a wrong offset!");

// Function Foliage.FoliageStatistics.FoliageOverlappingBoxCount
// 0x0050 (0x0050 - 0x0000)
struct FoliageStatistics_FoliageOverlappingBoxCount final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMesh*                      StaticMesh;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   Box;                                               // 0x0010(0x0038)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FoliageStatistics_FoliageOverlappingBoxCount) == 0x000008, "Wrong alignment on FoliageStatistics_FoliageOverlappingBoxCount");
static_assert(sizeof(FoliageStatistics_FoliageOverlappingBoxCount) == 0x000050, "Wrong size on FoliageStatistics_FoliageOverlappingBoxCount");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, WorldContextObject) == 0x000000, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, StaticMesh) == 0x000008, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::StaticMesh' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, Box) == 0x000010, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::Box' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxCount, ReturnValue) == 0x000048, "Member 'FoliageStatistics_FoliageOverlappingBoxCount::ReturnValue' has a wrong offset!");

// Function Foliage.FoliageStatistics.FoliageOverlappingBoxTransforms
// 0x0058 (0x0058 - 0x0000)
struct FoliageStatistics_FoliageOverlappingBoxTransforms final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMesh*                      StaticMesh;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                   Box;                                               // 0x0010(0x0038)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     OutTransforms;                                     // 0x0048(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageStatistics_FoliageOverlappingBoxTransforms) == 0x000008, "Wrong alignment on FoliageStatistics_FoliageOverlappingBoxTransforms");
static_assert(sizeof(FoliageStatistics_FoliageOverlappingBoxTransforms) == 0x000058, "Wrong size on FoliageStatistics_FoliageOverlappingBoxTransforms");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxTransforms, WorldContextObject) == 0x000000, "Member 'FoliageStatistics_FoliageOverlappingBoxTransforms::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxTransforms, StaticMesh) == 0x000008, "Member 'FoliageStatistics_FoliageOverlappingBoxTransforms::StaticMesh' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxTransforms, Box) == 0x000010, "Member 'FoliageStatistics_FoliageOverlappingBoxTransforms::Box' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingBoxTransforms, OutTransforms) == 0x000048, "Member 'FoliageStatistics_FoliageOverlappingBoxTransforms::OutTransforms' has a wrong offset!");

// Function Foliage.FoliageStatistics.FoliageOverlappingSphereCount
// 0x0030 (0x0030 - 0x0000)
struct FoliageStatistics_FoliageOverlappingSphereCount final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStaticMesh*                      StaticMesh;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                CenterPosition;                                    // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Radius;                                            // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FoliageStatistics_FoliageOverlappingSphereCount) == 0x000008, "Wrong alignment on FoliageStatistics_FoliageOverlappingSphereCount");
static_assert(sizeof(FoliageStatistics_FoliageOverlappingSphereCount) == 0x000030, "Wrong size on FoliageStatistics_FoliageOverlappingSphereCount");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, WorldContextObject) == 0x000000, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, StaticMesh) == 0x000008, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::StaticMesh' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, CenterPosition) == 0x000010, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::CenterPosition' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, Radius) == 0x000028, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::Radius' has a wrong offset!");
static_assert(offsetof(FoliageStatistics_FoliageOverlappingSphereCount, ReturnValue) == 0x00002C, "Member 'FoliageStatistics_FoliageOverlappingSphereCount::ReturnValue' has a wrong offset!");

// Function Foliage.InteractiveFoliageActor.CapsuleTouched
// 0x0108 (0x0108 - 0x0000)
struct InteractiveFoliageActor_CapsuleTouched final
{
public:
	class UPrimitiveComponent*                    OverlappedComp;                                    // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             OverlapInfo;                                       // 0x0020(0x00E8)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(InteractiveFoliageActor_CapsuleTouched) == 0x000008, "Wrong alignment on InteractiveFoliageActor_CapsuleTouched");
static_assert(sizeof(InteractiveFoliageActor_CapsuleTouched) == 0x000108, "Wrong size on InteractiveFoliageActor_CapsuleTouched");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OverlappedComp) == 0x000000, "Member 'InteractiveFoliageActor_CapsuleTouched::OverlappedComp' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, Other) == 0x000008, "Member 'InteractiveFoliageActor_CapsuleTouched::Other' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OtherComp) == 0x000010, "Member 'InteractiveFoliageActor_CapsuleTouched::OtherComp' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OtherBodyIndex) == 0x000018, "Member 'InteractiveFoliageActor_CapsuleTouched::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, bFromSweep) == 0x00001C, "Member 'InteractiveFoliageActor_CapsuleTouched::bFromSweep' has a wrong offset!");
static_assert(offsetof(InteractiveFoliageActor_CapsuleTouched, OverlapInfo) == 0x000020, "Member 'InteractiveFoliageActor_CapsuleTouched::OverlapInfo' has a wrong offset!");

// Function Foliage.ProceduralFoliageSpawner.Simulate
// 0x0004 (0x0004 - 0x0000)
struct ProceduralFoliageSpawner_Simulate final
{
public:
	int32                                         NumSteps;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(ProceduralFoliageSpawner_Simulate) == 0x000004, "Wrong alignment on ProceduralFoliageSpawner_Simulate");
static_assert(sizeof(ProceduralFoliageSpawner_Simulate) == 0x000004, "Wrong size on ProceduralFoliageSpawner_Simulate");
static_assert(offsetof(ProceduralFoliageSpawner_Simulate, NumSteps) == 0x000000, "Member 'ProceduralFoliageSpawner_Simulate::NumSteps' has a wrong offset!");

}

