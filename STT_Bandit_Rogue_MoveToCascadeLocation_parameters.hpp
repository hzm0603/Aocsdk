#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Bandit_Rogue_MoveToCascadeLocation

#include "Basic.hpp"

#include "StateTreeModule_structs.hpp"


namespace SDK::Params
{

// Function STT_Bandit_Rogue_MoveToCascadeLocation.STT_Bandit_Rogue_MoveToCascadeLocation_C.ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation
// 0x0050 (0x0050 - 0x0000)
struct STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x0010(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPCPawn_C*                             K2Node_DynamicCast_AsNPCPawn;                      // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation) == 0x000008, "Wrong alignment on STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation");
static_assert(sizeof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation) == 0x000050, "Wrong size on STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation, EntryPoint) == 0x000000, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation, K2Node_Event_Transition) == 0x000010, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation, K2Node_DynamicCast_AsNPCPawn) == 0x000040, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation::K2Node_DynamicCast_AsNPCPawn' has a wrong offset!");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ExecuteUbergraph_STT_Bandit_Rogue_MoveToCascadeLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function STT_Bandit_Rogue_MoveToCascadeLocation.STT_Bandit_Rogue_MoveToCascadeLocation_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_Bandit_Rogue_MoveToCascadeLocation_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

}

