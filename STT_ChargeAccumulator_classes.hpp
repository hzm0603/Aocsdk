#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_ChargeAccumulator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STT_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STT_ChargeAccumulator.STT_ChargeAccumulator_C
// 0x0020 (0x0098 - 0x0078)
class USTT_ChargeAccumulator_C final : public USTT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ANPCPawn_C*                             Agent;                                             // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FName                                   Identifier;                                        // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number;                                            // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetAccumulator;                                  // 0x0094(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReRoll;                                            // 0x0095(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_STT_ChargeAccumulator(int32 EntryPoint);
	void ReceiveLatentEnterState(const struct FStateTreeTransitionResult& Transition);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STT_ChargeAccumulator_C">();
	}
	static class USTT_ChargeAccumulator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTT_ChargeAccumulator_C>();
	}
};
static_assert(alignof(USTT_ChargeAccumulator_C) == 0x000008, "Wrong alignment on USTT_ChargeAccumulator_C");
static_assert(sizeof(USTT_ChargeAccumulator_C) == 0x000098, "Wrong size on USTT_ChargeAccumulator_C");
static_assert(offsetof(USTT_ChargeAccumulator_C, UberGraphFrame) == 0x000078, "Member 'USTT_ChargeAccumulator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USTT_ChargeAccumulator_C, Agent) == 0x000080, "Member 'USTT_ChargeAccumulator_C::Agent' has a wrong offset!");
static_assert(offsetof(USTT_ChargeAccumulator_C, Identifier) == 0x000088, "Member 'USTT_ChargeAccumulator_C::Identifier' has a wrong offset!");
static_assert(offsetof(USTT_ChargeAccumulator_C, Number) == 0x000090, "Member 'USTT_ChargeAccumulator_C::Number' has a wrong offset!");
static_assert(offsetof(USTT_ChargeAccumulator_C, ResetAccumulator) == 0x000094, "Member 'USTT_ChargeAccumulator_C::ResetAccumulator' has a wrong offset!");
static_assert(offsetof(USTT_ChargeAccumulator_C, ReRoll) == 0x000095, "Member 'USTT_ChargeAccumulator_C::ReRoll' has a wrong offset!");

}

