#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_FloatDifference

#include "Basic.hpp"

#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STC_FloatDifference.STC_FloatDifference_C.Print
// 0x0030 (0x0030 - 0x0000)
struct STC_FloatDifference_C_Print final
{
public:
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(STC_FloatDifference_C_Print) == 0x000008, "Wrong alignment on STC_FloatDifference_C_Print");
static_assert(sizeof(STC_FloatDifference_C_Print) == 0x000030, "Wrong size on STC_FloatDifference_C_Print");
static_assert(offsetof(STC_FloatDifference_C_Print, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000000, "Member 'STC_FloatDifference_C_Print::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_Print, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000010, "Member 'STC_FloatDifference_C_Print::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_Print, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x000020, "Member 'STC_FloatDifference_C_Print::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");

// Function STC_FloatDifference.STC_FloatDifference_C.ReceiveTestCondition
// 0x02B0 (0x02B0 - 0x0000)
struct STC_FloatDifference_C_ReceiveTestCondition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Stored_Difference;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stored_Right;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stored_Left;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue;           // 0x0030(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue_1;         // 0x00F8(0x00C8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue_2;         // 0x01C8(0x00C8)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_2;            // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x2];                                      // 0x0292(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x029A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29B[0x5];                                      // 0x029B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STC_FloatDifference_C_ReceiveTestCondition) == 0x000008, "Wrong alignment on STC_FloatDifference_C_ReceiveTestCondition");
static_assert(sizeof(STC_FloatDifference_C_ReceiveTestCondition) == 0x0002B0, "Wrong size on STC_FloatDifference_C_ReceiveTestCondition");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, ReturnValue) == 0x000000, "Member 'STC_FloatDifference_C_ReceiveTestCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, Stored_Difference) == 0x000008, "Member 'STC_FloatDifference_C_ReceiveTestCondition::Stored_Difference' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, Stored_Right) == 0x000010, "Member 'STC_FloatDifference_C_ReceiveTestCondition::Stored_Right' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, Stored_Left) == 0x000018, "Member 'STC_FloatDifference_C_ReceiveTestCondition::Stored_Left' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_MakeLiteralByte_ReturnValue) == 0x000020, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000021, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000024, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000028, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00002D, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EvaluateExpression_ReturnValue) == 0x000030, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EvaluateExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EvaluateExpression_ReturnValue_1) == 0x0000F8, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EvaluateExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C0, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EvaluateExpression_ReturnValue_2) == 0x0001C8, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EvaluateExpression_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000290, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_MakeLiteralByte_ReturnValue_2) == 0x000291, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_MakeLiteralByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000294, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, K2Node_SwitchEnum_CmpSuccess) == 0x000298, "Member 'STC_FloatDifference_C_ReceiveTestCondition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000299, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00029A, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002A8, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002A9, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0002AA, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002AB, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_FloatDifference_C_ReceiveTestCondition, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0002AC, "Member 'STC_FloatDifference_C_ReceiveTestCondition::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");

}

