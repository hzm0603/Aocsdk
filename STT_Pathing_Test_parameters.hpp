#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_Pathing_Test

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "StateTreeModule_structs.hpp"


namespace SDK::Params
{

// Function STT_Pathing_Test.STT_Pathing_Test_C.ExecuteUbergraph_STT_Pathing_Test
// 0x0098 (0x0098 - 0x0000)
struct STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPathFollowingResult                          UniqueObjectNameForCooking_Result;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          UniqueObjectNameForCooking_AIController;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPathFollowingResult Result, class AAIController* AIController)> UniqueObjectNameForCooking_OutputDelegate; // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate_1;       // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x0030(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         K2Node_DynamicCast_AsBase_Character;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0080(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAITask_MoveTo*                         CallFunc_AIMoveTo_ReturnValue;                     // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test) == 0x000008, "Wrong alignment on STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test");
static_assert(sizeof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test) == 0x000098, "Wrong size on STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, EntryPoint) == 0x000000, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, UniqueObjectNameForCooking_Result) == 0x000004, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::UniqueObjectNameForCooking_Result' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, UniqueObjectNameForCooking_AIController) == 0x000008, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::UniqueObjectNameForCooking_AIController' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, UniqueObjectNameForCooking_OutputDelegate) == 0x000010, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::UniqueObjectNameForCooking_OutputDelegate' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, UniqueObjectNameForCooking_OutputDelegate_1) == 0x000020, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::UniqueObjectNameForCooking_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, K2Node_Event_Transition) == 0x000030, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, CallFunc_GetOuterObject_ReturnValue) == 0x000060, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, K2Node_DynamicCast_AsBase_Character) == 0x000068, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, CallFunc_GetAIController_ReturnValue) == 0x000078, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, K2Node_Event_DeltaTime) == 0x000080, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, CallFunc_AIMoveTo_ReturnValue) == 0x000088, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::CallFunc_AIMoveTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'STT_Pathing_Test_C_ExecuteUbergraph_STT_Pathing_Test::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function STT_Pathing_Test.STT_Pathing_Test_C.OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D
// 0x0010 (0x0010 - 0x0000)
struct STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D final
{
public:
	EPathFollowingResult                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D) == 0x000008, "Wrong alignment on STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D");
static_assert(sizeof(STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D) == 0x000010, "Wrong size on STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D");
static_assert(offsetof(STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D, Result) == 0x000000, "Member 'STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D::Result' has a wrong offset!");
static_assert(offsetof(STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D, AIController) == 0x000008, "Member 'STT_Pathing_Test_C_OnMoveFinished_310A25BA45222B3C7E24C187F9FE5F0D::AIController' has a wrong offset!");

// Function STT_Pathing_Test.STT_Pathing_Test_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_Pathing_Test_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_Pathing_Test_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_Pathing_Test_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_Pathing_Test_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_Pathing_Test_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_Pathing_Test_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_Pathing_Test_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_Pathing_Test.STT_Pathing_Test_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_Pathing_Test_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_Pathing_Test_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_Pathing_Test_C_ReceiveLatentTick");
static_assert(sizeof(STT_Pathing_Test_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_Pathing_Test_C_ReceiveLatentTick");
static_assert(offsetof(STT_Pathing_Test_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_Pathing_Test_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

}

