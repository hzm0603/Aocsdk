#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandscapeBrushRoadIntersection

#include "Basic.hpp"

#include "BP_LandscapeBrushRoadIntersection_classes.hpp"
#include "BP_LandscapeBrushRoadIntersection_parameters.hpp"


namespace SDK
{

// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Add Base Visible Spline Meshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Add_Base_Visible_Spline_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Add Base Visible Spline Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Add Grass Hiding Spline Meshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Add_Grass_Hiding_Spline_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Add Grass Hiding Spline Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Add Middle Path Decals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Add_Middle_Path_Decals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Add Middle Path Decals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Adjust Connected Road Endpoints
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Adjust_Connected_Road_Endpoints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Adjust Connected Road Endpoints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Apply Set Dressing
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Apply_Set_Dressing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Apply Set Dressing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Assign By Proximity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Assign_By_Proximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Assign By Proximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Assign By Proximity Array
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_LandscapeBrushRoad_C*>&Road_Actors                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_LandscapeBrushRoadIntersection_C::Assign_By_Proximity_Array(TArray<class ABP_LandscapeBrushRoad_C*>& Road_Actors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Assign By Proximity Array");

	Params::BP_LandscapeBrushRoadIntersection_C_Assign_By_Proximity_Array Parms{};

	Parms.Road_Actors = std::move(Road_Actors);

	UObject::ProcessEvent(Func, &Parms);

	Road_Actors = std::move(Parms.Road_Actors);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Build Intersection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Build_Intersection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Build Intersection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Build Landscape Deforming Dynamic Mesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Build_Landscape_Deforming_Dynamic_Mesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Build Landscape Deforming Dynamic Mesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Build Splines
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::Build_Splines(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Build Splines");

	Params::BP_LandscapeBrushRoadIntersection_C_Build_Splines Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Capture Minimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Capturing                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Height_Offset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Width_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::Capture_Minimap(bool Is_Capturing, double Height_Offset, double Width_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Capture Minimap");

	Params::BP_LandscapeBrushRoadIntersection_C_Capture_Minimap Parms{};

	Parms.Is_Capturing = Is_Capturing;
	Parms.Height_Offset = Height_Offset;
	Parms.Width_Scale = Width_Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Capture Minimap Internal
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Is_Capturing                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Height_Offset                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Width_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::Capture_Minimap_Internal(bool Is_Capturing, double Height_Offset, double Width_Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Capture Minimap Internal");

	Params::BP_LandscapeBrushRoadIntersection_C_Capture_Minimap_Internal Parms{};

	Parms.Is_Capturing = Is_Capturing;
	Parms.Height_Offset = Height_Offset;
	Parms.Width_Scale = Width_Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Capture Off
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Capture_Off()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Capture Off");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Capture On
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Capture_On()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Capture On");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Clear All PCG Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Clear_All_PCG_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Clear All PCG Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.disable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::disable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "disable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Disable Auto Update Terrain for Self and Connected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Disable_Auto_Update_Terrain_for_Self_and_Connected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Disable Auto Update Terrain for Self and Connected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.EditorAssignByProximityNative
// (Event, Public, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::EditorAssignByProximityNative()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "EditorAssignByProximityNative");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.EditorPrepForSceneCapture
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// const bool                              bIsCapturing                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const class FName                       LayerName                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::EditorPrepForSceneCapture(const bool bIsCapturing, const class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "EditorPrepForSceneCapture");

	Params::BP_LandscapeBrushRoadIntersection_C_EditorPrepForSceneCapture Parms{};

	Parms.bIsCapturing = bIsCapturing;
	Parms.LayerName = LayerName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Enable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Enable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Enable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Enable Auto Update Terrain for Self and Connected
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Enable_Auto_Update_Terrain_for_Self_and_Connected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Enable Auto Update Terrain for Self and Connected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.ExecuteUbergraph_BP_LandscapeBrushRoadIntersection
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::ExecuteUbergraph_BP_LandscapeBrushRoadIntersection(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "ExecuteUbergraph_BP_LandscapeBrushRoadIntersection");

	Params::BP_LandscapeBrushRoadIntersection_C_ExecuteUbergraph_BP_LandscapeBrushRoadIntersection Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Get Connected Roads Settings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Get_Connected_Roads_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Get Connected Roads Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Manage Visible Spline Top Meshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Full_Refresh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::Manage_Visible_Spline_Top_Meshes(bool Full_Refresh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Manage Visible Spline Top Meshes");

	Params::BP_LandscapeBrushRoadIntersection_C_Manage_Visible_Spline_Top_Meshes Parms{};

	Parms.Full_Refresh = Full_Refresh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.OnRep_Connected Roads
// (BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::OnRep_Connected_Roads()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "OnRep_Connected Roads");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.PrepForSceneCapture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsCapturing                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             LayerName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::PrepForSceneCapture(bool IsCapturing, class FName LayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "PrepForSceneCapture");

	Params::BP_LandscapeBrushRoadIntersection_C_PrepForSceneCapture Parms{};

	Parms.IsCapturing = IsCapturing;
	Parms.LayerName = LayerName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.ReArrange Roads Arrays
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::ReArrange_Roads_Arrays()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "ReArrange Roads Arrays");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LandscapeBrushRoadIntersection_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "ReceiveTick");

	Params::BP_LandscapeBrushRoadIntersection_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Refresh Is Road End Array
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Refresh_Is_Road_End_Array()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Refresh Is Road End Array");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Refresh Road Connections
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Refresh_Road_Connections()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Refresh Road Connections");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Update Base Visible Spline Meshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Update_Base_Visible_Spline_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Update Base Visible Spline Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Update Grass Hiding Spline Meshes
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Update_Grass_Hiding_Spline_Meshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Update Grass Hiding Spline Meshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Update Intersection
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Update_Intersection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Update Intersection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.Update PCG Data
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::Update_PCG_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "Update PCG Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LandscapeBrushRoadIntersection.BP_LandscapeBrushRoadIntersection_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LandscapeBrushRoadIntersection_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LandscapeBrushRoadIntersection_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

