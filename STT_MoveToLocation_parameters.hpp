#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_MoveToLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "AIModule_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STT_MoveToLocation.STT_MoveToLocation_C.ExecuteUbergraph_STT_MoveToLocation
// 0x02F8 (0x02F8 - 0x0000)
struct STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition_1;                         // 0x0020(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x0058(0x002E)(ConstParm, NoDestructor)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue;           // 0x00A8(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue_1;         // 0x0170(0x00C8)()
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue;               // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x023C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue_1;            // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPathFollowingRequestResult                   CallFunc_MoveToLocation_ReturnValue_1;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ANPCPawn_C*                             K2Node_DynamicCast_AsNPCPawn;                      // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ARecastNavMesh*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_ProjectPointToNavigation_ProjectedLocation; // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_ProjectPointToNavigation_ReturnValue;  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x3];                                      // 0x02B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_OriginalSpeed_ImplicitCast;     // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast_1; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1;    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation) == 0x000008, "Wrong alignment on STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation");
static_assert(sizeof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation) == 0x0002F8, "Wrong size on STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, EntryPoint) == 0x000000, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_Event_Transition_1) == 0x000020, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_Event_Transition_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GetAIController_ReturnValue) == 0x000050, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_Event_Transition) == 0x000058, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000088, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_SwitchEnum_CmpSuccess) == 0x000098, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MakeLiteralByte_ReturnValue) == 0x000099, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00009C, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000A0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_EvaluateExpression_ReturnValue) == 0x0000A8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_EvaluateExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_EvaluateExpression_ReturnValue_1) == 0x000170, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_EvaluateExpression_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MoveToLocation_ReturnValue) == 0x000238, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MoveToLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000239, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_SwitchEnum_CmpSuccess_1) == 0x00023A, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_IsValid_ReturnValue) == 0x00023B, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_Event_DeltaTime) == 0x00023C, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_SwitchEnum_CmpSuccess_2) == 0x000240, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_BreakRotator_Roll) == 0x000244, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_BreakRotator_Pitch) == 0x000248, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_BreakRotator_Yaw) == 0x00024C, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000250, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GetAIController_ReturnValue_1) == 0x000258, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GetAIController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MoveToLocation_ReturnValue_1) == 0x000260, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MoveToLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_SwitchEnum_CmpSuccess_3) == 0x000261, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GetOuterObject_ReturnValue) == 0x000268, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_DynamicCast_AsNPCPawn) == 0x000270, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_DynamicCast_AsNPCPawn' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GetActorOfClass_ReturnValue) == 0x000280, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_K2_ProjectPointToNavigation_ProjectedLocation) == 0x000288, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_K2_ProjectPointToNavigation_ProjectedLocation' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_K2_ProjectPointToNavigation_ReturnValue) == 0x0002A0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_K2_ProjectPointToNavigation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002B0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0002B8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x0002BC, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast) == 0x0002C0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0002C8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_VariableSet_OriginalSpeed_ImplicitCast) == 0x0002D0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_VariableSet_OriginalSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x0002D8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002E0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002E8, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast_1) == 0x0002F0, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::CallFunc_MoveToLocation_AcceptanceRadius_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1) == 0x0002F4, "Member 'STT_MoveToLocation_C_ExecuteUbergraph_STT_MoveToLocation::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast_1' has a wrong offset!");

// Function STT_MoveToLocation.STT_MoveToLocation_C.ReceiveExitState
// 0x002E (0x002E - 0x0000)
struct STT_MoveToLocation_C_ReceiveExitState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_MoveToLocation_C_ReceiveExitState) == 0x000002, "Wrong alignment on STT_MoveToLocation_C_ReceiveExitState");
static_assert(sizeof(STT_MoveToLocation_C_ReceiveExitState) == 0x00002E, "Wrong size on STT_MoveToLocation_C_ReceiveExitState");
static_assert(offsetof(STT_MoveToLocation_C_ReceiveExitState, Transition) == 0x000000, "Member 'STT_MoveToLocation_C_ReceiveExitState::Transition' has a wrong offset!");

// Function STT_MoveToLocation.STT_MoveToLocation_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_MoveToLocation_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_MoveToLocation_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_MoveToLocation_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_MoveToLocation_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_MoveToLocation_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_MoveToLocation_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_MoveToLocation_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_MoveToLocation.STT_MoveToLocation_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_MoveToLocation_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_MoveToLocation_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_MoveToLocation_C_ReceiveLatentTick");
static_assert(sizeof(STT_MoveToLocation_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_MoveToLocation_C_ReceiveLatentTick");
static_assert(offsetof(STT_MoveToLocation_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_MoveToLocation_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

// Function STT_MoveToLocation.STT_MoveToLocation_C.RotateToTarget
// 0x0190 (0x0190 - 0x0000)
struct STT_MoveToLocation_C_RotateToTarget final
{
public:
	struct FVector                                TargetVec;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        YawDelta;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RealYawDelta;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawDiff;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_MoveToLocation_C_RotateToTarget) == 0x000008, "Wrong alignment on STT_MoveToLocation_C_RotateToTarget");
static_assert(sizeof(STT_MoveToLocation_C_RotateToTarget) == 0x000190, "Wrong size on STT_MoveToLocation_C_RotateToTarget");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, TargetVec) == 0x000000, "Member 'STT_MoveToLocation_C_RotateToTarget::TargetVec' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, Source) == 0x000018, "Member 'STT_MoveToLocation_C_RotateToTarget::Source' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, YawDelta) == 0x000020, "Member 'STT_MoveToLocation_C_RotateToTarget::YawDelta' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, RealYawDelta) == 0x000028, "Member 'STT_MoveToLocation_C_RotateToTarget::RealYawDelta' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, YawDiff) == 0x000030, "Member 'STT_MoveToLocation_C_RotateToTarget::YawDiff' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Roll) == 0x000054, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Pitch) == 0x000058, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Yaw) == 0x00005C, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000090, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakVector_X) == 0x0000A8, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Roll_1) == 0x0000C0, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Pitch_1) == 0x0000C4, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Yaw_1) == 0x0000C8, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_MakeRotFromX_ReturnValue) == 0x0000E8, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Roll_2) == 0x000108, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Pitch_2) == 0x00010C, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_BreakRotator_Yaw_2) == 0x000110, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000130, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000138, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Abs_ReturnValue) == 0x000148, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_FMax_ReturnValue) == 0x000160, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_FMin_ReturnValue) == 0x000168, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000170, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000180, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_MoveToLocation_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000188, "Member 'STT_MoveToLocation_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

