#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipRepair

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TooltipRepair.WBP_TooltipRepair_C
// 0x0028 (0x0340 - 0x0318)
class UWBP_TooltipRepair_C final : public URepairTooltip
{
public:
	class UImage*                                 BackgroundImage;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ExperienceBarFrame;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TooltipBorder;                                     // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           TooltipContentBox;                                 // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TooltipHeaderAccent;                               // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TooltipRepair_C">();
	}
	static class UWBP_TooltipRepair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TooltipRepair_C>();
	}
};
static_assert(alignof(UWBP_TooltipRepair_C) == 0x000008, "Wrong alignment on UWBP_TooltipRepair_C");
static_assert(sizeof(UWBP_TooltipRepair_C) == 0x000340, "Wrong size on UWBP_TooltipRepair_C");
static_assert(offsetof(UWBP_TooltipRepair_C, BackgroundImage) == 0x000318, "Member 'UWBP_TooltipRepair_C::BackgroundImage' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipRepair_C, ExperienceBarFrame) == 0x000320, "Member 'UWBP_TooltipRepair_C::ExperienceBarFrame' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipRepair_C, TooltipBorder) == 0x000328, "Member 'UWBP_TooltipRepair_C::TooltipBorder' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipRepair_C, TooltipContentBox) == 0x000330, "Member 'UWBP_TooltipRepair_C::TooltipContentBox' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipRepair_C, TooltipHeaderAccent) == 0x000338, "Member 'UWBP_TooltipRepair_C::TooltipHeaderAccent' has a wrong offset!");

}

