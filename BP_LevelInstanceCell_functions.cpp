#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LevelInstanceCell

#include "Basic.hpp"

#include "BP_LevelInstanceCell_classes.hpp"
#include "BP_LevelInstanceCell_parameters.hpp"


namespace SDK
{

// Function BP_LevelInstanceCell.BP_LevelInstanceCell_C.Find Brush Manager In Current Level
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_LandscapeBrushManager_C**     BrushManager                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LevelInstanceCell_C::Find_Brush_Manager_In_Current_Level(class ABP_LandscapeBrushManager_C** BrushManager, bool* Found)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelInstanceCell_C", "Find Brush Manager In Current Level");

	Params::BP_LevelInstanceCell_C_Find_Brush_Manager_In_Current_Level Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BrushManager != nullptr)
		*BrushManager = Parms.BrushManager;

	if (Found != nullptr)
		*Found = Parms.Found;
}


// Function BP_LevelInstanceCell.BP_LevelInstanceCell_C.Request Update From Landscape
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelInstanceCell_C::Request_Update_From_Landscape()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelInstanceCell_C", "Request Update From Landscape");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LevelInstanceCell.BP_LevelInstanceCell_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LevelInstanceCell_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LevelInstanceCell_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

