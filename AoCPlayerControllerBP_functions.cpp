#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AoCPlayerControllerBP

#include "Basic.hpp"

#include "AoCPlayerControllerBP_classes.hpp"
#include "AoCPlayerControllerBP_parameters.hpp"


namespace SDK
{

// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Timeline_1 old__UpdateFunc
// (BlueprintEvent)

void AAoCPlayerControllerBP_C::Timeline_1_old__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Timeline_1 old__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Timeline_1 old__FinishedFunc
// (BlueprintEvent)

void AAoCPlayerControllerBP_C::Timeline_1_old__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Timeline_1 old__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.TeleportStartedBP
// (BlueprintEvent)

void AAoCPlayerControllerBP_C::TeleportStartedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "TeleportStartedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.TargetMember
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FAoCPartyMember&           Member                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AAoCPlayerControllerBP_C::TargetMember(const struct FAoCPartyMember& Member)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "TargetMember");

	Params::AoCPlayerControllerBP_C_TargetMember Parms{};

	Parms.Member = std::move(Member);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.TalkToNPCClientCallback
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPCPawn_C*                       NPC_ToTalkTo                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABaseCharacter*                   BaseChar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::TalkToNPCClientCallback(class ANPCPawn_C* NPC_ToTalkTo, class ABaseCharacter* BaseChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "TalkToNPCClientCallback");

	Params::AoCPlayerControllerBP_C_TalkToNPCClientCallback Parms{};

	Parms.NPC_ToTalkTo = NPC_ToTalkTo;
	Parms.BaseChar = BaseChar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.StopTalkToNPClientCallback
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPCPawn_C*                       NPC_Talking_With                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class ABaseCharacter*                   BaseChar                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::StopTalkToNPClientCallback(class ANPCPawn_C* NPC_Talking_With, class ABaseCharacter* BaseChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "StopTalkToNPClientCallback");

	Params::AoCPlayerControllerBP_C_StopTalkToNPClientCallback Parms{};

	Parms.NPC_Talking_With = NPC_Talking_With;
	Parms.BaseChar = BaseChar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.SpawnPFXAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Activation_Delay                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UParticleSystem*                  ParticleToSpawn                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoDestroy                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AutoActivate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::SpawnPFXAtLocation(double Activation_Delay, class UParticleSystem* ParticleToSpawn, const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale, bool AutoDestroy, bool AutoActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "SpawnPFXAtLocation");

	Params::AoCPlayerControllerBP_C_SpawnPFXAtLocation Parms{};

	Parms.Activation_Delay = Activation_Delay;
	Parms.ParticleToSpawn = ParticleToSpawn;
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Scale = std::move(Scale);
	Parms.AutoDestroy = AutoDestroy;
	Parms.AutoActivate = AutoActivate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.SpawnDecalAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInterface*               Decal_Material                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Decal_Size                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  Life_Span                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FadeIn_                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    FadeOut_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeInDelay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeInDuration                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeOutDelay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  FadeOutDuration                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMeteorStorm                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::SpawnDecalAtLocation(class UMaterialInterface* Decal_Material, const struct FVector& Decal_Size, const struct FVector& Location, const struct FRotator& Rotation, double Life_Span, bool FadeIn_, bool FadeOut_, double FadeInDelay, double FadeInDuration, double FadeOutDelay, double FadeOutDuration, bool isMeteorStorm)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "SpawnDecalAtLocation");

	Params::AoCPlayerControllerBP_C_SpawnDecalAtLocation Parms{};

	Parms.Decal_Material = Decal_Material;
	Parms.Decal_Size = std::move(Decal_Size);
	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Life_Span = Life_Span;
	Parms.FadeIn_ = FadeIn_;
	Parms.FadeOut_ = FadeOut_;
	Parms.FadeInDelay = FadeInDelay;
	Parms.FadeInDuration = FadeInDuration;
	Parms.FadeOutDelay = FadeOutDelay;
	Parms.FadeOutDuration = FadeOutDuration;
	Parms.isMeteorStorm = isMeteorStorm;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.SpawnActorAtLocation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AttachToCharacter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABaseCharacter*                   OwningCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Attach_Socket                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FVector&                   Spawn_Location                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const struct FRotator&                  Spawn_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const struct FVector&                   Spawn_Scale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ClassToSpawn                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::SpawnActorAtLocation(bool AttachToCharacter, class ABaseCharacter* OwningCharacter, class FName Attach_Socket, const struct FVector& Spawn_Location, const struct FRotator& Spawn_Rotation, const struct FVector& Spawn_Scale, class UClass* ClassToSpawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "SpawnActorAtLocation");

	Params::AoCPlayerControllerBP_C_SpawnActorAtLocation Parms{};

	Parms.AttachToCharacter = AttachToCharacter;
	Parms.OwningCharacter = OwningCharacter;
	Parms.Attach_Socket = Attach_Socket;
	Parms.Spawn_Location = std::move(Spawn_Location);
	Parms.Spawn_Rotation = std::move(Spawn_Rotation);
	Parms.Spawn_Scale = std::move(Spawn_Scale);
	Parms.ClassToSpawn = ClassToSpawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Show New Bot UI
// (BlueprintCallable, BlueprintEvent)

void AAoCPlayerControllerBP_C::Show_New_Bot_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Show New Bot UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Set Hide All Characters In World
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHide                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AActor*>&                  IgnoreActors                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class ABaseCharacter*>*          OutCharacters                                          (Parm, OutParm)

void AAoCPlayerControllerBP_C::Set_Hide_All_Characters_In_World(bool bHide, TArray<class AActor*>& IgnoreActors, TArray<class ABaseCharacter*>* OutCharacters)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Set Hide All Characters In World");

	Params::AoCPlayerControllerBP_C_Set_Hide_All_Characters_In_World Parms{};

	Parms.bHide = bHide;
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);

	IgnoreActors = std::move(Parms.IgnoreActors);

	if (OutCharacters != nullptr)
		*OutCharacters = std::move(Parms.OutCharacters);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.OpenFastTravelWidget
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPCPawn_C*                       FastTravelNPC                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::OpenFastTravelWidget(class ANPCPawn_C* FastTravelNPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "OpenFastTravelWidget");

	Params::AoCPlayerControllerBP_C_OpenFastTravelWidget Parms{};

	Parms.FastTravelNPC = FastTravelNPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.OnUpdatePlayerItemsBP
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EItemLocation                           Loc_0                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::OnUpdatePlayerItemsBP(EItemLocation Loc_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "OnUpdatePlayerItemsBP");

	Params::AoCPlayerControllerBP_C_OnUpdatePlayerItemsBP Parms{};

	Parms.Loc_0 = Loc_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Old Bot UI
// (BlueprintCallable, BlueprintEvent)

void AAoCPlayerControllerBP_C::Old_Bot_UI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Old Bot UI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.LogRegisteredEmail
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    Email                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::LogRegisteredEmail(const class FString& Email)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "LogRegisteredEmail");

	Params::AoCPlayerControllerBP_C_LogRegisteredEmail Parms{};

	Parms.Email = std::move(Email);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_ToggleFPS_UniqueObjectNameForCooking_5
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_ToggleFPS_UniqueObjectNameForCooking_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_ToggleFPS_UniqueObjectNameForCooking_5");

	Params::AoCPlayerControllerBP_C_InpActEvt_ToggleFPS_UniqueObjectNameForCooking_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_PageUp_UniqueObjectNameForCooking_15
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_PageUp_UniqueObjectNameForCooking_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_PageUp_UniqueObjectNameForCooking_15");

	Params::AoCPlayerControllerBP_C_InpActEvt_PageUp_UniqueObjectNameForCooking_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_Ctrl+Alt+Shift_P_UniqueObjectNameForCooking_3
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_Ctrl_Alt_Shift_P_UniqueObjectNameForCooking_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_Ctrl+Alt+Shift_P_UniqueObjectNameForCooking_3");

	Params::AoCPlayerControllerBP_C_InpActEvt_Ctrl_Alt_Shift_P_UniqueObjectNameForCooking_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_Ctrl+Alt+Shift_N_UniqueObjectNameForCooking_4
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_Ctrl_Alt_Shift_N_UniqueObjectNameForCooking_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_Ctrl+Alt+Shift_N_UniqueObjectNameForCooking_4");

	Params::AoCPlayerControllerBP_C_InpActEvt_Ctrl_Alt_Shift_N_UniqueObjectNameForCooking_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_Ctrl+Alt+Shift_M_UniqueObjectNameForCooking_6
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_Ctrl_Alt_Shift_M_UniqueObjectNameForCooking_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_Ctrl+Alt+Shift_M_UniqueObjectNameForCooking_6");

	Params::AoCPlayerControllerBP_C_InpActEvt_Ctrl_Alt_Shift_M_UniqueObjectNameForCooking_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InpActEvt_Comma_UniqueObjectNameForCooking_12
// (BlueprintEvent)
// Parameters:
// const struct FKey&                      Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::InpActEvt_Comma_UniqueObjectNameForCooking_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InpActEvt_Comma_UniqueObjectNameForCooking_12");

	Params::AoCPlayerControllerBP_C_InpActEvt_Comma_UniqueObjectNameForCooking_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.InitializeHUDModeForInGame
// (Public, BlueprintCallable, BlueprintEvent)

void AAoCPlayerControllerBP_C::InitializeHUDModeForInGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "InitializeHUDModeForInGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.HandleLocationTimer
// (BlueprintCallable, BlueprintEvent)

void AAoCPlayerControllerBP_C::HandleLocationTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "HandleLocationTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.GetInputDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector*                         InputDir                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::GetInputDirection(struct FVector* InputDir)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "GetInputDirection");

	Params::AoCPlayerControllerBP_C_GetInputDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InputDir != nullptr)
		*InputDir = std::move(Parms.InputDir);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.ExecuteUbergraph_AoCPlayerControllerBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::ExecuteUbergraph_AoCPlayerControllerBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "ExecuteUbergraph_AoCPlayerControllerBP");

	Params::AoCPlayerControllerBP_C_ExecuteUbergraph_AoCPlayerControllerBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.DisplaySiegeVictoryScreenBP
// (BlueprintEvent)
// Parameters:
// ESiegeTeamType                          VictorTeamType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::DisplaySiegeVictoryScreenBP(ESiegeTeamType VictorTeamType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "DisplaySiegeVictoryScreenBP");

	Params::AoCPlayerControllerBP_C_DisplaySiegeVictoryScreenBP Parms{};

	Parms.VictorTeamType = VictorTeamType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.DebugAuthorityOutput
// (Public, BlueprintCallable, BlueprintEvent)

void AAoCPlayerControllerBP_C::DebugAuthorityOutput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "DebugAuthorityOutput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Client_HideAllCharactersInWorld
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bHide                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const TArray<class AActor*>&            IgnoreActors                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void AAoCPlayerControllerBP_C::Client_HideAllCharactersInWorld(bool bHide, const TArray<class AActor*>& IgnoreActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Client_HideAllCharactersInWorld");

	Params::AoCPlayerControllerBP_C_Client_HideAllCharactersInWorld Parms{};

	Parms.bHide = bHide;
	Parms.IgnoreActors = std::move(IgnoreActors);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.CLIENT Select Target from SERVER
// (Net, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Friendly_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::CLIENT_Select_Target_from_SERVER(class AActor* Target, bool Friendly_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "CLIENT Select Target from SERVER");

	Params::AoCPlayerControllerBP_C_CLIENT_Select_Target_from_SERVER Parms{};

	Parms.Target = Target;
	Parms.Friendly_ = Friendly_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.Check Action Mode Old
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::Check_Action_Mode_Old(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "Check Action Mode Old");

	Params::AoCPlayerControllerBP_C_Check_Action_Mode_Old Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.CallOnMoveStartDelegateBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const bool                              bIsActionMode                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float&                            ForwardAxis                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// const float&                            RightAxis                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAoCPlayerControllerBP_C::CallOnMoveStartDelegateBP(const bool bIsActionMode, const float& ForwardAxis, const float& RightAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "CallOnMoveStartDelegateBP");

	Params::AoCPlayerControllerBP_C_CallOnMoveStartDelegateBP Parms{};

	Parms.bIsActionMode = bIsActionMode;
	Parms.ForwardAxis = ForwardAxis;
	Parms.RightAxis = RightAxis;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.BotUpdateUiBP
// (BlueprintEvent)

void AAoCPlayerControllerBP_C::BotUpdateUiBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "BotUpdateUiBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AoCPlayerControllerBP.AoCPlayerControllerBP_C.BotShowUiBP
// (BlueprintEvent)

void AAoCPlayerControllerBP_C::BotShowUiBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AoCPlayerControllerBP_C", "BotShowUiBP");

	UObject::ProcessEvent(Func, nullptr);
}

}

