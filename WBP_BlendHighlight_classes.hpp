#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_BlendHighlight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_BlendHighlight.WBP_BlendHighlight_C
// 0x0028 (0x0380 - 0x0358)
class UWBP_BlendHighlight_C final : public UBlendSpotWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_75;                                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          MouseButton;                                       // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__BlendHighlight_Button_75_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__BlendHighlight_Button_75_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__BlendHighlight_Button_75_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_BlendHighlight(int32 EntryPoint);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_BlendHighlight_C">();
	}
	static class UWBP_BlendHighlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_BlendHighlight_C>();
	}
};
static_assert(alignof(UWBP_BlendHighlight_C) == 0x000008, "Wrong alignment on UWBP_BlendHighlight_C");
static_assert(sizeof(UWBP_BlendHighlight_C) == 0x000380, "Wrong size on UWBP_BlendHighlight_C");
static_assert(offsetof(UWBP_BlendHighlight_C, UberGraphFrame) == 0x000358, "Member 'UWBP_BlendHighlight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_BlendHighlight_C, Fade) == 0x000360, "Member 'UWBP_BlendHighlight_C::Fade' has a wrong offset!");
static_assert(offsetof(UWBP_BlendHighlight_C, Button_75) == 0x000368, "Member 'UWBP_BlendHighlight_C::Button_75' has a wrong offset!");
static_assert(offsetof(UWBP_BlendHighlight_C, Image) == 0x000370, "Member 'UWBP_BlendHighlight_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_BlendHighlight_C, MouseButton) == 0x000378, "Member 'UWBP_BlendHighlight_C::MouseButton' has a wrong offset!");

}

