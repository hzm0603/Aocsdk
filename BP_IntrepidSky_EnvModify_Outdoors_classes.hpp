#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_IntrepidSky_EnvModify_Outdoors

#include "Basic.hpp"

#include "S_EnvironmentSettings_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "S_EnvironmentSettingsSwitches_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_IntrepidSky_EnvModify_Outdoors.BP_IntrepidSky_EnvModify_Outdoors_C
// 0x1588 (0x18D0 - 0x0348)
class ABP_IntrepidSky_EnvModify_Outdoors_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  Blend_PPV;                                         // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineAreaAudioComponent*              SplineAreaAudio;                                   // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FS_EnvironmentSettings                 Environment_Settings;                              // 0x0370(0x0600)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_EnvironmentSettingsSwitches         Environment_Settings_Switches;                     // 0x0970(0x0013)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_983[0x5];                                      // 0x0983(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtmosphereOverrideDataAsset*           Environment_Settings_Asset;                        // 0x0988(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         Optional_Camera_Attached_FX;                       // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       Player_Pawn;                                       // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Value_At_Spline;                        // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Distance;                               // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             IntrepidSkyActor;                                  // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Vertical_Transition_Distance_Above;                // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Transition_Distance;                          // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UProceduralMeshComponent*               Procedural_Mesh;                                   // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Spline_Procession;                                 // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Positions;                                         // 0x09D8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Tangents;                                          // 0x09E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        Verts;                                             // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLinearColor>                   Vertex_Colors;                                     // 0x0A08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 Tris;                                              // 0x0A18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UNiagaraComponent*                      Attached_Niagara_Component;                        // 0x0A28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_LocalFX_C*                          Local_FX_Actor;                                    // 0x0A30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak_Component;                                      // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Master_Value;                                      // 0x0A40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FLinearColor                           Preview_Vert_Color;                                // 0x0A48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Previewing;                                     // 0x0A58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x7];                                      // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   Preview_Text;                                      // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAkSwitchValue*                         MusicSwitchOnEnter;                                // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkSwitchValue*                         MusicSwitchOnExit;                                 // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AudioManager_C*                     Audio_Manager;                                     // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bEnableNotification;                               // 0x0A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECalloutType                                  CalloutType;                                       // 0x0A81(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsTriggered;                                      // 0x0A82(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A83[0x5];                                      // 0x0A83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0A88(0x0018)(Edit, BlueprintVisible)
	int32                                         WaitTimeInSeconds;                                 // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Actor_Hash_ID;                                     // 0x0AA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAtmoBlendSettings                     Blend_Data;                                        // 0x0AA8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class UTexture*                               PPV_LUT;                                           // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   PPV_Settings;                                      // 0x0AC0(0x06E0)(Edit, BlueprintVisible)
	bool                                          Use_PPV_Settings_MedLow;                           // 0x11A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0xF];                                     // 0x11A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   PPV_Settings_MedLow;                               // 0x11B0(0x06E0)(Edit, BlueprintVisible)
	struct FTimerHandle                           Repeating_Function_Timer;                          // 0x1890(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Transitoin_Sample_Position;                        // 0x1898(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Follow_Camera;                                     // 0x18B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         AudioPriority;                                     // 0x18B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18BC[0x4];                                     // 0x18BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               PPV_LUT_MID;                                       // 0x18C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AllowTrigger();
	void Clear_Spline_Settings_In_IntrepidSky();
	void Editor_Compute_Blend();
	void ExecuteUbergraph_BP_IntrepidSky_EnvModify_Outdoors(int32 EntryPoint);
	void OnAudioActivated();
	void OnAudioDeactivated();
	void PostNodeInit();
	void PPV_Blend(float Blend_Weight, bool Set_Enabled);
	void PreviewModifications();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Refresh_Preview();
	void RevertToWorldDefaults();
	void Set_Master_Value(double Master_Value_0);
	void Set_Spline_Settings_In_IntrepidSky();
	void Set_Transition_Value_In_IntrepidSky(double Value);
	void Start_Previewing();
	void Stop_Previewing();
	void Update_Blending_Editor_Time();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_IntrepidSky_EnvModify_Outdoors_C">();
	}
	static class ABP_IntrepidSky_EnvModify_Outdoors_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_IntrepidSky_EnvModify_Outdoors_C>();
	}
};
static_assert(alignof(ABP_IntrepidSky_EnvModify_Outdoors_C) == 0x000010, "Wrong alignment on ABP_IntrepidSky_EnvModify_Outdoors_C");
static_assert(sizeof(ABP_IntrepidSky_EnvModify_Outdoors_C) == 0x0018D0, "Wrong size on ABP_IntrepidSky_EnvModify_Outdoors_C");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, UberGraphFrame) == 0x000348, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Blend_PPV) == 0x000350, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Blend_PPV' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, SplineAreaAudio) == 0x000358, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::SplineAreaAudio' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Spline) == 0x000360, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, DefaultSceneRoot) == 0x000368, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Environment_Settings) == 0x000370, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Environment_Settings' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Environment_Settings_Switches) == 0x000970, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Environment_Settings_Switches' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Environment_Settings_Asset) == 0x000988, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Environment_Settings_Asset' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Optional_Camera_Attached_FX) == 0x000990, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Optional_Camera_Attached_FX' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Player_Pawn) == 0x000998, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Player_Pawn' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Transition_Value_At_Spline) == 0x0009A0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Transition_Value_At_Spline' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Transition_Distance) == 0x0009A8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Transition_Distance' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, IntrepidSkyActor) == 0x0009B0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::IntrepidSkyActor' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Vertical_Transition_Distance_Above) == 0x0009B8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Vertical_Transition_Distance_Above' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Show_Transition_Distance) == 0x0009C0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Show_Transition_Distance' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Procedural_Mesh) == 0x0009C8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Procedural_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Spline_Procession) == 0x0009D0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Spline_Procession' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Positions) == 0x0009D8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Positions' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Tangents) == 0x0009E8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Tangents' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Verts) == 0x0009F8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Verts' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Vertex_Colors) == 0x000A08, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Vertex_Colors' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Tris) == 0x000A18, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Tris' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Attached_Niagara_Component) == 0x000A28, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Attached_Niagara_Component' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Local_FX_Actor) == 0x000A30, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Local_FX_Actor' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Ak_Component) == 0x000A38, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Ak_Component' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Master_Value) == 0x000A40, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Master_Value' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Preview_Vert_Color) == 0x000A48, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Preview_Vert_Color' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Is_Previewing) == 0x000A58, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Is_Previewing' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Preview_Text) == 0x000A60, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Preview_Text' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, MusicSwitchOnEnter) == 0x000A68, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::MusicSwitchOnEnter' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, MusicSwitchOnExit) == 0x000A70, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::MusicSwitchOnExit' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Audio_Manager) == 0x000A78, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Audio_Manager' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, bEnableNotification) == 0x000A80, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::bEnableNotification' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, CalloutType) == 0x000A81, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::CalloutType' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, bIsTriggered) == 0x000A82, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::bIsTriggered' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Message) == 0x000A88, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Message' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, WaitTimeInSeconds) == 0x000AA0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::WaitTimeInSeconds' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Actor_Hash_ID) == 0x000AA4, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Actor_Hash_ID' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Blend_Data) == 0x000AA8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Blend_Data' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, PPV_LUT) == 0x000AB8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::PPV_LUT' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, PPV_Settings) == 0x000AC0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::PPV_Settings' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Use_PPV_Settings_MedLow) == 0x0011A0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Use_PPV_Settings_MedLow' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, PPV_Settings_MedLow) == 0x0011B0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::PPV_Settings_MedLow' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Repeating_Function_Timer) == 0x001890, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Repeating_Function_Timer' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Transitoin_Sample_Position) == 0x001898, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Transitoin_Sample_Position' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, Follow_Camera) == 0x0018B0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::Follow_Camera' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, AudioPriority) == 0x0018B8, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::AudioPriority' has a wrong offset!");
static_assert(offsetof(ABP_IntrepidSky_EnvModify_Outdoors_C, PPV_LUT_MID) == 0x0018C0, "Member 'ABP_IntrepidSky_EnvModify_Outdoors_C::PPV_LUT_MID' has a wrong offset!");

}

