#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioManager

#include "Basic.hpp"

#include "S_EnvironmentSettingsSwitches_structs.hpp"
#include "SStartStopAudioEvents_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"
#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EReverbSet_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioManager.BP_AudioManager_C.AddInteriorOverride
// 0x0030 (0x0030 - 0x0000)
struct BP_AudioManager_C_AddInteriorOverride final
{
public:
	struct FSStartStopAudioEvents                 StartStopOverride;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteriorAudioSystem*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateInteriorAudio_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_AddInteriorOverride) == 0x000008, "Wrong alignment on BP_AudioManager_C_AddInteriorOverride");
static_assert(sizeof(BP_AudioManager_C_AddInteriorOverride) == 0x000030, "Wrong size on BP_AudioManager_C_AddInteriorOverride");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, StartStopOverride) == 0x000000, "Member 'BP_AudioManager_C_AddInteriorOverride::StartStopOverride' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000018, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_UpdateInteriorAudio_ReturnValue) == 0x000020, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_UpdateInteriorAudio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_AddInteriorOverride, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_AudioManager_C_AddInteriorOverride::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Apply Override Biome Settings
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioManager_C_Apply_Override_Biome_Settings final
{
public:
	struct FSStartStopAudioEvents                 CallFunc_Map_Find_Value;                           // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Apply_Override_Biome_Settings) == 0x000008, "Wrong alignment on BP_AudioManager_C_Apply_Override_Biome_Settings");
static_assert(sizeof(BP_AudioManager_C_Apply_Override_Biome_Settings) == 0x000018, "Wrong size on BP_AudioManager_C_Apply_Override_Biome_Settings");
static_assert(offsetof(BP_AudioManager_C_Apply_Override_Biome_Settings, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_AudioManager_C_Apply_Override_Biome_Settings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Override_Biome_Settings, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_Apply_Override_Biome_Settings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Apply Per Biome Settings
// 0x0198 (0x0198 - 0x0000)
struct BP_AudioManager_C_Apply_Per_Biome_Settings final
{
public:
	EBiomeType                                    MusicBiome;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Max_Biome_Amount;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0030(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3; // 0x0040(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIntrepidMusicPlayer*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentAudioSubsystem*             CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_3;             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_4;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4; // 0x0084(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5; // 0x0094(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6; // 0x00AC(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostOnComponent_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostOnComponent_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_2;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x1];                                       // 0x00EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_3;            // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7; // 0x00FC(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_4;                       // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_5;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_6;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1; // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_2; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_3; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Apply_Per_Biome_Settings) == 0x000008, "Wrong alignment on BP_AudioManager_C_Apply_Per_Biome_Settings");
static_assert(sizeof(BP_AudioManager_C_Apply_Per_Biome_Settings) == 0x000198, "Wrong size on BP_AudioManager_C_Apply_Per_Biome_Settings");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, MusicBiome) == 0x000000, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::MusicBiome' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Max_Biome_Amount) == 0x000008, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Max_Biome_Amount' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable) == 0x000010, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_1) == 0x000020, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_2) == 0x000030, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_3) == 0x000040, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000050, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000060, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000069, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00006A, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00006B, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00006C, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000074, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x000078, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Conv_ByteToInt_ReturnValue_3) == 0x00007C, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Conv_ByteToInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Conv_ByteToInt_ReturnValue_4) == 0x000080, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Conv_ByteToInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_4) == 0x000084, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_5) == 0x000094, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue) == 0x0000A5, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0000A6, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue) == 0x0000A7, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_2) == 0x0000A8, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_3) == 0x0000A9, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000AA, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AB, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_6) == 0x0000AC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostOnComponent_ReturnValue) == 0x0000BC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostOnComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000C1, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x0000C2, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C3, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostOnComponent_ReturnValue_1) == 0x0000C4, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostOnComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_4) == 0x0000C8, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostAkEvent_ReturnValue) == 0x0000CC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_5) == 0x0000D0, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_3) == 0x0000D1, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_3) == 0x0000D2, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000D3, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000D4, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x0000D5, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_4) == 0x0000D6, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostOnComponent_ReturnValue_2) == 0x0000D8, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostOnComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_6) == 0x0000DC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000E0, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_7) == 0x0000E4, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_5) == 0x0000E5, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_5) == 0x0000E6, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000E7, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_6) == 0x0000E8, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x0000E9, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_6) == 0x0000EA, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostOnComponent_ReturnValue_3) == 0x0000EC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostOnComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_8) == 0x0000F0, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostAkEvent_ReturnValue_2) == 0x0000F4, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_9) == 0x0000F8, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Not_PreBool_ReturnValue_7) == 0x0000F9, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_7) == 0x0000FA, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, Temp_delegate_Variable_7) == 0x0000FC, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_PostAkEvent_ReturnValue_3) == 0x00010C, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_10) == 0x000110, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_8) == 0x000111, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SelectFloat_ReturnValue) == 0x000118, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_IsValid_ReturnValue_11) == 0x000120, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_BooleanAND_ReturnValue_9) == 0x000121, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SelectFloat_ReturnValue_1) == 0x000128, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue) == 0x000130, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_1) == 0x000138, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_2) == 0x000140, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000148, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_3) == 0x000158, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_4) == 0x000160, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000168, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000170, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_5) == 0x000178, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_FMax_ReturnValue_6) == 0x000180, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_FMax_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast) == 0x000188, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1) == 0x00018C, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_2) == 0x000190, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Per_Biome_Settings, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_3) == 0x000194, "Member 'BP_AudioManager_C_Apply_Per_Biome_Settings::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_3' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Apply Spline Modifiers
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AudioManager_C_Apply_Spline_Modifiers final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0010(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0020(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3; // 0x006C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_4;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteriorAudioSystem*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PlayInteriorAudio_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Apply_Spline_Modifiers) == 0x000008, "Wrong alignment on BP_AudioManager_C_Apply_Spline_Modifiers");
static_assert(sizeof(BP_AudioManager_C_Apply_Spline_Modifiers) == 0x0000F0, "Wrong size on BP_AudioManager_C_Apply_Spline_Modifiers");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, Temp_delegate_Variable) == 0x000000, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, Temp_delegate_Variable_1) == 0x000010, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, Temp_delegate_Variable_2) == 0x000020, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000032, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Not_PreBool_ReturnValue_1) == 0x000033, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue) == 0x000050, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_FMax_ReturnValue_1) == 0x000058, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Not_PreBool_ReturnValue_2) == 0x000060, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue_1) == 0x000061, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_PostOnComponent_ReturnValue) == 0x000064, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_PostOnComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, Temp_delegate_Variable_3) == 0x00006C, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_PostAkEvent_ReturnValue) == 0x00007C, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Not_PreBool_ReturnValue_3) == 0x000081, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_FMax_ReturnValue_2) == 0x000088, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_FMax_ReturnValue_3) == 0x000098, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A0, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_FMax_ReturnValue_4) == 0x0000B0, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_FMax_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Not_PreBool_ReturnValue_4) == 0x0000B8, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue_3) == 0x0000B9, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_PostOnComponent_ReturnValue_1) == 0x0000BC, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_PostOnComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue_2) == 0x0000C0, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000C4, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue_3) == 0x0000C8, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000D0, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_PlayInteriorAudio_ReturnValue) == 0x0000D8, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_PlayInteriorAudio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue_4) == 0x0000DC, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_IsValid_ReturnValue_5) == 0x0000DD, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000DE, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x0000DF, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue_4) == 0x0000E0, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_BooleanAND_ReturnValue_5) == 0x0000E1, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast) == 0x0000E4, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Apply_Spline_Modifiers, CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1) == 0x0000E8, "Member 'BP_AudioManager_C_Apply_Spline_Modifiers::CallFunc_SetOutputBusVolume_BusVolume_ImplicitCast_1' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.ExecuteUbergraph_BP_AudioManager
// 0x0198 (0x0198 - 0x0000)
struct BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UIntrepidMusicPlayer*                   CallFunc_GetMusicPlayer_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float BeatDuration)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UIntrepidMusicPlayer*                   CallFunc_GetMusicPlayer_ReturnValue_1;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraParameterCollectionInstance*    CallFunc_GetNiagaraParameterCollection_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(double Value)>                 UniqueObjectNameForCooking_OutputDelegate;         // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1;  // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_2;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USpatialAnalyzerSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPhysicalMaterial*>              CallFunc_Map_Keys_Keys;                            // 0x00C0(0x0010)(ReferenceParm)
	class UPhysicalMaterial*                      CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EReverbSet                                    CallFunc_Map_Find_Value;                           // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInteriorAudioSpatialReverbList        CallFunc_Map_Find_Value_1;                         // 0x00E0(0x0010)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialReverb                        K2Node_MakeStruct_MaterialReverb;                  // 0x00F8(0x0018)()
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate_1;       // 0x0118(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCharacterAudioSystem*                  CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate_2;       // 0x0134(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAudioSystem*                  CallFunc_GetWorldSubsystem_ReturnValue_2;          // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate_3;       // 0x0150(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteriorAudioSystem*                   CallFunc_GetWorldSubsystem_ReturnValue_3;          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_B_ImplicitCast;        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Phrase_Phase_ImplicitCast;      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager) == 0x000008, "Wrong alignment on BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager");
static_assert(sizeof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager) == 0x000198, "Wrong size on BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, EntryPoint) == 0x000000, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetMusicPlayer_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetMusicPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetMusicPlayer_ReturnValue_1) == 0x000030, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetMusicPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetNiagaraParameterCollection_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetNiagaraParameterCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_Event_DeltaSeconds) == 0x000048, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_CustomEvent_Value) == 0x000058, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, UniqueObjectNameForCooking_OutputDelegate) == 0x000068, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::UniqueObjectNameForCooking_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000080, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1) == 0x000090, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_2) == 0x0000A0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_SwitchEnum_CmpSuccess) == 0x0000A9, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetWorldSubsystem_ReturnValue) == 0x0000B0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue_2) == 0x0000B8, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Map_Keys_Keys) == 0x0000C0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Map_Find_Value) == 0x0000DC, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Map_Find_ReturnValue) == 0x0000DD, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Less_IntInt_ReturnValue) == 0x0000DE, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Map_Find_Value_1) == 0x0000E0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Map_Find_ReturnValue_1) == 0x0000F0, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_MakeStruct_MaterialReverb) == 0x0000F8, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_MakeStruct_MaterialReverb' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsServer_ReturnValue) == 0x000110, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, UniqueObjectNameForCooking_OutputDelegate_1) == 0x000118, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::UniqueObjectNameForCooking_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000128, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue_3) == 0x000130, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, UniqueObjectNameForCooking_OutputDelegate_2) == 0x000134, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::UniqueObjectNameForCooking_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetWorldSubsystem_ReturnValue_2) == 0x000148, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetWorldSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, UniqueObjectNameForCooking_OutputDelegate_3) == 0x000150, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::UniqueObjectNameForCooking_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue_4) == 0x000160, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_GetWorldSubsystem_ReturnValue_3) == 0x000168, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_GetWorldSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_IsValid_ReturnValue_5) == 0x000170, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000178, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000180, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, CallFunc_Percent_FloatFloat_B_ImplicitCast) == 0x000188, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::CallFunc_Percent_FloatFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager, K2Node_VariableSet_Phrase_Phase_ImplicitCast) == 0x000190, "Member 'BP_AudioManager_C_ExecuteUbergraph_BP_AudioManager::K2Node_VariableSet_Phrase_Phase_ImplicitCast' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Get Audio Wind Intensity
// 0x0078 (0x0078 - 0x0000)
struct BP_AudioManager_C_Get_Audio_Wind_Intensity final
{
public:
	double                                        Noisy_Wind_Speed_0;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Speed_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Speed_Variation_Amplifier_0;                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Wind_Speed_Amplitude_0;                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Audio_Wind_Intensity;                              // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Get_Audio_Wind_Intensity) == 0x000008, "Wrong alignment on BP_AudioManager_C_Get_Audio_Wind_Intensity");
static_assert(sizeof(BP_AudioManager_C_Get_Audio_Wind_Intensity) == 0x000078, "Wrong size on BP_AudioManager_C_Get_Audio_Wind_Intensity");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, Noisy_Wind_Speed_0) == 0x000000, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::Noisy_Wind_Speed_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, Wind_Speed_0) == 0x000008, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::Wind_Speed_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, Wind_Speed_Variation_Amplifier_0) == 0x000010, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::Wind_Speed_Variation_Amplifier_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, Wind_Speed_Amplitude_0) == 0x000018, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::Wind_Speed_Amplitude_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, Audio_Wind_Intensity) == 0x000020, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::Audio_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000050, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000068, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Get_Audio_Wind_Intensity, CallFunc_FClamp_ReturnValue) == 0x000070, "Member 'BP_AudioManager_C_Get_Audio_Wind_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Initialize Biome Music
// 0x00B0 (0x00B0 - 0x0000)
struct BP_AudioManager_C_Initialize_Biome_Music final
{
public:
	int32                                         Max_Enum_Value;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FMusicAssetValues>              Music_Assets_Buffer;                               // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIntrepidMusicPlayer*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EBiomeType>                            CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item;                           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMusicAssetValues                      CallFunc_Map_Find_Value;                           // 0x0068(0x0030)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    CallFunc_Array_Get_Item_1;                         // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_2;             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Initialize_Biome_Music) == 0x000008, "Wrong alignment on BP_AudioManager_C_Initialize_Biome_Music");
static_assert(sizeof(BP_AudioManager_C_Initialize_Biome_Music) == 0x0000B0, "Wrong size on BP_AudioManager_C_Initialize_Biome_Music");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Max_Enum_Value) == 0x000000, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Max_Enum_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Music_Assets_Buffer) == 0x000008, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Music_Assets_Buffer' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000030, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_AudioManager_C_Initialize_Biome_Music::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Array_Get_Item) == 0x00005C, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Less_IntInt_ReturnValue) == 0x00005D, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000060, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Map_Find_Value) == 0x000068, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Map_Find_ReturnValue) == 0x000098, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Array_Get_Item_1) == 0x000099, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Conv_ByteToInt_ReturnValue_2) == 0x00009C, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Conv_ByteToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Array_Length_ReturnValue_1) == 0x0000A4, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Initialize_Biome_Music, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_AudioManager_C_Initialize_Biome_Music::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.InsertOutdoorSettings
// 0x0040 (0x0040 - 0x0000)
struct BP_AudioManager_C_InsertOutdoorSettings final
{
public:
	struct FSStartStopAudioEvents                 OutdoorSettings;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInserted;                                         // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_InsertOutdoorSettings) == 0x000008, "Wrong alignment on BP_AudioManager_C_InsertOutdoorSettings");
static_assert(sizeof(BP_AudioManager_C_InsertOutdoorSettings) == 0x000040, "Wrong size on BP_AudioManager_C_InsertOutdoorSettings");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, OutdoorSettings) == 0x000000, "Member 'BP_AudioManager_C_InsertOutdoorSettings::OutdoorSettings' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, Priority) == 0x000010, "Member 'BP_AudioManager_C_InsertOutdoorSettings::Priority' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, bInserted) == 0x000014, "Member 'BP_AudioManager_C_InsertOutdoorSettings::bInserted' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AudioManager_C_InsertOutdoorSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_AudioManager_C_InsertOutdoorSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, Temp_bool_True_if_break_was_hit_Variable) == 0x000024, "Member 'BP_AudioManager_C_InsertOutdoorSettings::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Array_Add_ReturnValue_1) == 0x00002C, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Array_Get_Item) == 0x000034, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000039, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_InsertOutdoorSettings, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'BP_AudioManager_C_InsertOutdoorSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Music Beat Event
// 0x0038 (0x0038 - 0x0000)
struct BP_AudioManager_C_Music_Beat_Event final
{
public:
	float                                         BeatDuration;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraParameterCollectionInstance*    CallFunc_GetNiagaraParameterCollection_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_B_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Phrase_Duration_ImplicitCast;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Music_Beat_Event) == 0x000008, "Wrong alignment on BP_AudioManager_C_Music_Beat_Event");
static_assert(sizeof(BP_AudioManager_C_Music_Beat_Event) == 0x000038, "Wrong size on BP_AudioManager_C_Music_Beat_Event");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, BeatDuration) == 0x000000, "Member 'BP_AudioManager_C_Music_Beat_Event::BeatDuration' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000004, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_GetNiagaraParameterCollection_ReturnValue) == 0x000008, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_GetNiagaraParameterCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x000018, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_NotEqual_DoubleDouble_B_ImplicitCast) == 0x000020, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_NotEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_AudioManager_C_Music_Beat_Event::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Music_Beat_Event, K2Node_VariableSet_Phrase_Duration_ImplicitCast) == 0x000030, "Member 'BP_AudioManager_C_Music_Beat_Event::K2Node_VariableSet_Phrase_Duration_ImplicitCast' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.PopOutdoorSettings
// 0x00A8 (0x00A8 - 0x0000)
struct BP_AudioManager_C_PopOutdoorSettings final
{
public:
	struct FSStartStopAudioEvents                 OutdoorSettings;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_EnvironmentSettingsSwitches         OutdoorSettingsSwitches;                           // 0x0010(0x0013)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StackSize;                                         // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0054(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0077(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStartStopAudioEvents                 CallFunc_Array_Get_Item_1;                         // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_PopOutdoorSettings) == 0x000008, "Wrong alignment on BP_AudioManager_C_PopOutdoorSettings");
static_assert(sizeof(BP_AudioManager_C_PopOutdoorSettings) == 0x0000A8, "Wrong size on BP_AudioManager_C_PopOutdoorSettings");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, OutdoorSettings) == 0x000000, "Member 'BP_AudioManager_C_PopOutdoorSettings::OutdoorSettings' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, OutdoorSettingsSwitches) == 0x000010, "Member 'BP_AudioManager_C_PopOutdoorSettings::OutdoorSettingsSwitches' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, StackSize) == 0x000024, "Member 'BP_AudioManager_C_PopOutdoorSettings::StackSize' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_AudioManager_C_PopOutdoorSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_AudioManager_C_PopOutdoorSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'BP_AudioManager_C_PopOutdoorSettings::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Not_PreBool_ReturnValue) == 0x00003D, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_IsValid_ReturnValue_1) == 0x000045, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000048, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, Temp_delegate_Variable) == 0x000054, "Member 'BP_AudioManager_C_PopOutdoorSettings::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue_1) == 0x000064, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_PostOnComponent_ReturnValue) == 0x000068, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_PostOnComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000074, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000075, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue_2) == 0x000076, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000077, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue_3) == 0x000078, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000090, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000091, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue_4) == 0x000092, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Array_Length_ReturnValue_1) == 0x000094, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_Array_Length_ReturnValue_2) == 0x00009C, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PopOutdoorSettings, CallFunc_BooleanAND_ReturnValue_5) == 0x0000A0, "Member 'BP_AudioManager_C_PopOutdoorSettings::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.PostEventArray
// 0x0060 (0x0060 - 0x0000)
struct BP_AudioManager_C_PostEventArray final
{
public:
	TArray<class UAkAudioEvent*>                  Events;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UAkComponent*                           AkComponent;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0034(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_PostEventArray) == 0x000008, "Wrong alignment on BP_AudioManager_C_PostEventArray");
static_assert(sizeof(BP_AudioManager_C_PostEventArray) == 0x000060, "Wrong size on BP_AudioManager_C_PostEventArray");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, Events) == 0x000000, "Member 'BP_AudioManager_C_PostEventArray::Events' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, AkComponent) == 0x000010, "Member 'BP_AudioManager_C_PostEventArray::AkComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AudioManager_C_PostEventArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, Temp_delegate_Variable) == 0x000034, "Member 'BP_AudioManager_C_PostEventArray::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_PostAkEvent_ReturnValue) == 0x000048, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_AudioManager_C_PostEventArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PostEventArray, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BP_AudioManager_C_PostEventArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.PushOutdoorSettings
// 0x0048 (0x0048 - 0x0000)
struct BP_AudioManager_C_PushOutdoorSettings final
{
public:
	struct FSStartStopAudioEvents                 OutdoorSettings;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_EnvironmentSettingsSwitches         OutdoorSettingsSwitches;                           // 0x0010(0x0013)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x002C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_PushOutdoorSettings) == 0x000008, "Wrong alignment on BP_AudioManager_C_PushOutdoorSettings");
static_assert(sizeof(BP_AudioManager_C_PushOutdoorSettings) == 0x000048, "Wrong size on BP_AudioManager_C_PushOutdoorSettings");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, OutdoorSettings) == 0x000000, "Member 'BP_AudioManager_C_PushOutdoorSettings::OutdoorSettings' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, OutdoorSettingsSwitches) == 0x000010, "Member 'BP_AudioManager_C_PushOutdoorSettings::OutdoorSettingsSwitches' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, Priority) == 0x000024, "Member 'BP_AudioManager_C_PushOutdoorSettings::Priority' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_IsValid_ReturnValue_1) == 0x00002B, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, Temp_delegate_Variable) == 0x00002C, "Member 'BP_AudioManager_C_PushOutdoorSettings::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_IsValid_ReturnValue_2) == 0x00003C, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_PostOnComponent_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_PostOnComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_PushOutdoorSettings, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'BP_AudioManager_C_PushOutdoorSettings::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AudioManager_C_ReceiveTick");
static_assert(sizeof(BP_AudioManager_C_ReceiveTick) == 0x000004, "Wrong size on BP_AudioManager_C_ReceiveTick");
static_assert(offsetof(BP_AudioManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AudioManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.RemoveInteriorOverride
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioManager_C_RemoveInteriorOverride final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteriorAudioSystem*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_UpdateInteriorAudio_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_RemoveInteriorOverride) == 0x000008, "Wrong alignment on BP_AudioManager_C_RemoveInteriorOverride");
static_assert(sizeof(BP_AudioManager_C_RemoveInteriorOverride) == 0x000020, "Wrong size on BP_AudioManager_C_RemoveInteriorOverride");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000008, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_UpdateInteriorAudio_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_UpdateInteriorAudio_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_RemoveInteriorOverride, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'BP_AudioManager_C_RemoveInteriorOverride::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Run Audio
// 0x0198 (0x0198 - 0x0000)
struct BP_AudioManager_C_Run_Audio final
{
public:
	double                                        OutdoorAmount;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dungeon_Amount_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Audio_Throttle;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       IntrepidSky_0;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraParameterCollectionInstance*    CallFunc_GetNiagaraParameterCollection_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatParameter_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatParameter_ReturnValue_1;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_2;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_113[0x5];                                      // 0x0113(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_8;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Audio_Wind_Intensity_Audio_Wind_Intensity; // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_172[0x6];                                      // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetRTPCArray_Value_ImplicitCast;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Run_Audio) == 0x000008, "Wrong alignment on BP_AudioManager_C_Run_Audio");
static_assert(sizeof(BP_AudioManager_C_Run_Audio) == 0x000198, "Wrong size on BP_AudioManager_C_Run_Audio");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, OutdoorAmount) == 0x000000, "Member 'BP_AudioManager_C_Run_Audio::OutdoorAmount' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, Dungeon_Amount_0) == 0x000008, "Member 'BP_AudioManager_C_Run_Audio::Dungeon_Amount_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, Location) == 0x000010, "Member 'BP_AudioManager_C_Run_Audio::Location' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, Audio_Throttle) == 0x000020, "Member 'BP_AudioManager_C_Run_Audio::Audio_Throttle' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, IntrepidSky_0) == 0x000028, "Member 'BP_AudioManager_C_Run_Audio::IntrepidSky_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000050, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_GetNiagaraParameterCollection_ReturnValue) == 0x000068, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_GetNiagaraParameterCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_GetFloatParameter_ReturnValue) == 0x000070, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_GetFloatParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_GetFloatParameter_ReturnValue_1) == 0x000074, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_GetFloatParameter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_IsServer_ReturnValue) == 0x000089, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Or_IntInt_ReturnValue) == 0x00008C, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Or_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Or_IntInt_ReturnValue_2) == 0x000094, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Or_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_FClamp_ReturnValue_1) == 0x0000A8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Not_PreBool_ReturnValue) == 0x0000C0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000C1, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x0000C8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_1) == 0x0000D0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000D8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000E0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000E1, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x0000E8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x0000F0, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0000F8, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000100, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_MakeLiteralByte_ReturnValue) == 0x000108, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000109, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00010C, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_2) == 0x000110, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000111, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_3) == 0x000112, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x000118, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_4) == 0x000120, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x000128, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000130, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_ReturnValue_8) == 0x000138, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000140, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Get_Audio_Wind_Intensity_Audio_Wind_Intensity) == 0x000148, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Get_Audio_Wind_Intensity_Audio_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000150, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_5) == 0x000151, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000158, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_6) == 0x000160, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000168, "Member 'BP_AudioManager_C_Run_Audio::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_AudioManager_C_Run_Audio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_BooleanAND_ReturnValue_7) == 0x000171, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000178, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000180, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_SetRTPCArray_Value_ImplicitCast) == 0x000188, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_SetRTPCArray_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Run_Audio, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000190, "Member 'BP_AudioManager_C_Run_Audio::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Set Env Mod Override Amounts
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioManager_C_Set_Env_Mod_Override_Amounts final
{
public:
	double                                        OutdoorAmount;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dungeon_Amount_0;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Set_Env_Mod_Override_Amounts) == 0x000008, "Wrong alignment on BP_AudioManager_C_Set_Env_Mod_Override_Amounts");
static_assert(sizeof(BP_AudioManager_C_Set_Env_Mod_Override_Amounts) == 0x000010, "Wrong size on BP_AudioManager_C_Set_Env_Mod_Override_Amounts");
static_assert(offsetof(BP_AudioManager_C_Set_Env_Mod_Override_Amounts, OutdoorAmount) == 0x000000, "Member 'BP_AudioManager_C_Set_Env_Mod_Override_Amounts::OutdoorAmount' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Env_Mod_Override_Amounts, Dungeon_Amount_0) == 0x000008, "Member 'BP_AudioManager_C_Set_Env_Mod_Override_Amounts::Dungeon_Amount_0' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Set Settings
// 0x0060 (0x0060 - 0x0000)
struct BP_AudioManager_C_Set_Settings final
{
public:
	struct FSStartStopAudioEvents                 CallFunc_Map_Find_Value;                           // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStartStopAudioEvents                 CallFunc_Map_Find_Value_1;                         // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStartStopAudioEvents                 CallFunc_Map_Find_Value_2;                         // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSStartStopAudioEvents                 CallFunc_Map_Find_Value_3;                         // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Set_Settings) == 0x000008, "Wrong alignment on BP_AudioManager_C_Set_Settings");
static_assert(sizeof(BP_AudioManager_C_Set_Settings) == 0x000060, "Wrong size on BP_AudioManager_C_Set_Settings");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_Value_1) == 0x000018, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_ReturnValue_1) == 0x000028, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_Value_2) == 0x000030, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_ReturnValue_2) == 0x000040, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_Value_3) == 0x000048, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Set_Settings, CallFunc_Map_Find_ReturnValue_3) == 0x000058, "Member 'BP_AudioManager_C_Set_Settings::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.SetRTPCArray
// 0x0040 (0x0040 - 0x0000)
struct BP_AudioManager_C_SetRTPCArray final
{
public:
	TArray<class UAkRtpc*>                        RTPCs;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Value;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkRtpc*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_SetRTPCArray) == 0x000008, "Wrong alignment on BP_AudioManager_C_SetRTPCArray");
static_assert(sizeof(BP_AudioManager_C_SetRTPCArray) == 0x000040, "Wrong size on BP_AudioManager_C_SetRTPCArray");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, RTPCs) == 0x000000, "Member 'BP_AudioManager_C_SetRTPCArray::RTPCs' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, Value) == 0x000010, "Member 'BP_AudioManager_C_SetRTPCArray::Value' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_AudioManager_C_SetRTPCArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_AudioManager_C_SetRTPCArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_SetRTPCArray, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000038, "Member 'BP_AudioManager_C_SetRTPCArray::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.Stop Audio
// 0x0098 (0x0098 - 0x0000)
struct BP_AudioManager_C_Stop_Audio final
{
public:
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable; // 0x0000(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1; // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2; // 0x0028(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostOnComponent_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3; // 0x003C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4; // 0x0058(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5; // 0x0068(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_3;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostOnComponent_ReturnValue_4;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteriorAudioSystem*                   CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostOnComponent_ReturnValue_5;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_Stop_Audio) == 0x000008, "Wrong alignment on BP_AudioManager_C_Stop_Audio");
static_assert(sizeof(BP_AudioManager_C_Stop_Audio) == 0x000098, "Wrong size on BP_AudioManager_C_Stop_Audio");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable) == 0x000000, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue) == 0x000014, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable_1) == 0x000018, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable_2) == 0x000028, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue_1) == 0x000038, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable_3) == 0x00003C, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue_2) == 0x00004C, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue_2) == 0x000050, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue_3) == 0x000054, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable_4) == 0x000058, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, Temp_delegate_Variable_5) == 0x000068, "Member 'BP_AudioManager_C_Stop_Audio::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue_4) == 0x000078, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue_3) == 0x00007C, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue_4) == 0x000080, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000088, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_IsValid_ReturnValue_5) == 0x000090, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_Stop_Audio, CallFunc_PostOnComponent_ReturnValue_5) == 0x000094, "Member 'BP_AudioManager_C_Stop_Audio::CallFunc_PostOnComponent_ReturnValue_5' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.StoreBiomeAmounts
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioManager_C_StoreBiomeAmounts final
{
public:
	EBiomeType                                    Red_Category_Name_0;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Red_Cat_Amount_0;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Green_Category_Name_0;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Green_Cat_Amount_0;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Blue_Category_Name_0;                              // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Blue_Cat_Amount_0;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Alpha_Category_Name_0;                             // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Alpha_Cat_Amount_0;                                // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_StoreBiomeAmounts) == 0x000004, "Wrong alignment on BP_AudioManager_C_StoreBiomeAmounts");
static_assert(sizeof(BP_AudioManager_C_StoreBiomeAmounts) == 0x000020, "Wrong size on BP_AudioManager_C_StoreBiomeAmounts");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Red_Category_Name_0) == 0x000000, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Red_Category_Name_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Red_Cat_Amount_0) == 0x000004, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Red_Cat_Amount_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Green_Category_Name_0) == 0x000008, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Green_Category_Name_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Green_Cat_Amount_0) == 0x00000C, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Green_Cat_Amount_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Blue_Category_Name_0) == 0x000010, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Blue_Category_Name_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Blue_Cat_Amount_0) == 0x000014, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Blue_Cat_Amount_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Alpha_Category_Name_0) == 0x000018, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Alpha_Category_Name_0' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_StoreBiomeAmounts, Alpha_Cat_Amount_0) == 0x00001C, "Member 'BP_AudioManager_C_StoreBiomeAmounts::Alpha_Cat_Amount_0' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.UpdateInteriorAmount
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioManager_C_UpdateInteriorAmount final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_UpdateInteriorAmount) == 0x000008, "Wrong alignment on BP_AudioManager_C_UpdateInteriorAmount");
static_assert(sizeof(BP_AudioManager_C_UpdateInteriorAmount) == 0x000008, "Wrong size on BP_AudioManager_C_UpdateInteriorAmount");
static_assert(offsetof(BP_AudioManager_C_UpdateInteriorAmount, Value) == 0x000000, "Member 'BP_AudioManager_C_UpdateInteriorAmount::Value' has a wrong offset!");

// Function BP_AudioManager.BP_AudioManager_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioManager_C_UserConstructionScript final
{
public:
	class AIntrepidSkyBase*                       CallFunc_GetIntrepidSkyInstance_IntrepidSky;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_VerraWorld_GlobalSky_C*             K2Node_DynamicCast_AsBP_Verra_World_Global_Sky;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioManager_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_AudioManager_C_UserConstructionScript");
static_assert(sizeof(BP_AudioManager_C_UserConstructionScript) == 0x000018, "Wrong size on BP_AudioManager_C_UserConstructionScript");
static_assert(offsetof(BP_AudioManager_C_UserConstructionScript, CallFunc_GetIntrepidSkyInstance_IntrepidSky) == 0x000000, "Member 'BP_AudioManager_C_UserConstructionScript::CallFunc_GetIntrepidSkyInstance_IntrepidSky' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Verra_World_Global_Sky) == 0x000008, "Member 'BP_AudioManager_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Verra_World_Global_Sky' has a wrong offset!");
static_assert(offsetof(BP_AudioManager_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_AudioManager_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

