#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_RotateToInteractionRotation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STT_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STT_RotateToInteractionRotation.STT_RotateToInteractionRotation_C
// 0x00A8 (0x0120 - 0x0078)
class USTT_RotateToInteractionRotation_C final : public USTT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABaseCharacter*                         Agent;                                             // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InteractTransform;                                 // 0x0090(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Tolerance;                                         // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotationSpeed;                                     // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtLocation;                                    // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               TargetRotation;                                    // 0x0108(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ReceiveLatentTick(const float DeltaTime);
	void ReceiveLatentEnterState(const struct FStateTreeTransitionResult& Transition);
	void ExecuteUbergraph_STT_RotateToInteractionRotation(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STT_RotateToInteractionRotation_C">();
	}
	static class USTT_RotateToInteractionRotation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTT_RotateToInteractionRotation_C>();
	}
};
static_assert(alignof(USTT_RotateToInteractionRotation_C) == 0x000010, "Wrong alignment on USTT_RotateToInteractionRotation_C");
static_assert(sizeof(USTT_RotateToInteractionRotation_C) == 0x000120, "Wrong size on USTT_RotateToInteractionRotation_C");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, UberGraphFrame) == 0x000078, "Member 'USTT_RotateToInteractionRotation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, Agent) == 0x000080, "Member 'USTT_RotateToInteractionRotation_C::Agent' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, InteractTransform) == 0x000090, "Member 'USTT_RotateToInteractionRotation_C::InteractTransform' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, Tolerance) == 0x0000F0, "Member 'USTT_RotateToInteractionRotation_C::Tolerance' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, RotationSpeed) == 0x0000F8, "Member 'USTT_RotateToInteractionRotation_C::RotationSpeed' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, LookAtLocation) == 0x000100, "Member 'USTT_RotateToInteractionRotation_C::LookAtLocation' has a wrong offset!");
static_assert(offsetof(USTT_RotateToInteractionRotation_C, TargetRotation) == 0x000108, "Member 'USTT_RotateToInteractionRotation_C::TargetRotation' has a wrong offset!");

}

