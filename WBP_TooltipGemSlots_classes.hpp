#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TooltipGemSlots

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_TooltipGemSlots.WBP_TooltipGemSlots_C
// 0x0028 (0x0328 - 0x0300)
class UWBP_TooltipGemSlots_C final : public UItemGemSlots
{
public:
	class UCommonBorder*                          AlternatingBG;                                     // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GemSlot_C*                         WBP_GemSlot;                                       // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GemSlot_C*                         WBP_GemSlot_1;                                     // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GemSlot_C*                         WBP_GemSlot_2;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_GemSlot_C*                         WBP_GemSlot_3;                                     // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	class UCommonBorder* GetBorder();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_TooltipGemSlots_C">();
	}
	static class UWBP_TooltipGemSlots_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_TooltipGemSlots_C>();
	}
};
static_assert(alignof(UWBP_TooltipGemSlots_C) == 0x000008, "Wrong alignment on UWBP_TooltipGemSlots_C");
static_assert(sizeof(UWBP_TooltipGemSlots_C) == 0x000328, "Wrong size on UWBP_TooltipGemSlots_C");
static_assert(offsetof(UWBP_TooltipGemSlots_C, AlternatingBG) == 0x000300, "Member 'UWBP_TooltipGemSlots_C::AlternatingBG' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipGemSlots_C, WBP_GemSlot) == 0x000308, "Member 'UWBP_TooltipGemSlots_C::WBP_GemSlot' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipGemSlots_C, WBP_GemSlot_1) == 0x000310, "Member 'UWBP_TooltipGemSlots_C::WBP_GemSlot_1' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipGemSlots_C, WBP_GemSlot_2) == 0x000318, "Member 'UWBP_TooltipGemSlots_C::WBP_GemSlot_2' has a wrong offset!");
static_assert(offsetof(UWBP_TooltipGemSlots_C, WBP_GemSlot_3) == 0x000320, "Member 'UWBP_TooltipGemSlots_C::WBP_GemSlot_3' has a wrong offset!");

}

