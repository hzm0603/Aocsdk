#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NodeRoadProxy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_RoadSetDressingData_structs.hpp"


namespace SDK::Params
{

// Function BP_NodeRoadProxy.BP_NodeRoadProxy_C.Apply PCG Data
// 0x0008 (0x0008 - 0x0000)
struct BP_NodeRoadProxy_C_Apply_PCG_Data final
{
public:
	class UPCGComponent*                          CallFunc_AddPCGComp_ReturnValue;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRoadProxy_C_Apply_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeRoadProxy_C_Apply_PCG_Data");
static_assert(sizeof(BP_NodeRoadProxy_C_Apply_PCG_Data) == 0x000008, "Wrong size on BP_NodeRoadProxy_C_Apply_PCG_Data");
static_assert(offsetof(BP_NodeRoadProxy_C_Apply_PCG_Data, CallFunc_AddPCGComp_ReturnValue) == 0x000000, "Member 'BP_NodeRoadProxy_C_Apply_PCG_Data::CallFunc_AddPCGComp_ReturnValue' has a wrong offset!");

// Function BP_NodeRoadProxy.BP_NodeRoadProxy_C.Clear All PCG Data
// 0x00A0 (0x00A0 - 0x0000)
struct BP_NodeRoadProxy_C_Clear_All_PCG_Data final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInstancedStaticMeshComponent*>  CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0058(0x0010)(ReferenceParm)
	TArray<class UPCGComponent*>                  CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRoadProxy_C_Clear_All_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeRoadProxy_C_Clear_All_PCG_Data");
static_assert(sizeof(BP_NodeRoadProxy_C_Clear_All_PCG_Data) == 0x0000A0, "Wrong size on BP_NodeRoadProxy_C_Clear_All_PCG_Data");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Array_Index_Variable_2) == 0x000020, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, Temp_int_Loop_Counter_Variable_2) == 0x000024, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000028, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x00002C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000030, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00004C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue) == 0x000054, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_GetAttachedActors_OutActors) == 0x000058, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000068, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Get_Item_2) == 0x000080, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Array_Length_ReturnValue_2) == 0x00008C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000090, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000094, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue_1) == 0x000098, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Clear_All_PCG_Data, CallFunc_Max_ReturnValue_2) == 0x00009C, "Member 'BP_NodeRoadProxy_C_Clear_All_PCG_Data::CallFunc_Max_ReturnValue_2' has a wrong offset!");

// Function BP_NodeRoadProxy.BP_NodeRoadProxy_C.Create Spline
// 0x0298 (0x0298 - 0x0000)
struct BP_NodeRoadProxy_C_Create_Spline final
{
public:
	class USplineComponent*                       In_Spline;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Current_In_Spline;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Spline_Point_Index;                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSplinePoint>                   Spline_Points;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ESplinePointType                              CallFunc_GetSplinePointType_ReturnValue;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue; // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           K2Node_MakeStruct_SplinePoint;                     // 0x01F8(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRoadProxy_C_Create_Spline) == 0x000008, "Wrong alignment on BP_NodeRoadProxy_C_Create_Spline");
static_assert(sizeof(BP_NodeRoadProxy_C_Create_Spline) == 0x000298, "Wrong size on BP_NodeRoadProxy_C_Create_Spline");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, In_Spline) == 0x000000, "Member 'BP_NodeRoadProxy_C_Create_Spline::In_Spline' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, Current_In_Spline) == 0x000008, "Member 'BP_NodeRoadProxy_C_Create_Spline::Current_In_Spline' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, Current_Spline_Point_Index) == 0x000010, "Member 'BP_NodeRoadProxy_C_Create_Spline::Current_Spline_Point_Index' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, Spline_Points) == 0x000018, "Member 'BP_NodeRoadProxy_C_Create_Spline::Spline_Points' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, Temp_int_Variable) == 0x000028, "Member 'BP_NodeRoadProxy_C_Create_Spline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetSplineLength_ReturnValue) == 0x00002C, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue) == 0x000030, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetInputKeyValueAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue) == 0x000040, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000048, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000078, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetSplinePointType_ReturnValue) == 0x000160, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetSplinePointType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x000168, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue) == 0x000180, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetInputKeyValueAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000184, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000188, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001A4, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x0001B0, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0001C8, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x0001E0, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, K2Node_MakeStruct_SplinePoint) == 0x0001F8, "Member 'BP_NodeRoadProxy_C_Create_Spline::K2Node_MakeStruct_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Array_Add_ReturnValue) == 0x000280, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Create_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast) == 0x000290, "Member 'BP_NodeRoadProxy_C_Create_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast' has a wrong offset!");

// Function BP_NodeRoadProxy.BP_NodeRoadProxy_C.Update PCG Data
// 0x0138 (0x0138 - 0x0000)
struct BP_NodeRoadProxy_C_Update_PCG_Data final
{
public:
	struct FS_RoadSetDressingData                 S_RoadSetDressingData;                             // 0x0000(0x00D8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast;     // 0x0114(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_1;   // 0x0118(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_2;   // 0x011C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_3;   // 0x0120(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_4;   // 0x0124(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_5;   // 0x0128(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_6;   // 0x012C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Value_ImplicitCast_7;   // 0x0130(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NodeRoadProxy_C_Update_PCG_Data) == 0x000008, "Wrong alignment on BP_NodeRoadProxy_C_Update_PCG_Data");
static_assert(sizeof(BP_NodeRoadProxy_C_Update_PCG_Data) == 0x000138, "Wrong size on BP_NodeRoadProxy_C_Update_PCG_Data");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, S_RoadSetDressingData) == 0x000000, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::S_RoadSetDressingData' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_MakeVector_ReturnValue_1) == 0x0000F8, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast) == 0x000114, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_1) == 0x000118, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_2) == 0x00011C, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_3) == 0x000120, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_4) == 0x000124, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_5) == 0x000128, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_6) == 0x00012C, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_NodeRoadProxy_C_Update_PCG_Data, CallFunc_SetFloatParameter_Value_ImplicitCast_7) == 0x000130, "Member 'BP_NodeRoadProxy_C_Update_PCG_Data::CallFunc_SetFloatParameter_Value_ImplicitCast_7' has a wrong offset!");

}

