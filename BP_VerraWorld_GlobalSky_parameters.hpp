#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VerraWorld_GlobalSky

#include "Basic.hpp"

#include "GameSystemsPlugin_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_PostProcessDefaultSettings_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Weather_WindCondition_structs.hpp"
#include "Niagara_structs.hpp"
#include "E_Weather_SnowCondition_structs.hpp"
#include "E_Weather_RainCondition_structs.hpp"
#include "E_Weather_HumidityCondition_structs.hpp"
#include "E_Weather_FogCondition_structs.hpp"


namespace SDK::Params
{

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Adjust Weather
// 0x0050 (0x0050 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Adjust_Weather final
{
public:
	double                                        Custom_Humidity_Max;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Humidity_Min;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Precipitation_Amount_Max;                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Precipitation_Amount_Min;                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Temp_Max;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Temp_Min;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_WindSpeed_Max;                              // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Wind_Speed_Min;                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Chance_Of_Precip_Max;                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Custom_Chance_Of_Precip_Min;                       // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Adjust_Weather) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Adjust_Weather");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Adjust_Weather) == 0x000050, "Wrong size on BP_VerraWorld_GlobalSky_C_Adjust_Weather");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Humidity_Max) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Humidity_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Humidity_Min) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Humidity_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Precipitation_Amount_Max) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Precipitation_Amount_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Precipitation_Amount_Min) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Precipitation_Amount_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Temp_Max) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Temp_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Temp_Min) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Temp_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_WindSpeed_Max) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_WindSpeed_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Wind_Speed_Min) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Wind_Speed_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Chance_Of_Precip_Max) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Chance_Of_Precip_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Adjust_Weather, Custom_Chance_Of_Precip_Min) == 0x000048, "Member 'BP_VerraWorld_GlobalSky_C_Adjust_Weather::Custom_Chance_Of_Precip_Min' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Apply Weather Override
// 0x00A0 (0x00A0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Apply_Weather_Override final
{
public:
	struct FSingleDayClimate                      StructRef;                                         // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FSingleDayClimate                      Output_Get;                                        // 0x0028(0x0028)(Parm, OutParm)
	struct FSingleDayClimate                      LV_Climate_Data;                                   // 0x0050(0x0028)(Edit, BlueprintVisible)
	struct FSingleDayClimate                      CallFunc_ApplyWeatherOverrideNative_OutClimate;    // 0x0078(0x0028)()
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Apply_Weather_Override");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override) == 0x0000A0, "Wrong size on BP_VerraWorld_GlobalSky_C_Apply_Weather_Override");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override, StructRef) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Apply_Weather_Override::StructRef' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override, Output_Get) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Apply_Weather_Override::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override, LV_Climate_Data) == 0x000050, "Member 'BP_VerraWorld_GlobalSky_C_Apply_Weather_Override::LV_Climate_Data' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Apply_Weather_Override, CallFunc_ApplyWeatherOverrideNative_OutClimate) == 0x000078, "Member 'BP_VerraWorld_GlobalSky_C_Apply_Weather_Override::CallFunc_ApplyWeatherOverrideNative_OutClimate' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.BiomePostProcessBlend
// 0x0BE0 (0x0BE0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend final
{
public:
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value;                           // 0x0000(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0xF];                                      // 0x02E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value_1;                         // 0x02F0(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0xF];                                      // 0x05D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value_2;                         // 0x05E0(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0xF];                                      // 0x08C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value_3;                         // 0x08D0(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0BB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0BB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB5[0x3];                                      // 0x0BB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend) == 0x000BE0, "Wrong size on BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_ReturnValue) == 0x0002E0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_Value_1) == 0x0002F0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_ReturnValue_1) == 0x0005D0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_Value_2) == 0x0005E0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_ReturnValue_2) == 0x0008C0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_Value_3) == 0x0008D0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Map_Find_ReturnValue_3) == 0x000BB0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000BB1, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000BB2, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000BB3, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000BB4, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000BB8, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000BC0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000BC8, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000BD0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePostProcessBlend::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.BiomePPVValidChecks
// 0x1800 (0x1800 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks final
{
public:
	struct FSTRUCT_PostProcessDefaultSettings     STRUCT_PostProcessDefaultSettings;                 // 0x0000(0x02E0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 Biome_Color;                                       // 0x02E0(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         BiomeAmount;                                       // 0x02F0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x02F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0330(0x06E0)()
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_1;           // 0x0A10(0x06E0)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x10F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x10F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F3[0x5];                                     // 0x10F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings_2;           // 0x1100(0x06E0)()
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x17E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x17E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_AutoExposureBias_ImplicitCast;   // 0x17F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks) == 0x001800, "Wrong size on BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, STRUCT_PostProcessDefaultSettings) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::STRUCT_PostProcessDefaultSettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, Biome_Color) == 0x0002E0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::Biome_Color' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, BiomeAmount) == 0x0002F0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::BiomeAmount' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Concat_StrStr_ReturnValue) == 0x0002F8, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000308, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Conv_StringToName_ReturnValue) == 0x000318, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000320, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, K2Node_MakeStruct_PostProcessSettings) == 0x000330, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, K2Node_MakeStruct_PostProcessSettings_1) == 0x000A10, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::K2Node_MakeStruct_PostProcessSettings_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_IsValid_ReturnValue) == 0x0010F0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0010F1, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_IsValid_ReturnValue_1) == 0x0010F2, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Lerp_ReturnValue) == 0x0010F8, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, K2Node_MakeStruct_PostProcessSettings_2) == 0x001100, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::K2Node_MakeStruct_PostProcessSettings_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0017E0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, CallFunc_Lerp_A_ImplicitCast) == 0x0017E8, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks, K2Node_MakeStruct_AutoExposureBias_ImplicitCast) == 0x0017F0, "Member 'BP_VerraWorld_GlobalSky_C_BiomePPVValidChecks::K2Node_MakeStruct_AutoExposureBias_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.BlendCurrentAtmoAndWeather
// 0x06C8 (0x06C8 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_S_Curve_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerraGlobalSkySettings                CallFunc_BlendAtmo_OutAtmoSettings;                // 0x0018(0x01F0)(NoDestructor)
	struct FVerraGlobalSkySettingsBoolSwitches    CallFunc_BlendAtmo_OutAtmoBools;                   // 0x0208(0x0044)(NoDestructor)
	struct FVerraGlobalSkySettings                CallFunc_BlendAtmo_OutAtmoSettings_1;              // 0x024C(0x01F0)(NoDestructor)
	struct FVerraGlobalSkySettingsBoolSwitches    CallFunc_BlendAtmo_OutAtmoBools_1;                 // 0x043C(0x0044)(NoDestructor)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVerraGlobalSkySettings                CallFunc_BlendAtmo_OutAtmoSettings_2;              // 0x0484(0x01F0)(NoDestructor)
	struct FVerraGlobalSkySettingsBoolSwitches    CallFunc_BlendAtmo_OutAtmoBools_2;                 // 0x0674(0x0044)(NoDestructor)
	float                                         CallFunc_BlendAtmo_Alpha_ImplicitCast;             // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendAtmo_Alpha_ImplicitCast_1;           // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BlendAtmo_Alpha_ImplicitCast_2;           // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather) == 0x0006C8, "Wrong size on BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, ReturnValue) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_S_Curve_ReturnValue) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_S_Curve_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoSettings) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoSettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoBools) == 0x000208, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoBools' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoSettings_1) == 0x00024C, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoSettings_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoBools_1) == 0x00043C, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoBools_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000480, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoSettings_2) == 0x000484, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoSettings_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_OutAtmoBools_2) == 0x000674, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_OutAtmoBools_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_Alpha_ImplicitCast) == 0x0006B8, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_Alpha_ImplicitCast_1) == 0x0006BC, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather, CallFunc_BlendAtmo_Alpha_ImplicitCast_2) == 0x0006C0, "Member 'BP_VerraWorld_GlobalSky_C_BlendCurrentAtmoAndWeather::CallFunc_BlendAtmo_Alpha_ImplicitCast_2' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Cast
// 0x0048 (0x0048 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Cast final
{
public:
	bool                                          Cast_Is_Valid;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABiomeManager*                          K2Node_DynamicCast_AsBiome_Manager;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGlobalAtmosphere*                      K2Node_DynamicCast_AsGlobal_Atmosphere;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioManager_C*                     K2Node_DynamicCast_AsBP_Audio_Manager;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ConstellationManager_C*             K2Node_DynamicCast_AsBP_Constellation_Manager;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Cast) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Cast");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Cast) == 0x000048, "Wrong size on BP_VerraWorld_GlobalSky_C_Cast");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, Cast_Is_Valid) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Cast::Cast_Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_AsBiome_Manager) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_AsBiome_Manager' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_AsGlobal_Atmosphere) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_AsGlobal_Atmosphere' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_AsBP_Audio_Manager) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_AsBP_Audio_Manager' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_AsBP_Constellation_Manager) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_AsBP_Constellation_Manager' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Cast, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_Cast::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Add Blend Settings
// 0x0018 (0x0018 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings final
{
public:
	struct FAtmoBlendSettings                     Blend_Settings;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Override_Volmume_Hash;                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings) == 0x000018, "Wrong size on BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings, Blend_Settings) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings::Blend_Settings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings, Override_Volmume_Hash) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Event___Add_Blend_Settings::Override_Volmume_Hash' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Current Tranistion
// 0x0010 (0x0010 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion final
{
public:
	int32                                         Hash_Name;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Current_Transition;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion) == 0x000010, "Wrong size on BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion, Hash_Name) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion::Hash_Name' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion, Current_Transition) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Event___Current_Tranistion::Current_Transition' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event - Remove Blend
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Event___Remove_Blend final
{
public:
	int32                                         Hash_Name;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Event___Remove_Blend) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Event___Remove_Blend");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Event___Remove_Blend) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_Event___Remove_Blend");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event___Remove_Blend, Hash_Name) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Event___Remove_Blend::Hash_Name' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event Set Biome
// 0x0002 (0x0002 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Event_Set_Biome final
{
public:
	bool                                          Set_Biome;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    Biome;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Event_Set_Biome) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Event_Set_Biome");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Event_Set_Biome) == 0x000002, "Wrong size on BP_VerraWorld_GlobalSky_C_Event_Set_Biome");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event_Set_Biome, Set_Biome) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Event_Set_Biome::Set_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event_Set_Biome, Biome) == 0x000001, "Member 'BP_VerraWorld_GlobalSky_C_Event_Set_Biome::Biome' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Event Set Fog
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Event_Set_Fog final
{
public:
	double                                        Fog_Amount_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Event_Set_Fog) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Event_Set_Fog");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Event_Set_Fog) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_Event_Set_Fog");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Event_Set_Fog, Fog_Amount_0) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Event_Set_Fog::Fog_Amount_0' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.EventSetWetness
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_EventSetWetness final
{
public:
	double                                        Wetness_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_EventSetWetness) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_EventSetWetness");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_EventSetWetness) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_EventSetWetness");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_EventSetWetness, Wetness_0) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_EventSetWetness::Wetness_0' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ExecuteUbergraph_BP_VerraWorld_GlobalSky
// 0x0CC0 (0x0CC0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_GameTimeNormalized;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_TimeOfDay24h;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UIntrepidGameUserSettings*              CallFunc_GetIntrepidGameUserSettings_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOverallScalabilityLevel_ReturnValue;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initalize_BiomeManager_Returned_Correct_Biome; // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0058(0x0008)(NoDestructor)
	bool                                          K2Node_Event_bIsEnbabled;                          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Temperature;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Precipitation;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_WindSpeed;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_WindDirection;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnabled;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEnabled_1;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSingleDayClimate                      CallFunc_Apply_Weather_Override_Output_Get;        // 0x0090(0x0028)()
	float                                         K2Node_Event_Humidity;                             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UIntrepidGameUserSettings*              CallFunc_GetIntrepidGameUserSettings_ReturnValue_1; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOverallScalabilityLevel_ReturnValue_1; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue_1;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           UniqueObjectNameForCooking_LinearColor;            // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1;   // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_1;     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_1;  // 0x0170(0x0008)(NoDestructor)
	struct FSingleDayClimate                      CallFunc_Apply_Weather_Override_Output_Get_1;      // 0x0178(0x0028)()
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2;   // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size_2;     // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context_2;  // 0x01B8(0x0008)(NoDestructor)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           UniqueObjectNameForCooking_LinearColor_1;          // 0x01CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraParameterCollectionInstance*    CallFunc_GetNiagaraParameterCollection_ReturnValue; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ChanceOfPrecipitation;                // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Current_Temp;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Precipitation_Amount;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Normalized_Temperature;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Final_Humidity;                 // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeatherEvent_C*                     CallFunc_Array_Get_Item;                           // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAtmoBlendSettings                     K2Node_CustomEvent_Blend_Settings;                 // 0x0278(0x0010)(NoDestructor)
	int32                                         K2Node_CustomEvent_Override_Volmume_Hash;          // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FAtmoBlendSettings>        CallFunc_SortAtmoOverrides_ReturnValue;            // 0x0290(0x0050)()
	int32                                         K2Node_CustomEvent_Hash_Name_1;                    // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Hash_Name;                      // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Current_Transition;             // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_InGameTimeSeconds;                    // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Custom_Humidity_Max;                  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Humidity_Min;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Precipitation_Amount_Max;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Precipitation_Amount_Min;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Temp_Max;                      // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Temp_Min;                      // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_WindSpeed_Max;                 // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Wind_Speed_Min;                // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Chance_Of_Precip_Max;          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Custom_Chance_Of_Precip_Min;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Value;                          // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Transition;                           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Set_Biome;                      // 0x036A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBiomeType                                    K2Node_CustomEvent_Biome;                          // 0x036B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0376(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377[0x1];                                      // 0x0377(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        CallFunc_Get_Month_ReturnValue;                    // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386[0x2];                                      // 0x0386(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue_2;               // 0x0392(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393[0x5];                                      // 0x0393(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBasicParticleData>             K2Node_Event_Data;                                 // 0x0398(0x0010)(ConstParm, ReferenceParm)
	class UNiagaraSystem*                         K2Node_Event_NiagaraSystem;                        // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_SimulationPositionOffset;             // 0x03B0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46B[0x5];                                      // 0x046B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Post_Process_Blend_Day_Night_Output_Get;  // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             UniqueObjectNameForCooking_OutputDelegate;         // 0x04B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_10;                             // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x04D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x04DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x04DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerraGlobalSkySettings                CallFunc_UpdateFogBasedOnHeight_ReturnGlobalSkySettings; // 0x04DC(0x01F0)(NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x06CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CF[0x1];                                      // 0x06CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0700(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0724(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_ReadRenderTargetRawPixel_ReturnValue;     // 0x0728(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_5;               // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue;                      // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_1;                         // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x07FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FE[0x2];                                      // 0x07FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0818(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0828(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0860(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0878(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue_1;   // 0x0898(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_7;                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue_1;     // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x08D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0909(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x090A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90B[0x5];                                      // 0x090B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0910(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0970(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0978(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x097C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_2;                 // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x3];                                      // 0x0981(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0984(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_3;                 // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98A[0x6];                                      // 0x098A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioManager_C*                     K2Node_DynamicCast_AsBP_Audio_Manager;             // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Condition;                      // 0x0999(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x099A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CalculateShouldLighting_CouldLightning;   // 0x099B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Fog_Amount;                     // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x09A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AA[0x6];                                      // 0x09AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_12;               // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x09BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x09BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_6;               // 0x09D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize2D_ReturnValue_1;                    // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Wind_Override_Output_Get;                 // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UIntrepidSkySubsystem*                  CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USpatialAnalyzerSubsystem*              CallFunc_GetWorldSubsystem_ReturnValue_1;          // 0x0A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A19[0x3];                                      // 0x0A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double Value)>                 UniqueObjectNameForCooking_OutputDelegate_1;       // 0x0A1C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BlendCurrentAtmoAndWeather_ReturnValue;   // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBlendDomain_DayNight                         Temp_byte_Variable;                                // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A39[0x7];                                      // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Wetness;                        // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A51[0x3];                                      // 0x0A51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0A54(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_4;                 // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A59[0x3];                                      // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0A60(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A64[0x4];                                      // 0x0A64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value_2;                         // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0A74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A75[0x3];                                      // 0x0A75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 Hash_Name, double Current_Transition)> UniqueObjectNameForCooking_OutputDelegate_2; // 0x0A78(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_13;               // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8A[0x6];                                      // 0x0A8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Hash_Name)>              UniqueObjectNameForCooking_OutputDelegate_3;       // 0x0A98(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FAtmoBlendSettings& Blend_Settings, int32 Override_Volmume_Hash)> UniqueObjectNameForCooking_OutputDelegate_4; // 0x0AA8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABA[0x6];                                      // 0x0ABA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSingleDayClimate                      K2Node_Select_Default_3;                           // 0x0AC0(0x0028)()
	double                                        CallFunc_Calculate_Weather_Normalized_Temp_Return; // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Amount_of_Precip_Return; // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Humidity_Return;        // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Normalized_DewPoint_Return; // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Wetness_Return;         // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Local_Fog_Return;       // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Cloud_Lerp_Return;      // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Weather_RainCondition                       CallFunc_Assign_Weather_Conditions_RainCondition;  // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Weather_SnowCondition                       CallFunc_Assign_Weather_Conditions_SnowCondition;  // 0x0B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Weather_WindCondition                       CallFunc_Assign_Weather_Conditions_WindCondition;  // 0x0B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Weather_HumidityCondition                   CallFunc_Assign_Weather_Conditions_HumidityCondition; // 0x0B23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Weather_FogCondition                        CallFunc_Assign_Weather_Conditions_FogCondition;   // 0x0B24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B25[0x3];                                      // 0x0B25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2C[0x4];                                      // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_A_ImplicitCast;         // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFinalOutputsNative_InCurrentTemp_ImplicitCast; // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFinalOutputsNative_InPrecipAmount_ImplicitCast; // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFinalOutputsNative_InNormalizedTemp_ImplicitCast; // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFinalOutputsNative_InFinalHumidity_ImplicitCast; // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast;   // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast_1; // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast_2; // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast_3; // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast_4; // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_InValue_ImplicitCast_5; // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Add_Value_ImplicitCast;               // 0x0B74(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomHumidityMax_ImplicitCast; // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomHumidityMin_ImplicitCast; // 0x0B7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomPrecipAmountMax_ImplicitCast; // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomPrecipAmountMin_ImplicitCast; // 0x0B84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomTempMax_ImplicitCast; // 0x0B88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomTempMin_ImplicitCast; // 0x0B8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomWindSpeedMax_ImplicitCast; // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomWindSpeedMin_ImplicitCast; // 0x0B94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMax_ImplicitCast; // 0x0B98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMin_ImplicitCast; // 0x0B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_InteriorAmount_ImplicitCast;    // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WeatherTransitionNative_InTransition_ImplicitCast; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast; // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3;   // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Run_Audio_OutdoorAmount_ImplicitCast;     // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Run_Audio_Dungeon_Amount_ImplicitCast;    // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendedWindSpeed_ImplicitCast;  // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BlendedWindDirection_ImplicitCast; // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast_1;     // 0x0C00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_Y_ImplicitCast;                  // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x0C18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_X_ImplicitCast;                  // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WindDirectionFromRT_ImplicitCast; // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WindSpeedFromRT_ImplicitCast;   // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0C30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast;                      // 0x0C38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_B_ImplicitCast_1;                    // 0x0C40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Day_ImplicitCast;                    // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Both_ImplicitCast;                   // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Night_ImplicitCast;                  // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0C64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0C68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6C[0x4];                                      // 0x0C6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Rotate_Constellations_Normalized_Sunrise_ImplicitCast; // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Time_Of_Day_2400_ImplicitCast; // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Calculate_Weather_Delta_Seconds_ImplicitCast; // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WindDirectionFromRT_ImplicitCast_1; // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_WindSpeedFromRT_ImplicitCast_1; // 0x0CA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Wetness_ImplicitCast;           // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast; // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Wetness_ImplicitCast_1;         // 0x0CB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky) == 0x000CC0, "Wrong size on BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, EntryPoint) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable) == 0x000004, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_GameTimeNormalized) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_GameTimeNormalized' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_TimeOfDay24h) == 0x00000C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_TimeOfDay24h' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetIntrepidGameUserSettings_ReturnValue) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetIntrepidGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetOverallScalabilityLevel_ReturnValue) == 0x000024, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetOverallScalabilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Initalize_BiomeManager_Returned_Correct_Biome) == 0x000029, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Initalize_BiomeManager_Returned_Correct_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_1) == 0x00002A, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsWithEditor_ReturnValue) == 0x00002B, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetTimeSeconds_ReturnValue) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000048, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000058, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_bIsEnbabled) == 0x000060, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_bIsEnbabled' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Temperature) == 0x000064, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Temperature' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Precipitation) == 0x000068, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Precipitation' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_WindSpeed) == 0x000080, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_WindSpeed' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_WindDirection) == 0x000084, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_WindDirection' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_bIsEnabled) == 0x000088, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_bIsEnabled' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_bIsEnabled_1) == 0x000089, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_bIsEnabled_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Apply_Weather_Override_Output_Get) == 0x000090, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Apply_Weather_Override_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Humidity) == 0x0000B8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Humidity' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetIntrepidGameUserSettings_ReturnValue_1) == 0x0000C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetIntrepidGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetOverallScalabilityLevel_ReturnValue_1) == 0x0000C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetOverallScalabilityLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_2) == 0x0000CC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000CD, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_2) == 0x0000E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000E1, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0000E4, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetGameState_ReturnValue_1) == 0x000100, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000108, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_3) == 0x000110, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_RandomFloatInRange_ReturnValue) == 0x000118, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsWithEditor_ReturnValue_1) == 0x000120, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsWithEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeRotator_ReturnValue) == 0x000130, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_LinearColor) == 0x000148, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1) == 0x000158, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Size_1) == 0x000160, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Size_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Context_1) == 0x000170, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Context_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Apply_Weather_Override_Output_Get_1) == 0x000178, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Apply_Weather_Override_Output_Get_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2) == 0x0001A0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Canvas_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Size_2) == 0x0001A8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Size_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BeginDrawCanvasToRenderTarget_Context_2) == 0x0001B8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BeginDrawCanvasToRenderTarget_Context_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0001C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_3) == 0x0001C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_LinearColor_1) == 0x0001CC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_LinearColor_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001DC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0001E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_4) == 0x0001E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Lerp_ReturnValue) == 0x0001F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_3) == 0x0001F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetNiagaraParameterCollection_ReturnValue) == 0x000200, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetNiagaraParameterCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_ChanceOfPrecipitation) == 0x000208, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_ChanceOfPrecipitation' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Current_Temp) == 0x000210, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Current_Temp' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Precipitation_Amount) == 0x000218, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Precipitation_Amount' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Normalized_Temperature) == 0x000220, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Normalized_Temperature' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Final_Humidity) == 0x000228, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Final_Humidity' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Array_Index_Variable) == 0x000230, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Array_Get_Item) == 0x000238, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_4) == 0x000240, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Loop_Counter_Variable) == 0x000244, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Less_IntInt_ReturnValue) == 0x000248, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_IntInt_ReturnValue) == 0x00024C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector2D_X) == 0x000250, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector2D_Y) == 0x000258, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector_ReturnValue) == 0x000260, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Blend_Settings) == 0x000278, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Blend_Settings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Override_Volmume_Hash) == 0x000288, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Override_Volmume_Hash' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SortAtmoOverrides_ReturnValue) == 0x000290, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SortAtmoOverrides_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Hash_Name_1) == 0x0002E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Hash_Name_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Hash_Name) == 0x0002E4, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Hash_Name' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Current_Transition) == 0x0002E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Current_Transition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_InGameTimeSeconds) == 0x0002F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_InGameTimeSeconds' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Remove_ReturnValue) == 0x000300, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanAND_ReturnValue) == 0x000301, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_True_if_break_was_hit_Variable) == 0x000302, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_4) == 0x000303, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanAND_ReturnValue_1) == 0x000304, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Humidity_Max) == 0x000308, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Humidity_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Humidity_Min) == 0x000310, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Humidity_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Precipitation_Amount_Max) == 0x000318, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Precipitation_Amount_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Precipitation_Amount_Min) == 0x000320, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Precipitation_Amount_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Temp_Max) == 0x000328, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Temp_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Temp_Min) == 0x000330, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Temp_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_WindSpeed_Max) == 0x000338, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_WindSpeed_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Wind_Speed_Min) == 0x000340, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Wind_Speed_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Chance_Of_Precip_Max) == 0x000348, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Chance_Of_Precip_Max' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Custom_Chance_Of_Precip_Min) == 0x000350, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Custom_Chance_Of_Precip_Min' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Value) == 0x000358, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Transition) == 0x000360, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_5) == 0x000368, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_5) == 0x000369, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Set_Biome) == 0x00036A, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Set_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Biome) == 0x00036B, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_6) == 0x00036C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_DeltaTime) == 0x000370, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_6) == 0x000374, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_7) == 0x000375, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_7) == 0x000376, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000378, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_DeltaSeconds) == 0x000380, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Get_Month_ReturnValue) == 0x000384, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Get_Month_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_8) == 0x000385, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetGameState_ReturnValue_2) == 0x000388, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_8) == 0x000390, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_5) == 0x000391, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsWithEditor_ReturnValue_2) == 0x000392, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsWithEditor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_Data) == 0x000398, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_Data' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_NiagaraSystem) == 0x0003A8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Event_SimulationPositionOffset) == 0x0003B0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Event_SimulationPositionOffset' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X) == 0x0003C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y) == 0x0003D0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z) == 0x0003D8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0003F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0003F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_1) == 0x000400, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_1) == 0x000408, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_1) == 0x000410, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_2) == 0x000418, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_2) == 0x000420, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_2) == 0x000428, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_3) == 0x000430, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_3) == 0x000438, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_3) == 0x000440, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_2) == 0x000448, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_3) == 0x000458, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_9) == 0x000468, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_9) == 0x000469, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_6) == 0x00046A, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Post_Process_Blend_Day_Night_Output_Get) == 0x000470, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Post_Process_Blend_Day_Night_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000478, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000480, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000488, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000490, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeRotator_ReturnValue_1) == 0x000498, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_OutputDelegate) == 0x0004B0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_ComposeRotators_ReturnValue) == 0x0004C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_10) == 0x0004D8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_11) == 0x0004D9, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_10) == 0x0004DA, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_11) == 0x0004DB, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_UpdateFogBasedOnHeight_ReturnGlobalSkySettings) == 0x0004DC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_UpdateFogBasedOnHeight_ReturnGlobalSkySettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanOR_ReturnValue) == 0x0006CC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanOR_ReturnValue_1) == 0x0006CD, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_7) == 0x0006CE, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0006D0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0006D8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0006E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0006E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0006F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0006F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_4) == 0x000700, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FTrunc_ReturnValue) == 0x000710, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000718, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FTrunc_ReturnValue_1) == 0x000720, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Remove_ReturnValue_1) == 0x000724, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_ReadRenderTargetRawPixel_ReturnValue) == 0x000728, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_ReadRenderTargetRawPixel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Has_Been_Initd_Variable) == 0x000738, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_DegAtan2_ReturnValue) == 0x000740, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_5) == 0x000748, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000758, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_VSize2D_ReturnValue) == 0x000760, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000768, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_ReturnValue) == 0x000770, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_4) == 0x000778, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_4) == 0x000780, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_4) == 0x000788, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_ReturnValue_1) == 0x000790, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector_ReturnValue_1) == 0x000798, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_ReturnValue_2) == 0x0007B0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0007B8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_Value) == 0x0007C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_ReturnValue) == 0x0007C4, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0007C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_VectorVector_ReturnValue) == 0x0007E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_Value_1) == 0x0007F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_ReturnValue_1) == 0x0007FC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanOR_ReturnValue_2) == 0x0007FD, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_5) == 0x000800, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_5) == 0x000808, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_5) == 0x000810, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_MakeStruct_LinearColor) == 0x000818, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000828, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000830, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_6) == 0x000848, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_6) == 0x000850, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_6) == 0x000858, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector_ReturnValue_2) == 0x000860, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000878, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000890, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_RandomPointInBoundingBox_ReturnValue_1) == 0x000898, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_RandomPointInBoundingBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_X_7) == 0x0008B0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Y_7) == 0x0008B8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BreakVector_Z_7) == 0x0008C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_K2_IsTimerPausedHandle_ReturnValue_1) == 0x0008C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_K2_IsTimerPausedHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector_ReturnValue_3) == 0x0008D0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0008E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0008F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FClamp_ReturnValue) == 0x0008F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FClamp_ReturnValue_1) == 0x000900, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000908, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000909, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanAND_ReturnValue_2) == 0x00090A, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_struct_Variable) == 0x000910, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AddComponent_ReturnValue) == 0x000970, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Variable) == 0x000978, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_real_Variable) == 0x00097C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Remove_ReturnValue_2) == 0x000980, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Variable_1) == 0x000984, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Remove_ReturnValue_3) == 0x000988, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Remove_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsServer_ReturnValue) == 0x000989, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_DynamicCast_AsBP_Audio_Manager) == 0x000990, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_DynamicCast_AsBP_Audio_Manager' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_DynamicCast_bSuccess) == 0x000998, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Condition) == 0x000999, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Condition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_8) == 0x00099A, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_CalculateShouldLighting_CouldLightning) == 0x00099B, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_CalculateShouldLighting_CouldLightning' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Fog_Amount) == 0x0009A0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Fog_Amount' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_12) == 0x0009A8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0009A9, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Default) == 0x0009B0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_13) == 0x0009B8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_12) == 0x0009B9, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_IsClosed_Variable) == 0x0009BA, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_14) == 0x0009BB, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Default_1) == 0x0009C0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_DegAtan2_ReturnValue_1) == 0x0009C8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_ReturnValue_6) == 0x0009D0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0009E0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_VSize2D_ReturnValue_1) == 0x0009E8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0009F0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_ReturnValue_3) == 0x0009F8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Wind_Override_Output_Get) == 0x000A00, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Wind_Override_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000A08, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetWorldSubsystem_ReturnValue_1) == 0x000A10, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetWorldSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_IsValid_ReturnValue_9) == 0x000A18, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_OutputDelegate_1) == 0x000A1C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BlendCurrentAtmoAndWeather_ReturnValue) == 0x000A30, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BlendCurrentAtmoAndWeather_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_byte_Variable) == 0x000A38, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_CustomEvent_Wetness) == 0x000A40, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_CustomEvent_Wetness' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Default_2) == 0x000A48, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000A50, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Variable_2) == 0x000A54, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Remove_ReturnValue_4) == 0x000A58, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Remove_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000A5C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_int_Variable_3) == 0x000A60, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000A68, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_Value_2) == 0x000A70, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Find_ReturnValue_2) == 0x000A74, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_OutputDelegate_2) == 0x000A78, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, Temp_bool_Variable_15) == 0x000A88, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Not_PreBool_ReturnValue_13) == 0x000A89, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Not_PreBool_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000A90, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_OutputDelegate_3) == 0x000A98, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_OutputDelegate_4) == 0x000AA8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanOR_ReturnValue_3) == 0x000AB8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_BooleanOR_ReturnValue_4) == 0x000AB9, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Default_3) == 0x000AC0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Normalized_Temp_Return) == 0x000AE8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Normalized_Temp_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Amount_of_Precip_Return) == 0x000AF0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Amount_of_Precip_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Humidity_Return) == 0x000AF8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Humidity_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Normalized_DewPoint_Return) == 0x000B00, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Normalized_DewPoint_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Wetness_Return) == 0x000B08, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Wetness_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Local_Fog_Return) == 0x000B10, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Local_Fog_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Cloud_Lerp_Return) == 0x000B18, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Cloud_Lerp_Return' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Assign_Weather_Conditions_RainCondition) == 0x000B20, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Assign_Weather_Conditions_RainCondition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Assign_Weather_Conditions_SnowCondition) == 0x000B21, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Assign_Weather_Conditions_SnowCondition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Assign_Weather_Conditions_WindCondition) == 0x000B22, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Assign_Weather_Conditions_WindCondition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Assign_Weather_Conditions_HumidityCondition) == 0x000B23, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Assign_Weather_Conditions_HumidityCondition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Assign_Weather_Conditions_FogCondition) == 0x000B24, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Assign_Weather_Conditions_FogCondition' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000B28, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000B30, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000B38, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000B40, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, UniqueObjectNameForCooking_A_ImplicitCast) == 0x000B44, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::UniqueObjectNameForCooking_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_MakeStruct_A_ImplicitCast) == 0x000B48, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFinalOutputsNative_InCurrentTemp_ImplicitCast) == 0x000B4C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFinalOutputsNative_InCurrentTemp_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFinalOutputsNative_InPrecipAmount_ImplicitCast) == 0x000B50, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFinalOutputsNative_InPrecipAmount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFinalOutputsNative_InNormalizedTemp_ImplicitCast) == 0x000B54, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFinalOutputsNative_InNormalizedTemp_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFinalOutputsNative_InFinalHumidity_ImplicitCast) == 0x000B58, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFinalOutputsNative_InFinalHumidity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast) == 0x000B5C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast_1) == 0x000B60, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast_2) == 0x000B64, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast_3) == 0x000B68, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast_4) == 0x000B6C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_SetFloatParameter_InValue_ImplicitCast_5) == 0x000B70, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_SetFloatParameter_InValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Map_Add_Value_ImplicitCast) == 0x000B74, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Map_Add_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomHumidityMax_ImplicitCast) == 0x000B78, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomHumidityMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomHumidityMin_ImplicitCast) == 0x000B7C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomHumidityMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomPrecipAmountMax_ImplicitCast) == 0x000B80, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomPrecipAmountMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomPrecipAmountMin_ImplicitCast) == 0x000B84, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomPrecipAmountMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomTempMax_ImplicitCast) == 0x000B88, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomTempMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomTempMin_ImplicitCast) == 0x000B8C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomTempMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomWindSpeedMax_ImplicitCast) == 0x000B90, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomWindSpeedMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomWindSpeedMin_ImplicitCast) == 0x000B94, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomWindSpeedMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMax_ImplicitCast) == 0x000B98, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMin_ImplicitCast) == 0x000B9C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_AdjustWeatherNative_InCustomChanceOfPrecipMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_InteriorAmount_ImplicitCast) == 0x000BA0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_InteriorAmount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_WeatherTransitionNative_InTransition_ImplicitCast) == 0x000BA4, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_WeatherTransitionNative_InTransition_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast) == 0x000BA8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000BB0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x000BB8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3) == 0x000BC0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000BC8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000BCC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Run_Audio_OutdoorAmount_ImplicitCast) == 0x000BD0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Run_Audio_OutdoorAmount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Run_Audio_Dungeon_Amount_ImplicitCast) == 0x000BD8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Run_Audio_Dungeon_Amount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_BlendedWindSpeed_ImplicitCast) == 0x000BE0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_BlendedWindSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_BlendedWindDirection_ImplicitCast) == 0x000BE8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_BlendedWindDirection_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000BF0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000BF8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Divide_DoubleDouble_B_ImplicitCast_1) == 0x000C00, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Divide_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_X_ImplicitCast) == 0x000C08, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_DegAtan2_Y_ImplicitCast) == 0x000C10, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_DegAtan2_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x000C18, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_DegAtan2_X_ImplicitCast) == 0x000C20, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_DegAtan2_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_WindDirectionFromRT_ImplicitCast) == 0x000C28, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_WindDirectionFromRT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_WindSpeedFromRT_ImplicitCast) == 0x000C2C, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_WindSpeedFromRT_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_A_ImplicitCast) == 0x000C30, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_B_ImplicitCast) == 0x000C38, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_FMax_B_ImplicitCast_1) == 0x000C40, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_FMax_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Day_ImplicitCast) == 0x000C48, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Day_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Both_ImplicitCast) == 0x000C50, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Both_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_Select_Night_ImplicitCast) == 0x000C58, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_Select_Night_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_MakeStruct_R_ImplicitCast) == 0x000C60, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_MakeStruct_G_ImplicitCast) == 0x000C64, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_MakeStruct_B_ImplicitCast) == 0x000C68, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000C70, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000C78, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Rotate_Constellations_Normalized_Sunrise_ImplicitCast) == 0x000C80, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Rotate_Constellations_Normalized_Sunrise_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Time_Of_Day_2400_ImplicitCast) == 0x000C88, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Time_Of_Day_2400_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Calculate_Weather_Delta_Seconds_ImplicitCast) == 0x000C90, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Calculate_Weather_Delta_Seconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x000C98, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_WindDirectionFromRT_ImplicitCast_1) == 0x000CA0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_WindDirectionFromRT_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_WindSpeedFromRT_ImplicitCast_1) == 0x000CA4, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_WindSpeedFromRT_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_Wetness_ImplicitCast) == 0x000CA8, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_Wetness_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast) == 0x000CAC, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky, K2Node_VariableSet_Wetness_ImplicitCast_1) == 0x000CB0, "Member 'BP_VerraWorld_GlobalSky_C_ExecuteUbergraph_BP_VerraWorld_GlobalSky::K2Node_VariableSet_Wetness_ImplicitCast_1' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Get 0-1 TimeOfDay Normalized
// 0x0018 (0x0018 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized final
{
public:
	double                                        Zero_1_Time_of_Day_Normalized;                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Get01TimeOfDayNormalizedNative_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_0_1_Time_of_Day_Normalized_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized) == 0x000018, "Wrong size on BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized, Zero_1_Time_of_Day_Normalized) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized::Zero_1_Time_of_Day_Normalized' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized, CallFunc_Get01TimeOfDayNormalizedNative_ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized::CallFunc_Get01TimeOfDayNormalizedNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized, K2Node_FunctionResult_0_1_Time_of_Day_Normalized_ImplicitCast) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Get_0_1_TimeOfDay_Normalized::K2Node_FunctionResult_0_1_Time_of_Day_Normalized_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Get Month
// 0x0030 (0x0030 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Get_Month final
{
public:
	EMonth                                        ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_5;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_6;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_7;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_8;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_9;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_10;                             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        Temp_byte_Variable_11;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Get_Month) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Get_Month");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Get_Month) == 0x000030, "Wrong size on BP_VerraWorld_GlobalSky_C_Get_Month");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, ReturnValue) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_int_Variable) == 0x000004, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_1) == 0x000009, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_2) == 0x00000A, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_3) == 0x00000B, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_4) == 0x00000C, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_5) == 0x00000D, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_6) == 0x00000E, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_7) == 0x00000F, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_8) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_9) == 0x000011, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_10) == 0x000012, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, Temp_byte_Variable_11) == 0x000013, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, K2Node_Select_Default) == 0x000024, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Get_Month, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Get_Month::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GetMaxPrecip
// 0x0020 (0x0020 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_GetMaxPrecip final
{
public:
	EBiomeType                                    Biome;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxTemp;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxPrecipNative_ReturnValue;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_MaxTemp_ImplicitCast;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_GetMaxPrecip");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip) == 0x000020, "Wrong size on BP_VerraWorld_GlobalSky_C_GetMaxPrecip");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip, Biome) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_GetMaxPrecip::Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip, MaxTemp) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_GetMaxPrecip::MaxTemp' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip, CallFunc_GetMaxPrecipNative_ReturnValue) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_GetMaxPrecip::CallFunc_GetMaxPrecipNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetMaxPrecip, K2Node_FunctionResult_MaxTemp_ImplicitCast) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_GetMaxPrecip::K2Node_FunctionResult_MaxTemp_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GetWeatherType
// 0x0020 (0x0020 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_GetWeatherType final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeatherType                                  ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeatherType                                  CallFunc_GetWeatherTypeNative_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_GetWeatherType) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_GetWeatherType");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_GetWeatherType) == 0x000020, "Wrong size on BP_VerraWorld_GlobalSky_C_GetWeatherType");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetWeatherType, Location) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_GetWeatherType::Location' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetWeatherType, ReturnValue) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_GetWeatherType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GetWeatherType, CallFunc_GetWeatherTypeNative_ReturnValue) == 0x000019, "Member 'BP_VerraWorld_GlobalSky_C_GetWeatherType::CallFunc_GetWeatherTypeNative_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.GlobalSkyEditorTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick, DeltaTime) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_GlobalSkyEditorTick::DeltaTime' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initalize BiomeManager
// 0x0002 (0x0002 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager final
{
public:
	bool                                          Returned_Correct_Biome;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeBiomeManagerNative_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager) == 0x000002, "Wrong size on BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager, Returned_Correct_Biome) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager::Returned_Correct_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager, CallFunc_InitializeBiomeManagerNative_ReturnValue) == 0x000001, "Member 'BP_VerraWorld_GlobalSky_C_Initalize_BiomeManager::CallFunc_InitializeBiomeManagerNative_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Initialize Global Atmosphere
// 0x0003 (0x0003 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere final
{
public:
	bool                                          Sun_is_in_the_RIght_Spot;                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exclude_From_Construction;                         // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InitializeGlobalAtmosphereNative_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere) == 0x000003, "Wrong size on BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere, Sun_is_in_the_RIght_Spot) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere::Sun_is_in_the_RIght_Spot' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere, Exclude_From_Construction) == 0x000001, "Member 'BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere::Exclude_From_Construction' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere, CallFunc_InitializeGlobalAtmosphereNative_ReturnValue) == 0x000002, "Member 'BP_VerraWorld_GlobalSky_C_Initialize_Global_Atmosphere::CallFunc_InitializeGlobalAtmosphereNative_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Lerp 4Vector
// 0x00F0 (0x00F0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Lerp_4Vector final
{
public:
	struct FVector4                               in_Vector_A;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               in_Vector_B;                                       // 0x0020(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ALPHA;                                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               ReturnValue;                                       // 0x0050(0x0020)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_X;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_X_1;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y_1;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z_1;                         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W_1;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x00D0(0x0020)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Lerp_4Vector");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector) == 0x0000F0, "Wrong size on BP_VerraWorld_GlobalSky_C_Lerp_4Vector");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, in_Vector_A) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::in_Vector_A' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, in_Vector_B) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::in_Vector_B' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, ALPHA) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::ALPHA' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, ReturnValue) == 0x000050, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_X) == 0x000070, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_Y) == 0x000078, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_Z) == 0x000080, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_W) == 0x000088, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_X_1) == 0x000090, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_X_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_Y_1) == 0x000098, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_Y_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_Z_1) == 0x0000A0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_Z_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_BreakVector4_W_1) == 0x0000A8, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_BreakVector4_W_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_Lerp_ReturnValue_1) == 0x0000B8, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_Lerp_ReturnValue_2) == 0x0000C0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_Lerp_ReturnValue_3) == 0x0000C8, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_4Vector, CallFunc_MakeVector4_ReturnValue) == 0x0000D0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_4Vector::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Lerp Color Grade Per Range
// 0x02A0 (0x02A0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range final
{
public:
	struct FColorGradePerRangeSettings            ColorGradePerRangeSettings_A;                      // 0x0000(0x00A0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FColorGradePerRangeSettings            ColorGradePerRangeSettings_B;                      // 0x00A0(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	double                                        ALPHA;                                             // 0x0140(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColorGradePerRangeSettings            StructOut;                                         // 0x0150(0x00A0)(Parm, OutParm, NoDestructor)
	struct FColorGradePerRangeSettings            CallFunc_LerpColorGradePerRangeNative_OutSettings; // 0x01F0(0x00A0)(NoDestructor)
	float                                         CallFunc_LerpColorGradePerRangeNative_InAlpha_ImplicitCast; // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range) == 0x0002A0, "Wrong size on BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, ColorGradePerRangeSettings_A) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::ColorGradePerRangeSettings_A' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, ColorGradePerRangeSettings_B) == 0x0000A0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::ColorGradePerRangeSettings_B' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, ALPHA) == 0x000140, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::ALPHA' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, StructOut) == 0x000150, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::StructOut' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, CallFunc_LerpColorGradePerRangeNative_OutSettings) == 0x0001F0, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::CallFunc_LerpColorGradePerRangeNative_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range, CallFunc_LerpColorGradePerRangeNative_InAlpha_ImplicitCast) == 0x000290, "Member 'BP_VerraWorld_GlobalSky_C_Lerp_Color_Grade_Per_Range::CallFunc_LerpColorGradePerRangeNative_InAlpha_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Manage BP_LocalFX
// 0x00B0 (0x00B0 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAoCPlayerController*                   K2Node_DynamicCast_AsAo_CPlayer_Controller;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       CallFunc_GetActualPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LocalFX_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX) == 0x0000B0, "Wrong size on BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, K2Node_DynamicCast_AsAo_CPlayer_Controller) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::K2Node_DynamicCast_AsAo_CPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_GetActualPlayer_ReturnValue) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_GetActualPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_IsValid_ReturnValue_3) == 0x0000A0, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000A1, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX, CallFunc_IsValid_ReturnValue_4) == 0x0000A2, "Member 'BP_VerraWorld_GlobalSky_C_Manage_BP_LocalFX::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Neutral Env
// 0x0001 (0x0001 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Neutral_Env final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Neutral_Env) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Neutral_Env");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Neutral_Env) == 0x000001, "Wrong size on BP_VerraWorld_GlobalSky_C_Neutral_Env");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Neutral_Env, Condition) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Neutral_Env::Condition' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.OnInteriorAmountUpdated_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event, Value) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_OnInteriorAmountUpdated_Event::Value' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Post Process Blend Day Night
// 0x0C00 (0x0C00 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night final
{
public:
	double                                        ALPHA;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Output_Get;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LV__Lerp_ALpha;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value;                           // 0x0030(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0xF];                                      // 0x0311(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value_1;                         // 0x0320(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_601[0xF];                                      // 0x0601(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_PostProcessDefaultSettings     CallFunc_Map_Find_Value_2;                         // 0x0610(0x02E0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0900(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_901[0x7];                                      // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColorGradePerRangeSettings            CallFunc_Lerp_Color_Grade_Per_Range_StructOut;     // 0x0920(0x00A0)(NoDestructor)
	struct FColorGradePerRangeSettings            CallFunc_Lerp_Color_Grade_Per_Range_StructOut_1;   // 0x09C0(0x00A0)(NoDestructor)
	struct FColorGradePerRangeSettings            CallFunc_Lerp_Color_Grade_Per_Range_StructOut_2;   // 0x0A60(0x00A0)(NoDestructor)
	struct FColorGradePerRangeSettings            CallFunc_Lerp_Color_Grade_Per_Range_StructOut_3;   // 0x0B00(0x00A0)(NoDestructor)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast;   // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0BB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x0BB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_2;                    // 0x0BC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast_1; // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCC[0x4];                                      // 0x0BCC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_1;                    // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast_2;                    // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMax_ImplicitCast; // 0x0BE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMin_ImplicitCast; // 0x0BEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ColorCorrectionShadowsMax_ImplicitCast; // 0x0BF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night) == 0x000010, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night) == 0x000C00, "Wrong size on BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, ALPHA) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::ALPHA' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, Output_Get) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, LV__Lerp_ALpha) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::LV__Lerp_ALpha' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, Temp_name_Variable) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, Temp_name_Variable_1) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, Temp_name_Variable_2) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_Value) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_ReturnValue) == 0x000310, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_Value_1) == 0x000320, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_ReturnValue_1) == 0x000600, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_Value_2) == 0x000610, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Map_Find_ReturnValue_2) == 0x0008F0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_BooleanAND_ReturnValue) == 0x0008F1, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_ReturnValue) == 0x0008F8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_BooleanAND_ReturnValue_1) == 0x000900, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_ReturnValue_1) == 0x000908, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_ReturnValue_2) == 0x000910, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_ReturnValue_3) == 0x000918, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_Color_Grade_Per_Range_StructOut) == 0x000920, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_Color_Grade_Per_Range_StructOut' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_Color_Grade_Per_Range_StructOut_1) == 0x0009C0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_Color_Grade_Per_Range_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_Color_Grade_Per_Range_StructOut_2) == 0x000A60, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_Color_Grade_Per_Range_StructOut_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_Color_Grade_Per_Range_StructOut_3) == 0x000B00, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_Color_Grade_Per_Range_StructOut_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000BA0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000BA4, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast) == 0x000BA8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_B_ImplicitCast) == 0x000BB0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_B_ImplicitCast_1) == 0x000BB8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_B_ImplicitCast_2) == 0x000BC0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast_1) == 0x000BC8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::K2Node_SetFieldsInStruct_WhiteTemp_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_A_ImplicitCast) == 0x000BD0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_A_ImplicitCast_1) == 0x000BD8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, CallFunc_Lerp_A_ImplicitCast_2) == 0x000BE0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::CallFunc_Lerp_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMax_ImplicitCast) == 0x000BE8, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMax_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMin_ImplicitCast) == 0x000BEC, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::K2Node_SetFieldsInStruct_ColorCorrectionHighlightsMin_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night, K2Node_SetFieldsInStruct_ColorCorrectionShadowsMax_ImplicitCast) == 0x000BF0, "Member 'BP_VerraWorld_GlobalSky_C_Post_Process_Blend_Day_Night::K2Node_SetFieldsInStruct_ColorCorrectionShadowsMax_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.PostProcessBlendDayNightNative
// 0x0020 (0x0020 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative final
{
public:
	float                                         ALPHA;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Post_Process_Blend_Day_Night_Output_Get;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative) == 0x000020, "Wrong size on BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative, ALPHA) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative::ALPHA' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative, ReturnValue) == 0x000004, "Member 'BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative, CallFunc_Post_Process_Blend_Day_Night_Output_Get) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative::CallFunc_Post_Process_Blend_Day_Night_Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative, CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative::CallFunc_Post_Process_Blend_Day_Night_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_PostProcessBlendDayNightNative::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Random Weather Flucuations - Test Deletemelater
// 0x0018 (0x0018 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater final
{
public:
	double                                        In_Float;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        In_Time_of_Year_in_hours;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Post_Noise;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater) == 0x000018, "Wrong size on BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater, In_Float) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater::In_Float' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater, In_Time_of_Year_in_hours) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater::In_Time_of_Year_in_hours' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater, Post_Noise) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Random_Weather_Flucuations___Test_Deletemelater::Post_Noise' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ReceiveParticleData
// 0x0030 (0x0030 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_ReceiveParticleData final
{
public:
	TArray<struct FBasicParticleData>             Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SimulationPositionOffset;                          // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_ReceiveParticleData) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_ReceiveParticleData");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_ReceiveParticleData) == 0x000030, "Wrong size on BP_VerraWorld_GlobalSky_C_ReceiveParticleData");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ReceiveParticleData, Data) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_ReceiveParticleData::Data' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ReceiveParticleData, NiagaraSystem) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_ReceiveParticleData::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ReceiveParticleData, SimulationPositionOffset) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_ReceiveParticleData::SimulationPositionOffset' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_ReceiveTick");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_ReceiveTick) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_ReceiveTick");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Register InfoWaterRender
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender final
{
public:
	class ABP_WaterInfoRenderer_C*                Ref;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender, Ref) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Register_InfoWaterRender::Ref' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.S-Curve
// 0x0040 (0x0040 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_S_Curve final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_S_Curve) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_S_Curve");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_S_Curve) == 0x000040, "Wrong size on BP_VerraWorld_GlobalSky_C_S_Curve");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, In) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::In' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_S_Curve, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_S_Curve::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Set Final Outputs
// 0x0020 (0x0020 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Set_Final_Outputs final
{
public:
	double                                        Current_Temp;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Precipitation_Amount;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Normalized_Temperature;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Final_Humidity;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Set_Final_Outputs");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs) == 0x000020, "Wrong size on BP_VerraWorld_GlobalSky_C_Set_Final_Outputs");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs, Current_Temp) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Set_Final_Outputs::Current_Temp' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs, Precipitation_Amount) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Set_Final_Outputs::Precipitation_Amount' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs, Normalized_Temperature) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Set_Final_Outputs::Normalized_Temperature' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Set_Final_Outputs, Final_Humidity) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Set_Final_Outputs::Final_Humidity' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetAudioInEditor
// 0x0001 (0x0001 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetAudioInEditor final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetAudioInEditor) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetAudioInEditor");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetAudioInEditor) == 0x000001, "Wrong size on BP_VerraWorld_GlobalSky_C_SetAudioInEditor");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetAudioInEditor, bIsEnabled) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetAudioInEditor::bIsEnabled' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetChanceOfRain
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetChanceOfRain final
{
public:
	float                                         ChanceOfPrecipitation;                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetChanceOfRain) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetChanceOfRain");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetChanceOfRain) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetChanceOfRain");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetChanceOfRain, ChanceOfPrecipitation) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetChanceOfRain::ChanceOfPrecipitation' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameDay
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetGameDay final
{
public:
	float                                         TimeOfDay24h;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetGameDay) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetGameDay");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetGameDay) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetGameDay");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetGameDay, TimeOfDay24h) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetGameDay::TimeOfDay24h' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameTime
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetGameTime final
{
public:
	double                                        InGameTimeSeconds;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetGameTime) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetGameTime");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetGameTime) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_SetGameTime");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetGameTime, InGameTimeSeconds) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetGameTime::InGameTimeSeconds' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetGameYear
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetGameYear final
{
public:
	float                                         GameTimeNormalized;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetGameYear) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetGameYear");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetGameYear) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetGameYear");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetGameYear, GameTimeNormalized) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetGameYear::GameTimeNormalized' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetHumidity
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetHumidity final
{
public:
	float                                         Humidity;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetHumidity) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetHumidity");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetHumidity) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetHumidity");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetHumidity, Humidity) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetHumidity::Humidity' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetPrecipitation
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetPrecipitation final
{
public:
	float                                         Precipitation;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetPrecipitation) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetPrecipitation");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetPrecipitation) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetPrecipitation");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetPrecipitation, Precipitation) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetPrecipitation::Precipitation' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetServerIsAuth
// 0x0001 (0x0001 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetServerIsAuth final
{
public:
	bool                                          bIsEnbabled;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetServerIsAuth) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetServerIsAuth");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetServerIsAuth) == 0x000001, "Wrong size on BP_VerraWorld_GlobalSky_C_SetServerIsAuth");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetServerIsAuth, bIsEnbabled) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetServerIsAuth::bIsEnbabled' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetTemperature
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetTemperature final
{
public:
	float                                         Temperature;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetTemperature) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetTemperature");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetTemperature) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetTemperature");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetTemperature, Temperature) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetTemperature::Temperature' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetUseLuts
// 0x0001 (0x0001 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetUseLuts final
{
public:
	bool                                          bIsEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetUseLuts) == 0x000001, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetUseLuts");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetUseLuts) == 0x000001, "Wrong size on BP_VerraWorld_GlobalSky_C_SetUseLuts");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetUseLuts, bIsEnabled) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetUseLuts::bIsEnabled' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetWindDirection
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetWindDirection final
{
public:
	float                                         WindDirection;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetWindDirection) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetWindDirection");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetWindDirection) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetWindDirection");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetWindDirection, WindDirection) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetWindDirection::WindDirection' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.SetWindSpeed
// 0x0004 (0x0004 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_SetWindSpeed final
{
public:
	float                                         WindSpeed;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_SetWindSpeed) == 0x000004, "Wrong alignment on BP_VerraWorld_GlobalSky_C_SetWindSpeed");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_SetWindSpeed) == 0x000004, "Wrong size on BP_VerraWorld_GlobalSky_C_SetWindSpeed");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_SetWindSpeed, WindSpeed) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_SetWindSpeed::WindSpeed' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Sun Positions Function
// 0x0060 (0x0060 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Sun_Positions_Function final
{
public:
	bool                                          LV_SunHasSet;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LV_SunHasRisen;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue_1;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSunPositions_SunAltitude;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSunPositions_SunAzimuth;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSunPositions_NormalizedSunriseOUT;     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_0_1_TimeOfDay_Normalized_0_1_Time_of_Day_Normalized; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Sun_Positions_Function");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function) == 0x000060, "Wrong size on BP_VerraWorld_GlobalSky_C_Sun_Positions_Function");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, LV_SunHasSet) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::LV_SunHasSet' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, LV_SunHasRisen) == 0x000001, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::LV_SunHasRisen' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_MakeLiteralDouble_ReturnValue_1) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_MakeLiteralDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GetSunPositions_SunAltitude) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GetSunPositions_SunAltitude' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GetSunPositions_SunAzimuth) == 0x00001C, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GetSunPositions_SunAzimuth' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GetSunPositions_NormalizedSunriseOUT) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GetSunPositions_NormalizedSunriseOUT' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000024, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000025, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000026, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000027, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00002B, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_Get_0_1_TimeOfDay_Normalized_0_1_Time_of_Day_Normalized) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_Get_0_1_TimeOfDay_Normalized_0_1_Time_of_Day_Normalized' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000048, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x000050, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Sun_Positions_Function, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1) == 0x000058, "Member 'BP_VerraWorld_GlobalSky_C_Sun_Positions_Function::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Update Cloud Blend
// 0x0270 (0x0270 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend final
{
public:
	float                                         ALPHA;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerraGlobalSkyVolumetricCloudSettings ReturnValue;                                       // 0x0004(0x012C)(Parm, OutParm, ReturnParm, NoDestructor)
	double                                        ReturnValue1;                                      // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVerraGlobalSkyVolumetricCloudSettings CallFunc_UpdateCloudBlendNative_OutSettings;       // 0x0138(0x012C)(NoDestructor)
	float                                         CallFunc_UpdateCloudBlendNative_OutAdjustedFloat;  // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue1_ImplicitCast;   // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend) == 0x000270, "Wrong size on BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, ALPHA) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::ALPHA' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, ReturnValue) == 0x000004, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, ReturnValue1) == 0x000130, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::ReturnValue1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, CallFunc_UpdateCloudBlendNative_OutSettings) == 0x000138, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::CallFunc_UpdateCloudBlendNative_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, CallFunc_UpdateCloudBlendNative_OutAdjustedFloat) == 0x000264, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::CallFunc_UpdateCloudBlendNative_OutAdjustedFloat' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend, K2Node_FunctionResult_ReturnValue1_ImplicitCast) == 0x000268, "Member 'BP_VerraWorld_GlobalSky_C_Update_Cloud_Blend::K2Node_FunctionResult_ReturnValue1_ImplicitCast' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.UserConstructionScript
// 0x0090 (0x0090 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AWindDirectionalSource*                 K2Node_DynamicCast_AsWind_Directional_Source;      // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue_1;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initalize_BiomeManager_Returned_Correct_Biome; // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot; // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonth                                        CallFunc_Get_Month_ReturnValue;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Cast_Cast_Is_Valid;                       // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_WeatherManager_C*                   K2Node_DynamicCast_AsBP_Weather_Manager;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeightedBlendable                     UniqueObjectNameForCooking_WeightedBlendable;      // 0x0060(0x0010)(NoDestructor)
	struct FWeightedBlendable                     UniqueObjectNameForCooking_WeightedBlendable_1;    // 0x0070(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_UserConstructionScript");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_UserConstructionScript) == 0x000090, "Wrong size on BP_VerraWorld_GlobalSky_C_UserConstructionScript");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_IsWithEditor_ReturnValue) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_K2_SetTimer_ReturnValue) == 0x000028, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, K2Node_DynamicCast_AsWind_Directional_Source) == 0x000030, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::K2Node_DynamicCast_AsWind_Directional_Source' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_GetGameState_ReturnValue_1) == 0x000040, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_IsWithEditor_ReturnValue_1) == 0x000048, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_IsWithEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Initalize_BiomeManager_Returned_Correct_Biome) == 0x00004A, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Initalize_BiomeManager_Returned_Correct_Biome' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot) == 0x00004B, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Initialize_Global_Atmosphere_Sun_is_in_the_RIght_Spot' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Get_Month_ReturnValue) == 0x00004C, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Get_Month_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Cast_Cast_Is_Valid) == 0x00004D, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Cast_Cast_Is_Valid' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, K2Node_DynamicCast_AsBP_Weather_Manager) == 0x000050, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::K2Node_DynamicCast_AsBP_Weather_Manager' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, UniqueObjectNameForCooking_WeightedBlendable) == 0x000060, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::UniqueObjectNameForCooking_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, UniqueObjectNameForCooking_WeightedBlendable_1) == 0x000070, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::UniqueObjectNameForCooking_WeightedBlendable_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue) == 0x000080, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000084, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_UserConstructionScript, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000088, "Member 'BP_VerraWorld_GlobalSky_C_UserConstructionScript::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.WeatherTransition
// 0x0008 (0x0008 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_WeatherTransition final
{
public:
	double                                        Transition;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_WeatherTransition) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_WeatherTransition");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_WeatherTransition) == 0x000008, "Wrong size on BP_VerraWorld_GlobalSky_C_WeatherTransition");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_WeatherTransition, Transition) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_WeatherTransition::Transition' has a wrong offset!");

// Function BP_VerraWorld_GlobalSky.BP_VerraWorld_GlobalSky_C.Wind Override
// 0x0028 (0x0028 - 0x0000)
struct BP_VerraWorld_GlobalSky_C_Wind_Override final
{
public:
	double                                        WindSpeedFromRT_0;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Output_Get;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewLocalVar;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WindOverrideNative_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WindOverrideNative_InSpeed_ImplicitCast;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Output_Get_ImplicitCast;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VerraWorld_GlobalSky_C_Wind_Override) == 0x000008, "Wrong alignment on BP_VerraWorld_GlobalSky_C_Wind_Override");
static_assert(sizeof(BP_VerraWorld_GlobalSky_C_Wind_Override) == 0x000028, "Wrong size on BP_VerraWorld_GlobalSky_C_Wind_Override");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, WindSpeedFromRT_0) == 0x000000, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::WindSpeedFromRT_0' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, Output_Get) == 0x000008, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::Output_Get' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, NewLocalVar) == 0x000010, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, CallFunc_WindOverrideNative_ReturnValue) == 0x000018, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::CallFunc_WindOverrideNative_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, CallFunc_WindOverrideNative_InSpeed_ImplicitCast) == 0x00001C, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::CallFunc_WindOverrideNative_InSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VerraWorld_GlobalSky_C_Wind_Override, K2Node_FunctionResult_Output_Get_ImplicitCast) == 0x000020, "Member 'BP_VerraWorld_GlobalSky_C_Wind_Override::K2Node_FunctionResult_Output_Get_ImplicitCast' has a wrong offset!");

}

