#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Verra_World_Master

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "MinimapSettings_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Verra_World_Master.Verra_World_Master_C
// 0x0140 (0x0490 - 0x0350)
class AVerra_World_Master_C final : public ALevelScriptActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          NodeLoaded;                                        // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMinimapSettings                       LevelMinimap;                                      // 0x0360(0x0120)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           AddQuestsTimer;                                    // 0x0480(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        TimeOfDay;                                         // 0x0488(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void IntrepidInitialize(class APlayerController* Controller);
	void InpActEvt_Multiply_UniqueObjectNameForCooking_2(const struct FKey& Key);
	void InpActEvt_Ctrl_Home_UniqueObjectNameForCooking_1(const struct FKey& Key);
	void ExecuteUbergraph_Verra_World_Master(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Verra_World_Master_C">();
	}
	static class AVerra_World_Master_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AVerra_World_Master_C>();
	}
};
static_assert(alignof(AVerra_World_Master_C) == 0x000010, "Wrong alignment on AVerra_World_Master_C");
static_assert(sizeof(AVerra_World_Master_C) == 0x000490, "Wrong size on AVerra_World_Master_C");
static_assert(offsetof(AVerra_World_Master_C, UberGraphFrame) == 0x000350, "Member 'AVerra_World_Master_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AVerra_World_Master_C, NodeLoaded) == 0x000358, "Member 'AVerra_World_Master_C::NodeLoaded' has a wrong offset!");
static_assert(offsetof(AVerra_World_Master_C, LevelMinimap) == 0x000360, "Member 'AVerra_World_Master_C::LevelMinimap' has a wrong offset!");
static_assert(offsetof(AVerra_World_Master_C, AddQuestsTimer) == 0x000480, "Member 'AVerra_World_Master_C::AddQuestsTimer' has a wrong offset!");
static_assert(offsetof(AVerra_World_Master_C, TimeOfDay) == 0x000488, "Member 'AVerra_World_Master_C::TimeOfDay' has a wrong offset!");

}

