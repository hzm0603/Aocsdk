#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Projectile_BallLightning

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Projectile_BallLightning.BP_Projectile_BallLightning_C.ExecuteUbergraph_BP_Projectile_BallLightning
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0008(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning) == 0x000008, "Wrong alignment on BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning");
static_assert(sizeof(BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning) == 0x0000F8, "Wrong size on BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning");
static_assert(offsetof(BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning, EntryPoint) == 0x000000, "Member 'BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning, K2Node_Event_Hit) == 0x000008, "Member 'BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning, K2Node_Event_DeltaSeconds) == 0x0000F0, "Member 'BP_Projectile_BallLightning_C_ExecuteUbergraph_BP_Projectile_BallLightning::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_Projectile_BallLightning.BP_Projectile_BallLightning_C.ProjectileHit
// 0x00E8 (0x00E8 - 0x0000)
struct BP_Projectile_BallLightning_C_ProjectileHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Projectile_BallLightning_C_ProjectileHit) == 0x000008, "Wrong alignment on BP_Projectile_BallLightning_C_ProjectileHit");
static_assert(sizeof(BP_Projectile_BallLightning_C_ProjectileHit) == 0x0000E8, "Wrong size on BP_Projectile_BallLightning_C_ProjectileHit");
static_assert(offsetof(BP_Projectile_BallLightning_C_ProjectileHit, Hit) == 0x000000, "Member 'BP_Projectile_BallLightning_C_ProjectileHit::Hit' has a wrong offset!");

// Function BP_Projectile_BallLightning.BP_Projectile_BallLightning_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Projectile_BallLightning_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Projectile_BallLightning_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Projectile_BallLightning_C_ReceiveTick");
static_assert(sizeof(BP_Projectile_BallLightning_C_ReceiveTick) == 0x000004, "Wrong size on BP_Projectile_BallLightning_C_ReceiveTick");
static_assert(offsetof(BP_Projectile_BallLightning_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Projectile_BallLightning_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

