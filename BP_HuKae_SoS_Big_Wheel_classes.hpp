#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HuKae_SoS_Big_Wheel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AkAudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_HuKae_SoS_Big_Wheel.BP_HuKae_SoS_Big_Wheel_C
// 0x00B8 (0x0400 - 0x0348)
class ABP_HuKae_SoS_Big_Wheel_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UIntrepidAkComponent*                   IntrepidAK;                                        // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube2;                                             // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube1;                                             // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cube;                                              // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SoS_Small_Wheel2;                               // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Holder_Post4;                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Holder_Post3;                         // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SoS_Small_Wheel1;                               // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Big_Wheel_2;                          // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Big_Wheel_Horizontal;                 // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Holder_Post2;                         // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SoS_Small_Wheel;                                // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Col_Rod;                                           // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Col_Wheel;                                         // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Big_Wheel;                            // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_HuKae_SoS_Holder_Post;                          // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Small_Wheel_Spin_Speed_1;                          // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Small_Wheel_Spin_Speed_2;                          // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Small_Wheel_Spin_Speed_3;                          // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Medium_Wheel_Spin_Speed;                           // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Big_Wheel_Spin_Speed;                              // 0x03F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_HuKae_SoS_Big_Wheel(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_HuKae_SoS_Big_Wheel_C">();
	}
	static class ABP_HuKae_SoS_Big_Wheel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_HuKae_SoS_Big_Wheel_C>();
	}
};
static_assert(alignof(ABP_HuKae_SoS_Big_Wheel_C) == 0x000008, "Wrong alignment on ABP_HuKae_SoS_Big_Wheel_C");
static_assert(sizeof(ABP_HuKae_SoS_Big_Wheel_C) == 0x000400, "Wrong size on ABP_HuKae_SoS_Big_Wheel_C");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, UberGraphFrame) == 0x000348, "Member 'ABP_HuKae_SoS_Big_Wheel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, IntrepidAK) == 0x000350, "Member 'ABP_HuKae_SoS_Big_Wheel_C::IntrepidAK' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Cube2) == 0x000358, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Cube2' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Cube1) == 0x000360, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Cube1' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Cube) == 0x000368, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Cube' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_SoS_Small_Wheel2) == 0x000370, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_SoS_Small_Wheel2' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Holder_Post4) == 0x000378, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Holder_Post4' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Holder_Post3) == 0x000380, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Holder_Post3' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_SoS_Small_Wheel1) == 0x000388, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_SoS_Small_Wheel1' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Big_Wheel_2) == 0x000390, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Big_Wheel_2' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Big_Wheel_Horizontal) == 0x000398, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Big_Wheel_Horizontal' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Holder_Post2) == 0x0003A0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Holder_Post2' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_SoS_Small_Wheel) == 0x0003A8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_SoS_Small_Wheel' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Col_Rod) == 0x0003B0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Col_Rod' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Col_Wheel) == 0x0003B8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Col_Wheel' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Big_Wheel) == 0x0003C0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Big_Wheel' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, SM_HuKae_SoS_Holder_Post) == 0x0003C8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::SM_HuKae_SoS_Holder_Post' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, DefaultSceneRoot) == 0x0003D0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Small_Wheel_Spin_Speed_1) == 0x0003D8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Small_Wheel_Spin_Speed_1' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Small_Wheel_Spin_Speed_2) == 0x0003E0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Small_Wheel_Spin_Speed_2' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Small_Wheel_Spin_Speed_3) == 0x0003E8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Small_Wheel_Spin_Speed_3' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Medium_Wheel_Spin_Speed) == 0x0003F0, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Medium_Wheel_Spin_Speed' has a wrong offset!");
static_assert(offsetof(ABP_HuKae_SoS_Big_Wheel_C, Big_Wheel_Spin_Speed) == 0x0003F8, "Member 'ABP_HuKae_SoS_Big_Wheel_C::Big_Wheel_Spin_Speed' has a wrong offset!");

}

