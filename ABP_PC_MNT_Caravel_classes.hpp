#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_MNT_Caravel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ABP_PC_MNT_Caravel_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PC_MNT_Caravel.ABP_PC_MNT_Caravel_C
// 0x02D0 (0x2AD0 - 0x2800)
class UABP_PC_MNT_Caravel_C final : public UAoCRiderAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x2800(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_PC_MNT_Caravel::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x2808(0x0008)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x2810(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x2818(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x2820(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2840(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2888(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x28A8(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x2970(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x29B8(0x0048)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x2A00(0x00C8)()
	bool                                          Turning;                                           // 0x2AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnRight;                                         // 0x2AC9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TurnLeft;                                          // 0x2ACA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_PC_MNT_Caravel(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PC_MNT_Caravel_C">();
	}
	static class UABP_PC_MNT_Caravel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PC_MNT_Caravel_C>();
	}
};
static_assert(alignof(UABP_PC_MNT_Caravel_C) == 0x000010, "Wrong alignment on UABP_PC_MNT_Caravel_C");
static_assert(sizeof(UABP_PC_MNT_Caravel_C) == 0x002AD0, "Wrong size on UABP_PC_MNT_Caravel_C");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, UberGraphFrame) == 0x002800, "Member 'UABP_PC_MNT_Caravel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, __AnimBlueprintMutables) == 0x002808, "Member 'UABP_PC_MNT_Caravel_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimBlueprintExtension_PropertyAccess) == 0x002810, "Member 'UABP_PC_MNT_Caravel_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimBlueprintExtension_Base) == 0x002818, "Member 'UABP_PC_MNT_Caravel_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_Root) == 0x002820, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_SequencePlayer_1) == 0x002840, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_StateResult) == 0x002888, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_StateMachine) == 0x0028A8, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_Slot) == 0x002970, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_SequencePlayer) == 0x0029B8, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, AnimGraphNode_ApplyAdditive) == 0x002A00, "Member 'UABP_PC_MNT_Caravel_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, Turning) == 0x002AC8, "Member 'UABP_PC_MNT_Caravel_C::Turning' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, TurnRight) == 0x002AC9, "Member 'UABP_PC_MNT_Caravel_C::TurnRight' has a wrong offset!");
static_assert(offsetof(UABP_PC_MNT_Caravel_C, TurnLeft) == 0x002ACA, "Member 'UABP_PC_MNT_Caravel_C::TurnLeft' has a wrong offset!");

}

