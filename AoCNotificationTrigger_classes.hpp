#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AoCNotificationTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AoCNotificationTrigger.AoCNotificationTrigger_C
// 0x0068 (0x03B0 - 0x0348)
class AAoCNotificationTrigger_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   Nmae;                                              // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   Display;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ExitBox;                                           // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EnterBox;                                          // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   Message;                                           // 0x0378(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	bool                                          bIsFrontTriggered;                                 // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAoCPlayerController*                   Controller;                                        // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WaitTimer;                                         // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         WaitTimeInSeconds;                                 // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAllowTrigger;                                     // 0x03AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECalloutType                                  CalloutType;                                       // 0x03AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void AllowTrigger();
	void BndEvt__AoCNotificationTrigger_EnterBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__AoCNotificationTrigger_ExitBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ExecuteUbergraph_AoCNotificationTrigger(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AoCNotificationTrigger_C">();
	}
	static class AAoCNotificationTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAoCNotificationTrigger_C>();
	}
};
static_assert(alignof(AAoCNotificationTrigger_C) == 0x000008, "Wrong alignment on AAoCNotificationTrigger_C");
static_assert(sizeof(AAoCNotificationTrigger_C) == 0x0003B0, "Wrong size on AAoCNotificationTrigger_C");
static_assert(offsetof(AAoCNotificationTrigger_C, UberGraphFrame) == 0x000348, "Member 'AAoCNotificationTrigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, Nmae) == 0x000350, "Member 'AAoCNotificationTrigger_C::Nmae' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, Display) == 0x000358, "Member 'AAoCNotificationTrigger_C::Display' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, ExitBox) == 0x000360, "Member 'AAoCNotificationTrigger_C::ExitBox' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, EnterBox) == 0x000368, "Member 'AAoCNotificationTrigger_C::EnterBox' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, DefaultSceneRoot) == 0x000370, "Member 'AAoCNotificationTrigger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, Message) == 0x000378, "Member 'AAoCNotificationTrigger_C::Message' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, bIsFrontTriggered) == 0x000390, "Member 'AAoCNotificationTrigger_C::bIsFrontTriggered' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, Controller) == 0x000398, "Member 'AAoCNotificationTrigger_C::Controller' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, WaitTimer) == 0x0003A0, "Member 'AAoCNotificationTrigger_C::WaitTimer' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, WaitTimeInSeconds) == 0x0003A8, "Member 'AAoCNotificationTrigger_C::WaitTimeInSeconds' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, bAllowTrigger) == 0x0003AC, "Member 'AAoCNotificationTrigger_C::bAllowTrigger' has a wrong offset!");
static_assert(offsetof(AAoCNotificationTrigger_C, CalloutType) == 0x0003AD, "Member 'AAoCNotificationTrigger_C::CalloutType' has a wrong offset!");

}

