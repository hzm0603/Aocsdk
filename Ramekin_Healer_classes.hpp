#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ramekin_Healer

#include "Basic.hpp"

#include "Ramekin_Base_classes.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ramekin_Healer.Ramekin_Healer_C
// 0x0010 (0x1D70 - 0x1D60)
class ARamekin_Healer_C final : public ARamekin_Base_C
{
public:
	class UBlackboardComponent*                   Blackboard;                                        // 0x1D58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Spear;                                             // 0x1D60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void HasHealingTarget(bool* Valid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ramekin_Healer_C">();
	}
	static class ARamekin_Healer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ARamekin_Healer_C>();
	}
};
static_assert(alignof(ARamekin_Healer_C) == 0x000010, "Wrong alignment on ARamekin_Healer_C");
static_assert(sizeof(ARamekin_Healer_C) == 0x001D70, "Wrong size on ARamekin_Healer_C");
static_assert(offsetof(ARamekin_Healer_C, Blackboard) == 0x001D58, "Member 'ARamekin_Healer_C::Blackboard' has a wrong offset!");
static_assert(offsetof(ARamekin_Healer_C, Spear) == 0x001D60, "Member 'ARamekin_Healer_C::Spear' has a wrong offset!");

}

