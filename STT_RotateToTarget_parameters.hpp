#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_RotateToTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "StateTreeModule_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STT_RotateToTarget.STT_RotateToTarget_C.RotateToTarget
// 0x0188 (0x0188 - 0x0000)
struct STT_RotateToTarget_C_RotateToTarget final
{
public:
	struct FVector                                TargetVec;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Source;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        YawDelta;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RealYawDelta;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_RotateToTarget_C_RotateToTarget) == 0x000008, "Wrong alignment on STT_RotateToTarget_C_RotateToTarget");
static_assert(sizeof(STT_RotateToTarget_C_RotateToTarget) == 0x000188, "Wrong size on STT_RotateToTarget_C_RotateToTarget");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, TargetVec) == 0x000000, "Member 'STT_RotateToTarget_C_RotateToTarget::TargetVec' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, Source) == 0x000018, "Member 'STT_RotateToTarget_C_RotateToTarget::Source' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, YawDelta) == 0x000020, "Member 'STT_RotateToTarget_C_RotateToTarget::YawDelta' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, RealYawDelta) == 0x000028, "Member 'STT_RotateToTarget_C_RotateToTarget::RealYawDelta' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000030, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Roll) == 0x00004C, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Pitch) == 0x000050, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Yaw) == 0x000054, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000088, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakVector_X) == 0x0000A0, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Roll_1) == 0x0000B8, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Pitch_1) == 0x0000BC, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Yaw_1) == 0x0000C0, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_MakeRotFromX_ReturnValue) == 0x0000E0, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Roll_2) == 0x000100, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Pitch_2) == 0x000104, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_BreakRotator_Yaw_2) == 0x000108, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000128, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000130, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000138, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Abs_ReturnValue) == 0x000140, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_FMax_ReturnValue) == 0x000158, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_FMin_ReturnValue) == 0x000160, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000168, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000178, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_RotateToTarget, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000180, "Member 'STT_RotateToTarget_C_RotateToTarget::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function STT_RotateToTarget.STT_RotateToTarget_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_RotateToTarget_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_RotateToTarget_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_RotateToTarget_C_ReceiveLatentTick");
static_assert(sizeof(STT_RotateToTarget_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_RotateToTarget_C_ReceiveLatentTick");
static_assert(offsetof(STT_RotateToTarget_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_RotateToTarget_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

// Function STT_RotateToTarget.STT_RotateToTarget_C.ReceiveLatentEnterState
// 0x002E (0x002E - 0x0000)
struct STT_RotateToTarget_C_ReceiveLatentEnterState final
{
public:
	struct FStateTreeTransitionResult             Transition;                                        // 0x0000(0x002E)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(STT_RotateToTarget_C_ReceiveLatentEnterState) == 0x000002, "Wrong alignment on STT_RotateToTarget_C_ReceiveLatentEnterState");
static_assert(sizeof(STT_RotateToTarget_C_ReceiveLatentEnterState) == 0x00002E, "Wrong size on STT_RotateToTarget_C_ReceiveLatentEnterState");
static_assert(offsetof(STT_RotateToTarget_C_ReceiveLatentEnterState, Transition) == 0x000000, "Member 'STT_RotateToTarget_C_ReceiveLatentEnterState::Transition' has a wrong offset!");

// Function STT_RotateToTarget.STT_RotateToTarget_C.ExecuteUbergraph_STT_RotateToTarget
// 0x0208 (0x0208 - 0x0000)
struct STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         K2Node_DynamicCast_AsBase_Character;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x1];                                       // 0x0039(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStateTreeTransitionResult             K2Node_Event_Transition;                           // 0x003A(0x002E)(ConstParm, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_ReturnValue;           // 0x0070(0x00C8)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         CallFunc_FindCharacter_ReturnValue;                // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA[0x6];                                      // 0x01EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget) == 0x000008, "Wrong alignment on STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget");
static_assert(sizeof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget) == 0x000208, "Wrong size on STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, EntryPoint) == 0x000000, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, K2Node_DynamicCast_AsBase_Character) == 0x000010, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, K2Node_Event_DeltaTime) == 0x00001C, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, K2Node_Event_Transition) == 0x00003A, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::K2Node_Event_Transition' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_IsValid_ReturnValue_3) == 0x000069, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_BooleanAND_ReturnValue_1) == 0x00006A, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00006B, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_EvaluateExpression_ReturnValue) == 0x000070, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_EvaluateExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000138, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_FindCharacter_ReturnValue) == 0x000150, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_FindCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000158, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_IsValid_ReturnValue_4) == 0x000170, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000178, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_RotateAngleAxis_ReturnValue) == 0x000190, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001A8, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001B0, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001C8, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Add_VectorVector_ReturnValue) == 0x0001D0, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Conv_IntToByte_ReturnValue) == 0x0001E8, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001E9, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0001F0, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0001F8, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000200, "Member 'STT_RotateToTarget_C_ExecuteUbergraph_STT_RotateToTarget::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");

}

