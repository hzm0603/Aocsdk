#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Ballista_AnimBP

#include "Basic.hpp"

#include "PC_Ballista_AnimBP_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass PC_Ballista_AnimBP.PC_Ballista_AnimBP_C
// 0x0C00 (0x1CE0 - 0x10E0)
#pragma pack(push, 0x1)
class alignas(0x10) UPC_Ballista_AnimBP_C : public UAoCAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x10E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct PC_Ballista_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;           // 0x10E8(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x10F8(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x1100(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1108(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x1128(0x00F0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x1218(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1260(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x12E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x1308(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1330(0x0070)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x13A0(0x0280)()
	struct FAnimNode_HandIKRetargeting            AnimGraphNode_HandIKRetargeting;                   // 0x1620(0x0120)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x1740(0x0280)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x19C0(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x19E0(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1A00(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x1A80(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1BA8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1BC8(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1BE8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1C10(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x1C38(0x0048)()
	uint8                                         WeaponState;                                       // 0x1C80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C81[0x7];                                     // 0x1C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Pitch;                                             // 0x1C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x1C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_Favoring;                                     // 0x1C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Hand_IKWeight;                                     // 0x1CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ik_hand_l_effector;                                // 0x1CA8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ik_hand_r_effector;                                // 0x1CC0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_PC_Ballista_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PC_Ballista_AnimBP_C">();
	}
	static class UPC_Ballista_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPC_Ballista_AnimBP_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UPC_Ballista_AnimBP_C) == 0x000010, "Wrong alignment on UPC_Ballista_AnimBP_C");
static_assert(sizeof(UPC_Ballista_AnimBP_C) == 0x001CE0, "Wrong size on UPC_Ballista_AnimBP_C");
static_assert(offsetof(UPC_Ballista_AnimBP_C, UberGraphFrame) == 0x0010E0, "Member 'UPC_Ballista_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, __AnimBlueprintMutables) == 0x0010E8, "Member 'UPC_Ballista_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x0010F8, "Member 'UPC_Ballista_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimBlueprintExtension_Base) == 0x001100, "Member 'UPC_Ballista_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_Root) == 0x001108, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x001128, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x001218, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x001260, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x0012E0, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x001308, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x001330, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_TwoBoneIK_1) == 0x0013A0, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_HandIKRetargeting) == 0x001620, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_HandIKRetargeting' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_TwoBoneIK) == 0x001740, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0019C0, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0019E0, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x001A00, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_ModifyBone) == 0x001A80, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x001BA8, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x001BC8, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x001BE8, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x001C10, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, AnimGraphNode_BlendListByEnum) == 0x001C38, "Member 'UPC_Ballista_AnimBP_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, WeaponState) == 0x001C80, "Member 'UPC_Ballista_AnimBP_C::WeaponState' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, Pitch) == 0x001C88, "Member 'UPC_Ballista_AnimBP_C::Pitch' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, Yaw) == 0x001C90, "Member 'UPC_Ballista_AnimBP_C::Yaw' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, Hand_Favoring) == 0x001C98, "Member 'UPC_Ballista_AnimBP_C::Hand_Favoring' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, Hand_IKWeight) == 0x001CA0, "Member 'UPC_Ballista_AnimBP_C::Hand_IKWeight' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, ik_hand_l_effector) == 0x001CA8, "Member 'UPC_Ballista_AnimBP_C::ik_hand_l_effector' has a wrong offset!");
static_assert(offsetof(UPC_Ballista_AnimBP_C, ik_hand_r_effector) == 0x001CC0, "Member 'UPC_Ballista_AnimBP_C::ik_hand_r_effector' has a wrong offset!");

}

