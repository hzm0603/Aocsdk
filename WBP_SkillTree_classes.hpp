#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SkillTree

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SkillTree.WBP_SkillTree_C
// 0x0018 (0x0810 - 0x07F8)
class UWBP_SkillTree_C final : public USkilltree
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07F8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      SkillTreeGrid;                                     // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SkillTreeTierWidget_C*             WBP_SkillTreeTierWidget;                           // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	void ExecuteUbergraph_WBP_SkillTree(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SkillTree_C">();
	}
	static class UWBP_SkillTree_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SkillTree_C>();
	}
};
static_assert(alignof(UWBP_SkillTree_C) == 0x000008, "Wrong alignment on UWBP_SkillTree_C");
static_assert(sizeof(UWBP_SkillTree_C) == 0x000810, "Wrong size on UWBP_SkillTree_C");
static_assert(offsetof(UWBP_SkillTree_C, UberGraphFrame) == 0x0007F8, "Member 'UWBP_SkillTree_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTree_C, SkillTreeGrid) == 0x000800, "Member 'UWBP_SkillTree_C::SkillTreeGrid' has a wrong offset!");
static_assert(offsetof(UWBP_SkillTree_C, WBP_SkillTreeTierWidget) == 0x000808, "Member 'UWBP_SkillTree_C::WBP_SkillTreeTierWidget' has a wrong offset!");

}

