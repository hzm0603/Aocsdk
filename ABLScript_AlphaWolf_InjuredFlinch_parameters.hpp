#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABLScript_AlphaWolf_InjuredFlinch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function ABLScript_AlphaWolf_InjuredFlinch.ABLScript_AlphaWolf_InjuredFlinch_C.RunScript
// 0x0130 (0x0130 - 0x0000)
struct ABLScript_AlphaWolf_InjuredFlinch_C_RunScript final
{
public:
	struct FScriptActorInfo                       Target;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Instigator;                                        // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FScriptActorInfo                       Source;                                            // 0x0020(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference)
	struct FVector                                AttackOrigin;                                      // 0x0030(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScriptTriggerInfo                     TriggerInfo;                                       // 0x0048(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	int32                                         ReturnValue;                                       // 0x0060(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPCPawn_C*                             Agent;                                             // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAlphaWolf_C*                           K2Node_DynamicCast_AsAlpha_Wolf;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGuid, struct FHateEntry>         CallFunc_GetHatedCharacters_ReturnValue;           // 0x0088(0x0050)()
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHateEntry>                     CallFunc_Map_Values_Values;                        // 0x00E0(0x0010)(ReferenceParm)
	struct FHateEntry                             CallFunc_Array_Get_Item;                           // 0x00F0(0x0014)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetCharacterGuid_ReturnValue;             // 0x010C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHateEntryOfCharacter_Healing_ImplicitCast; // 0x0128(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript) == 0x000008, "Wrong alignment on ABLScript_AlphaWolf_InjuredFlinch_C_RunScript");
static_assert(sizeof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript) == 0x000130, "Wrong size on ABLScript_AlphaWolf_InjuredFlinch_C_RunScript");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Target) == 0x000000, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Target' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Instigator) == 0x000010, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Instigator' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Source) == 0x000020, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Source' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, AttackOrigin) == 0x000030, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::AttackOrigin' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, TriggerInfo) == 0x000048, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::TriggerInfo' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, ReturnValue) == 0x000060, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Agent) == 0x000068, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Agent' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Temp_int_Array_Index_Variable) == 0x000070, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, K2Node_DynamicCast_AsAlpha_Wolf) == 0x000078, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::K2Node_DynamicCast_AsAlpha_Wolf' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_GetHatedCharacters_ReturnValue) == 0x000088, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_GetHatedCharacters_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_Map_Values_Values) == 0x0000E0, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_Array_Get_Item) == 0x0000F0, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_GetCharacterGuid_ReturnValue) == 0x00010C, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_GetCharacterGuid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000120, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABLScript_AlphaWolf_InjuredFlinch_C_RunScript, CallFunc_SetHateEntryOfCharacter_Healing_ImplicitCast) == 0x000128, "Member 'ABLScript_AlphaWolf_InjuredFlinch_C_RunScript::CallFunc_SetHateEntryOfCharacter_Healing_ImplicitCast' has a wrong offset!");

}

