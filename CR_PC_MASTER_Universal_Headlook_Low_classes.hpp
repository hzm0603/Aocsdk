#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CR_PC_MASTER_Universal_Headlook_Low

#include "Basic.hpp"

#include "AnimationCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook_Low.RigVMMemory_Literal
// 0x0618 (0x0660 - 0x0048)
class CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___ParentConstraint_Child__Const;        // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___ParentConstraint_bMaintainOffset__Const; // 0x0054(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransformFilter                       RigVMModel___ParentConstraint_Filter__Const;       // 0x0055(0x0009)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_Parents__Const;      // 0x0060(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_AdvancedSettings__Const; // 0x0070(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___ParentConstraint_Weight__Const;       // 0x0074(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___ParentConstraint_3_Child__Const;      // 0x0078(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FConstraintParent>              RigVMModel___ParentConstraint_3_Parents__Const;    // 0x0088(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_ParentConstraint_AdvancedSettings RigVMModel___ParentConstraint_3_AdvancedSettings__Const; // 0x0098(0x0002)(Edit, EditConst, NonTransactional, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RigVMModel___GetCurveValue_Curve__Const;           // 0x009C(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_False__Const; // 0x00A4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_Minimum__Const;                 // 0x00A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_Maximum__Const;                 // 0x00B0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_Item__Const;     // 0x00B8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___RigUnit_SetTransform_Space__Const;    // 0x00C4(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetTransform_bInitial__Const; // 0x00C5(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0xA];                                       // 0x00C6(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__Const;    // 0x00D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___GetTransform_Item__Const;             // 0x0130(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Greater_1_B__Const;                   // 0x0140(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_148[0x8];                                      // 0x0148(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const; // 0x0150(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigUnitDebugTransformMode                    RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const; // 0x01B0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const; // 0x01B4(0x0010)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const; // 0x01C4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const; // 0x01C8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___Set_Transform_2_1_Item__Const;        // 0x01CC(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_1_Strength__Const;       // 0x01D8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RigVMModel___SpringInterp_1_Force__Const;          // 0x01E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___AimItem_1_1_1_1_Item__Const;          // 0x01F8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_1_Primary__Const;       // 0x0208(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_1_Secondary__Const;     // 0x0250(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_A__Const;                    // 0x0298(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigUnit_AimBone_DebugSettings         RigVMModel___AimItem_1_1_1_1_DebugSettings__Const; // 0x02A0(0x0070)(Edit, EditConst, NonTransactional, NoDestructor)
	struct FRigElementKey                         RigVMModel___AimItem_Item__Const;                  // 0x0310(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_4_1_A__Const;                // 0x0320(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_Parent__Const;         // 0x0328(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SpawnControl_1_Name__Const;           // 0x0334(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_1_Settings__Const;       // 0x0340(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_Name__Const;             // 0x0410(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_2_Parent__Const;       // 0x0418(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RigVMModel___SpawnControl_2_2_Name__Const;         // 0x0424(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___SpawnControl_2_2_OffsetTransform__Const; // 0x0430(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_B__Const;                         // 0x0490(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A8[0x8];                                      // 0x04A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_2_2_Settings__Const;     // 0x04B0(0x00D0)(Edit, EditConst, NonTransactional)
	class FName                                   RigVMModel___SpawnControl_1_1_1_Name__Const;       // 0x0580(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___SpawnControl_1_1_1_OffsetSpace__Const; // 0x0588(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigUnit_HierarchyAddControlTransform_Settings RigVMModel___SpawnControl_1_1_1_Settings__Const;   // 0x0590(0x00D0)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook_Low.RigVMMemory_Literal", true>();
	}
	static class CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal>();
	}
};
static_assert(alignof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal) == 0x000010, "Wrong alignment on CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal");
static_assert(sizeof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal) == 0x000660, "Wrong size on CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_Child__Const) == 0x000048, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_bMaintainOffset__Const) == 0x000054, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_bMaintainOffset__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_Filter__Const) == 0x000055, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_Filter__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_Parents__Const) == 0x000060, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_AdvancedSettings__Const) == 0x000070, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_Weight__Const) == 0x000074, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_Weight__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_Child__Const) == 0x000078, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_Child__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_Parents__Const) == 0x000088, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_Parents__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___ParentConstraint_3_AdvancedSettings__Const) == 0x000098, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___ParentConstraint_3_AdvancedSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___GetCurveValue_Curve__Const) == 0x00009C, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___GetCurveValue_Curve__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___DISPATCH_RigVMDispatch_If_False__Const) == 0x0000A4, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___DISPATCH_RigVMDispatch_If_False__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Clamp_Minimum__Const) == 0x0000A8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Clamp_Minimum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Clamp_Maximum__Const) == 0x0000B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Clamp_Maximum__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Item__Const) == 0x0000B8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Space__Const) == 0x0000C4, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Space__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_bInitial__Const) == 0x0000C5, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_bInitial__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_Value__Const) == 0x0000D0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_Value__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___GetTransform_Item__Const) == 0x000130, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___GetTransform_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Greater_1_B__Const) == 0x000140, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Greater_1_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const) == 0x000150, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const) == 0x0001B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Mode__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const) == 0x0001B4, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Color__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const) == 0x0001C4, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Thickness__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const) == 0x0001C8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Scale__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Set_Transform_2_1_Item__Const) == 0x0001CC, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Set_Transform_2_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpringInterp_1_Strength__Const) == 0x0001D8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpringInterp_1_Strength__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpringInterp_1_Force__Const) == 0x0001E0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpringInterp_1_Force__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_1_Item__Const) == 0x0001F8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_1_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_1_Primary__Const) == 0x000208, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_1_Primary__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_1_Secondary__Const) == 0x000250, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_1_Secondary__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Multiply_A__Const) == 0x000298, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Multiply_A__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___AimItem_1_1_1_1_DebugSettings__Const) == 0x0002A0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___AimItem_1_1_1_1_DebugSettings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___AimItem_Item__Const) == 0x000310, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___AimItem_Item__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Multiply_4_1_A__Const) == 0x000320, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Multiply_4_1_A__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_Parent__Const) == 0x000328, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_Name__Const) == 0x000334, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_Settings__Const) == 0x000340, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_Name__Const) == 0x000410, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Parent__Const) == 0x000418, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Parent__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Name__Const) == 0x000424, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_OffsetTransform__Const) == 0x000430, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_OffsetTransform__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___Add_B__Const) == 0x000490, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___Add_B__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_2_2_Settings__Const) == 0x0004B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_2_2_Settings__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_1_Name__Const) == 0x000580, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_1_Name__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_1_OffsetSpace__Const) == 0x000588, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_1_OffsetSpace__Const' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal, RigVMModel___SpawnControl_1_1_1_Settings__Const) == 0x000590, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Literal::RigVMModel___SpawnControl_1_1_1_Settings__Const' has a wrong offset!");

// RigVMBlueprintGeneratedClass CR_PC_MASTER_Universal_Headlook_Low.CR_PC_MASTER_Universal_Headlook_Low_C
// 0x0040 (0x0670 - 0x0630)
class UCR_PC_MASTER_Universal_Headlook_Low_C final : public UControlRig
{
public:
	bool                                          ShouldDoHeadLook;                                  // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAiming;                                          // 0x0631(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_632[0x6];                                      // 0x0632(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLookAtLocation;                               // 0x0638(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CRLookAtLocation;                                  // 0x0650(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Weight_From_Anim;                                  // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CR_PC_MASTER_Universal_Headlook_Low_C">();
	}
	static class UCR_PC_MASTER_Universal_Headlook_Low_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCR_PC_MASTER_Universal_Headlook_Low_C>();
	}
};
static_assert(alignof(UCR_PC_MASTER_Universal_Headlook_Low_C) == 0x000008, "Wrong alignment on UCR_PC_MASTER_Universal_Headlook_Low_C");
static_assert(sizeof(UCR_PC_MASTER_Universal_Headlook_Low_C) == 0x000670, "Wrong size on UCR_PC_MASTER_Universal_Headlook_Low_C");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_Low_C, ShouldDoHeadLook) == 0x000630, "Member 'UCR_PC_MASTER_Universal_Headlook_Low_C::ShouldDoHeadLook' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_Low_C, IsAiming) == 0x000631, "Member 'UCR_PC_MASTER_Universal_Headlook_Low_C::IsAiming' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_Low_C, WorldLookAtLocation) == 0x000638, "Member 'UCR_PC_MASTER_Universal_Headlook_Low_C::WorldLookAtLocation' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_Low_C, CRLookAtLocation) == 0x000650, "Member 'UCR_PC_MASTER_Universal_Headlook_Low_C::CRLookAtLocation' has a wrong offset!");
static_assert(offsetof(UCR_PC_MASTER_Universal_Headlook_Low_C, Weight_From_Anim) == 0x000668, "Member 'UCR_PC_MASTER_Universal_Headlook_Low_C::Weight_From_Anim' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook_Low.RigVMMemory_Work
// 0x0858 (0x08A0 - 0x0048)
class CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_ChildCache;          // 0x0048(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_ParentCaches;        // 0x0058(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___ParentConstraint_3_ChildCache;        // 0x0068(0x0010)(Edit, EditConst, NonTransactional)
	TArray<TArray<struct FCachedRigElement>>      RigVMModel___ParentConstraint_3_ParentCaches;      // 0x0078(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___From_World_1_2_1_Global;              // 0x0088(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_Result;                         // 0x00A0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___DISPATCH_RigVMDispatch_If_Result;     // 0x00A8(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___GetCurveValue_Valid;                  // 0x00AC(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___GetCurveValue_Value;                  // 0x00B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___GetCurveValue_CachedCurveIndex;       // 0x00B8(0x0010)(Edit, EditConst, NonTransactional)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_Condition;  // 0x00C8(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Clamp_Value;                          // 0x00D0(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___DISPATCH_RigVMDispatch_If_2_Result;   // 0x00D8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result; // 0x00F0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result; // 0x00F1(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result; // 0x00F2(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___LessEqual_Result;                     // 0x00F3(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___LessEqual_A;                          // 0x00F8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___Greater_1_Result;                     // 0x0100(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RigVMModel___RigVMFunction_MathVectorDistance_1_Result; // 0x0104(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_Transform;               // 0x0110(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_CachedIndex;             // 0x0170(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___RigVMFunction_MathVectorDistance_1_A; // 0x0180(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Greater_1_A;                          // 0x0198(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition; // 0x01A0(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0xF];                                      // 0x01A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_6_Transform;             // 0x01B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_6_CachedIndex;           // 0x0210(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___DISPATCH_RigVMDispatch_If_2_True;     // 0x0220(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_238[0x8];                                      // 0x0238(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_Value__IO;       // 0x0240(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_CachedIndex;     // 0x02A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO; // 0x02B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Result;                // 0x0310(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_2_1_Transform;         // 0x0330(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_2_1_CachedIndex;       // 0x0390(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_1_Target;                // 0x03A0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B8[0x8];                                      // 0x03B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_4_2_Transform;           // 0x03C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_4_2_CachedIndex;         // 0x0420(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___SpringInterp_1_Current;               // 0x0430(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Velocity;              // 0x0448(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RigVMModel___SpringInterp_1_SimulatedResult;       // 0x0460(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVectorSpringState>             RigVMModel___SpringInterp_1_SpringState;           // 0x0470(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___Set_Transform_2_1_Value__IO;          // 0x0480(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___Set_Transform_2_1_CachedIndex;        // 0x04E0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_1_1_Transform;   // 0x04F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_1_1_CachedIndex; // 0x0550(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_1_1_1_1_Primary__IO;          // 0x0560(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_Result;                      // 0x05A8(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AimItem_1_1_1_1_Weight;               // 0x05B0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B4[0x4];                                      // 0x05B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_1_CachedItem;           // 0x05B8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_1_PrimaryCachedSpace;   // 0x05C8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_1_1_1_1_SecondaryCachedSpace; // 0x05D8(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_1_1_1_1_bIsInitialized;       // 0x05E8(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigUnit_AimItem_Target                RigVMModel___AimItem_Primary__IO;                  // 0x05F8(0x0048)(Edit, EditConst, NonTransactional, NoDestructor)
	double                                        RigVMModel___Multiply_4_1_Result;                  // 0x0640(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___AimItem_Weight;                       // 0x0648(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64C[0x4];                                      // 0x064C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_CachedItem;                   // 0x0650(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_PrimaryCachedSpace;           // 0x0660(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___AimItem_SecondaryCachedSpace;         // 0x0670(0x0010)(Edit, EditConst, NonTransactional)
	TArray<bool>                                  RigVMModel___AimItem_bIsInitialized;               // 0x0680(0x0010)(Edit, EditConst, NonTransactional)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_Item;                  // 0x0690(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_Item;                    // 0x069C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_2_2_Item;                // 0x06A8(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0xC];                                      // 0x06B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_5_Transform;             // 0x06C0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_5_CachedIndex;           // 0x0720(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___Add_Result;                           // 0x0730(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___Add_A;                                // 0x0748(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___SpawnControl_2_2_InitialValue__IO;    // 0x0760(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___SpawnControl_1_1_1_Item;              // 0x07C0(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___GetTransform_9_Transform;             // 0x07D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___GetTransform_9_CachedIndex;           // 0x0830(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___SpawnControl_1_1_1_InitialValue__IO;  // 0x0840(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass CR_PC_MASTER_Universal_Headlook_Low.RigVMMemory_Work", true>();
	}
	static class CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work>();
	}
};
static_assert(alignof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work) == 0x000010, "Wrong alignment on CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work");
static_assert(sizeof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work) == 0x0008A0, "Wrong size on CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___ParentConstraint_ChildCache) == 0x000048, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___ParentConstraint_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___ParentConstraint_ParentCaches) == 0x000058, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___ParentConstraint_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___ParentConstraint_3_ChildCache) == 0x000068, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___ParentConstraint_3_ChildCache' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___ParentConstraint_3_ParentCaches) == 0x000078, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___ParentConstraint_3_ParentCaches' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___From_World_1_2_1_Global) == 0x000088, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___From_World_1_2_1_Global' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Clamp_Result) == 0x0000A0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Clamp_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Result) == 0x0000A8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetCurveValue_Valid) == 0x0000AC, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetCurveValue_Valid' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetCurveValue_Value) == 0x0000B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetCurveValue_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetCurveValue_CachedCurveIndex) == 0x0000B8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetCurveValue_CachedCurveIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_Condition) == 0x0000C8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Clamp_Value) == 0x0000D0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Clamp_Value' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_Result) == 0x0000D8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result) == 0x0000F0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result) == 0x0000F1, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathBoolOr_RigVMFunction_MathBoolOr_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result) == 0x0000F2, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_CoreNotEquals_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___LessEqual_Result) == 0x0000F3, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___LessEqual_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___LessEqual_A) == 0x0000F8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___LessEqual_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Greater_1_Result) == 0x000100, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Greater_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_Result) == 0x000104, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_Transform) == 0x000110, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_CachedIndex) == 0x000170, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_MathVectorDistance_1_A) == 0x000180, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_MathVectorDistance_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Greater_1_A) == 0x000198, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Greater_1_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition) == 0x0001A0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_Condition' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_6_Transform) == 0x0001B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_6_CachedIndex) == 0x000210, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___DISPATCH_RigVMDispatch_If_2_True) == 0x000220, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___DISPATCH_RigVMDispatch_If_2_True' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_Value__IO) == 0x000240, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_CachedIndex) == 0x0002A0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO) == 0x0002B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigVMFunction_DebugTransformMutableNoSpace_Transform__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_Result) == 0x000310, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_Transform) == 0x000330, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_4_2_1_CachedIndex) == 0x000390, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_4_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_Target) == 0x0003A0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_Target' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_4_2_Transform) == 0x0003C0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_4_2_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_4_2_CachedIndex) == 0x000420, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_4_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_Current) == 0x000430, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_Current' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_Velocity) == 0x000448, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_Velocity' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_SimulatedResult) == 0x000460, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_SimulatedResult' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpringInterp_1_SpringState) == 0x000470, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpringInterp_1_SpringState' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Set_Transform_2_1_Value__IO) == 0x000480, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Set_Transform_2_1_Value__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Set_Transform_2_1_CachedIndex) == 0x0004E0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Set_Transform_2_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_Transform) == 0x0004F0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_1_1_CachedIndex) == 0x000550, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_1_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_Primary__IO) == 0x000560, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Multiply_Result) == 0x0005A8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Multiply_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_Weight) == 0x0005B0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_Weight' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_CachedItem) == 0x0005B8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_PrimaryCachedSpace) == 0x0005C8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_SecondaryCachedSpace) == 0x0005D8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_1_1_1_1_bIsInitialized) == 0x0005E8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_1_1_1_1_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_Primary__IO) == 0x0005F8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_Primary__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Multiply_4_1_Result) == 0x000640, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Multiply_4_1_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_Weight) == 0x000648, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_Weight' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_CachedItem) == 0x000650, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_CachedItem' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_PrimaryCachedSpace) == 0x000660, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_PrimaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_SecondaryCachedSpace) == 0x000670, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_SecondaryCachedSpace' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___AimItem_bIsInitialized) == 0x000680, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___AimItem_bIsInitialized' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_1_Item) == 0x000690, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_Item) == 0x00069C, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_2_2_Item) == 0x0006A8, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_2_2_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_5_Transform) == 0x0006C0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_5_CachedIndex) == 0x000720, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Add_Result) == 0x000730, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Add_Result' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___Add_A) == 0x000748, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___Add_A' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_2_2_InitialValue__IO) == 0x000760, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_2_2_InitialValue__IO' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_1_Item) == 0x0007C0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_1_Item' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_9_Transform) == 0x0007D0, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_9_Transform' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___GetTransform_9_CachedIndex) == 0x000830, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___GetTransform_9_CachedIndex' has a wrong offset!");
static_assert(offsetof(CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work, RigVMModel___SpawnControl_1_1_1_InitialValue__IO) == 0x000840, "Member 'CR_PC_MASTER_Universal_Headlook_Low::URigVMMemory_Work::RigVMModel___SpawnControl_1_1_1_InitialValue__IO' has a wrong offset!");

}

