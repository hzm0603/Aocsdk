#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageMeterHealthLog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_DamageMeterHealthLog.WBP_DamageMeterHealthLog_C
// 0x0050 (0x0340 - 0x02F0)
class UWBP_DamageMeterHealthLog_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           BarVertBox;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HoverText;                                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UComboBoxString*                        InstigatorsCB;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TitleText;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ScrollWindow_Gradient_C*           WBP_ScrollWindow;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DamageMeter_C*                     DamageMeter;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_DamageMeterHealthLogBar_C*> Bars;                                              // 0x0328(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         HovIndex;                                          // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateInstigators();
	void UpdateHoverText();
	void UpdateBars();
	void TrimBars(int32 needed);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void RebaseBars();
	void Initialize(class UWBP_DamageMeter_C* DamageMeter_0);
	void GetBarAtIndex(int32 Index_0, TArray<class UWBP_DamageMeterHealthLogBar_C*>& Bars_0, class UVerticalBox* Layout, class UWBP_DamageMeterHealthLogBar_C** bar);
	void ExecuteUbergraph_WBP_DamageMeterHealthLog(int32 EntryPoint);
	void ClearData();
	void BndEvt__DamageMeterHealthLog_InstigatorsCB_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_DamageMeterHealthLog_C">();
	}
	static class UWBP_DamageMeterHealthLog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_DamageMeterHealthLog_C>();
	}
};
static_assert(alignof(UWBP_DamageMeterHealthLog_C) == 0x000008, "Wrong alignment on UWBP_DamageMeterHealthLog_C");
static_assert(sizeof(UWBP_DamageMeterHealthLog_C) == 0x000340, "Wrong size on UWBP_DamageMeterHealthLog_C");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, UberGraphFrame) == 0x0002F0, "Member 'UWBP_DamageMeterHealthLog_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, BarVertBox) == 0x0002F8, "Member 'UWBP_DamageMeterHealthLog_C::BarVertBox' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, HoverText) == 0x000300, "Member 'UWBP_DamageMeterHealthLog_C::HoverText' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, InstigatorsCB) == 0x000308, "Member 'UWBP_DamageMeterHealthLog_C::InstigatorsCB' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, TitleText) == 0x000310, "Member 'UWBP_DamageMeterHealthLog_C::TitleText' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, WBP_ScrollWindow) == 0x000318, "Member 'UWBP_DamageMeterHealthLog_C::WBP_ScrollWindow' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, DamageMeter) == 0x000320, "Member 'UWBP_DamageMeterHealthLog_C::DamageMeter' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, Bars) == 0x000328, "Member 'UWBP_DamageMeterHealthLog_C::Bars' has a wrong offset!");
static_assert(offsetof(UWBP_DamageMeterHealthLog_C, HovIndex) == 0x000338, "Member 'UWBP_DamageMeterHealthLog_C::HovIndex' has a wrong offset!");

}

