#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RNG_BOOK_2H_CR

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"
#include "RigVM_structs.hpp"
#include "RigVM_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// RigVMBlueprintGeneratedClass RNG_BOOK_2H_CR.RNG_BOOK_2H_CR_C
// 0x0018 (0x0648 - 0x0630)
class URNG_BOOK_2H_CR_C final : public UControlRig
{
public:
	double                                        Speed;                                             // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Torque_X;                                          // 0x0638(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpeedRight;                                        // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"RNG_BOOK_2H_CR_C">();
	}
	static class URNG_BOOK_2H_CR_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URNG_BOOK_2H_CR_C>();
	}
};
static_assert(alignof(URNG_BOOK_2H_CR_C) == 0x000008, "Wrong alignment on URNG_BOOK_2H_CR_C");
static_assert(sizeof(URNG_BOOK_2H_CR_C) == 0x000648, "Wrong size on URNG_BOOK_2H_CR_C");
static_assert(offsetof(URNG_BOOK_2H_CR_C, Speed) == 0x000630, "Member 'URNG_BOOK_2H_CR_C::Speed' has a wrong offset!");
static_assert(offsetof(URNG_BOOK_2H_CR_C, Torque_X) == 0x000638, "Member 'URNG_BOOK_2H_CR_C::Torque_X' has a wrong offset!");
static_assert(offsetof(URNG_BOOK_2H_CR_C, SpeedRight) == 0x000640, "Member 'URNG_BOOK_2H_CR_C::SpeedRight' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass RNG_BOOK_2H_CR.RigVMMemory_Literal
// 0x0248 (0x0290 - 0x0048)
class RNG_BOOK_2H_CR::URigVMMemory_Literal final : public URigVMMemoryStorage
{
public:
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_5_Item__Const;   // 0x0048(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ERigVMTransformSpace                          RigVMModel___RigUnit_SetTransform_5_Space__Const;  // 0x0054(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetTransform_5_bInitial__Const; // 0x0055(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_6_Item__Const;   // 0x0058(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___RigUnit_SetTransform_5_Weight__Const; // 0x0064(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          RigVMModel___RigUnit_SetTransform_5_bPropagateToChildren__Const; // 0x0068(0x0001)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigElementKey                         RigVMModel___RigUnit_SetTransform_2_Item__Const;   // 0x006C(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         RigVMModel___RigUnit_GetTransform_7_Item__Const;   // 0x0078(0x000C)(Edit, EditConst, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_4_Value__Const;  // 0x0090(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_Strength__Const; // 0x00F0(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const; // 0x00F4(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_Torque__Const; // 0x00F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_1_1_Minimum__Const;             // 0x0110(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_1_1_Maximum__Const;             // 0x0118(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_5_1_B__Const;                // 0x0120(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_5_B__Const;                  // 0x0128(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_Current__Const; // 0x0130(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_1_Strength__Const;       // 0x0150(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterp_1_CriticalDamping__Const; // 0x0154(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Force__Const;          // 0x0158(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_SourceMinimum__Const;         // 0x0170(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_SourceMaximum__Const;         // 0x0178(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_TargetMaximum__Const;         // 0x0180(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_Value__Const;  // 0x0190(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_7_Value__Const;  // 0x01F0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_2_Strength__Const; // 0x0250(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RigVMModel___Multiply_3_B__Const;                  // 0x0258(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_SourceMinimum__Const;         // 0x0260(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_SourceMaximum__Const;         // 0x0268(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_TargetMinimum__Const;         // 0x0270(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_TargetMaximum__Const;         // 0x0278(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_4_B__Const;                  // 0x0280(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         RigVMModel___SpringInterpQuaternionV2_2_TargetVelocityAmount__Const; // 0x0288(0x0004)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass RNG_BOOK_2H_CR.RigVMMemory_Literal", true>();
	}
	static class RNG_BOOK_2H_CR::URigVMMemory_Literal* GetDefaultObj()
	{
		return GetDefaultObjImpl<RNG_BOOK_2H_CR::URigVMMemory_Literal>();
	}
};
static_assert(alignof(RNG_BOOK_2H_CR::URigVMMemory_Literal) == 0x000010, "Wrong alignment on RNG_BOOK_2H_CR::URigVMMemory_Literal");
static_assert(sizeof(RNG_BOOK_2H_CR::URigVMMemory_Literal) == 0x000290, "Wrong size on RNG_BOOK_2H_CR::URigVMMemory_Literal");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_Item__Const) == 0x000048, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_Item__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_Space__Const) == 0x000054, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_Space__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_bInitial__Const) == 0x000055, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_bInitial__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_6_Item__Const) == 0x000058, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_6_Item__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_Weight__Const) == 0x000064, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_Weight__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_5_bPropagateToChildren__Const) == 0x000068, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_5_bPropagateToChildren__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_2_Item__Const) == 0x00006C, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_2_Item__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_GetTransform_7_Item__Const) == 0x000078, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_GetTransform_7_Item__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_4_Value__Const) == 0x000090, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_4_Value__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Strength__Const) == 0x0000F0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Strength__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const) == 0x0000F4, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_CriticalDamping__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Torque__Const) == 0x0000F8, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Torque__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Clamp_1_1_Minimum__Const) == 0x000110, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Clamp_1_1_Minimum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Clamp_1_1_Maximum__Const) == 0x000118, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Clamp_1_1_Maximum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Multiply_5_1_B__Const) == 0x000120, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Multiply_5_1_B__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Multiply_5_B__Const) == 0x000128, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Multiply_5_B__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_Current__Const) == 0x000130, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_Current__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterp_1_Strength__Const) == 0x000150, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterp_1_Strength__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterp_1_CriticalDamping__Const) == 0x000154, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterp_1_CriticalDamping__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterp_1_Force__Const) == 0x000158, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterp_1_Force__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_1_SourceMinimum__Const) == 0x000170, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_1_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_1_SourceMaximum__Const) == 0x000178, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_1_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_1_TargetMaximum__Const) == 0x000180, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_1_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_1_Value__Const) == 0x000190, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_1_Value__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___RigUnit_SetTransform_7_Value__Const) == 0x0001F0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___RigUnit_SetTransform_7_Value__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_2_Strength__Const) == 0x000250, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_2_Strength__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Multiply_3_B__Const) == 0x000258, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Multiply_3_B__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_2_SourceMinimum__Const) == 0x000260, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_2_SourceMinimum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_2_SourceMaximum__Const) == 0x000268, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_2_SourceMaximum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_2_TargetMinimum__Const) == 0x000270, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_2_TargetMinimum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Remap_2_TargetMaximum__Const) == 0x000278, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Remap_2_TargetMaximum__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___Multiply_4_B__Const) == 0x000280, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___Multiply_4_B__Const' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Literal, RigVMModel___SpringInterpQuaternionV2_2_TargetVelocityAmount__Const) == 0x000288, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Literal::RigVMModel___SpringInterpQuaternionV2_2_TargetVelocityAmount__Const' has a wrong offset!");

// RigVMMemoryStorageGeneratorClass RNG_BOOK_2H_CR.RigVMMemory_Work
// 0x0608 (0x0650 - 0x0048)
class RNG_BOOK_2H_CR::URigVMMemory_Work final : public URigVMMemoryStorage
{
public:
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_GetTransform_6_Transform;     // 0x0050(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_6_CachedIndex;   // 0x00B0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_5_CachedIndex;   // 0x00C0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_7_Transform;     // 0x00D0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_7_CachedIndex;   // 0x0130(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_2_CachedIndex;   // 0x0140(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___From_World_1_Global;                  // 0x0150(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_Result;      // 0x0170(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FQuat                                  RigVMModel___To_World_1_World;                     // 0x0190(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_2_Transform;     // 0x01B0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_2_CachedIndex;   // 0x0210(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___To_World_1_Value;                     // 0x0220(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_5_1_Result;                  // 0x0240(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_1_1_Result;                     // 0x0248(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_5_Result;                    // 0x0250(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Clamp_1_Result;                       // 0x0258(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_Torque__IO;  // 0x0260(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_AngularVelocity; // 0x0278(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FQuat>                          RigVMModel___SpringInterpQuaternionV2_SimulatedResult; // 0x0290(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FQuaternionSpringState>         RigVMModel___SpringInterpQuaternionV2_SpringState; // 0x02A0(0x0010)(Edit, EditConst, NonTransactional)
	struct FVector                                RigVMModel___From_World_2_Global;                  // 0x02B0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Result;                // 0x02C8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___To_World_2_World;                     // 0x02E0(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___To_World_2_Value;                     // 0x02F8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_1_Result;                       // 0x0310(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Force__IO;             // 0x0318(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterp_1_Velocity;              // 0x0330(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        RigVMModel___SpringInterp_1_SimulatedResult;       // 0x0348(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FVectorSpringState>             RigVMModel___SpringInterp_1_SpringState;           // 0x0358(0x0010)(Edit, EditConst, NonTransactional)
	uint8                                         Pad_368[0x8];                                      // 0x0368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RigVMModel___RigUnit_SetTransform_4_Value__IO;     // 0x0370(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_4_CachedIndex;   // 0x03D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_4_Transform;     // 0x03E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_4_CachedIndex;   // 0x0440(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_1_Value__IO;     // 0x0450(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_1_CachedIndex;   // 0x04B0(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_2_Result;    // 0x04C0(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RigVMModel___RigUnit_GetTransform_5_Transform;     // 0x04E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_GetTransform_5_CachedIndex;   // 0x0540(0x0010)(Edit, EditConst, NonTransactional)
	struct FQuat                                  RigVMModel___SpringInterpQuaternionV2_2_Target;    // 0x0550(0x0020)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Remap_2_Result;                       // 0x0570(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_3_Result;                    // 0x0578(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Multiply_4_Result;                    // 0x0580(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        RigVMModel___Absolute_1_Result;                    // 0x0588(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_2_Torque__IO; // 0x0590(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RigVMModel___SpringInterpQuaternionV2_2_AngularVelocity; // 0x05A8(0x0018)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FQuat>                          RigVMModel___SpringInterpQuaternionV2_2_SimulatedResult; // 0x05C0(0x0010)(Edit, EditConst, NonTransactional)
	TArray<struct FQuaternionSpringState>         RigVMModel___SpringInterpQuaternionV2_2_SpringState; // 0x05D0(0x0010)(Edit, EditConst, NonTransactional)
	struct FTransform                             RigVMModel___RigUnit_SetTransform_7_Value__IO;     // 0x05E0(0x0060)(Edit, EditConst, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FCachedRigElement>              RigVMModel___RigUnit_SetTransform_7_CachedIndex;   // 0x0640(0x0010)(Edit, EditConst, NonTransactional)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"RigVMMemoryStorageGeneratorClass RNG_BOOK_2H_CR.RigVMMemory_Work", true>();
	}
	static class RNG_BOOK_2H_CR::URigVMMemory_Work* GetDefaultObj()
	{
		return GetDefaultObjImpl<RNG_BOOK_2H_CR::URigVMMemory_Work>();
	}
};
static_assert(alignof(RNG_BOOK_2H_CR::URigVMMemory_Work) == 0x000010, "Wrong alignment on RNG_BOOK_2H_CR::URigVMMemory_Work");
static_assert(sizeof(RNG_BOOK_2H_CR::URigVMMemory_Work) == 0x000650, "Wrong size on RNG_BOOK_2H_CR::URigVMMemory_Work");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_Transform) == 0x000050, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_Transform' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_6_CachedIndex) == 0x0000B0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_6_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_5_CachedIndex) == 0x0000C0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_7_Transform) == 0x0000D0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_7_Transform' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_7_CachedIndex) == 0x000130, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_7_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_2_CachedIndex) == 0x000140, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___From_World_1_Global) == 0x000150, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___From_World_1_Global' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_Result) == 0x000170, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___To_World_1_World) == 0x000190, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___To_World_1_World' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_Transform) == 0x0001B0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_Transform' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_2_CachedIndex) == 0x000210, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_2_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___To_World_1_Value) == 0x000220, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___To_World_1_Value' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Multiply_5_1_Result) == 0x000240, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Multiply_5_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Clamp_1_1_Result) == 0x000248, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Clamp_1_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Multiply_5_Result) == 0x000250, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Multiply_5_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Clamp_1_Result) == 0x000258, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Clamp_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_Torque__IO) == 0x000260, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_Torque__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_AngularVelocity) == 0x000278, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_AngularVelocity' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_SimulatedResult) == 0x000290, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_SimulatedResult' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_SpringState) == 0x0002A0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_SpringState' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___From_World_2_Global) == 0x0002B0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___From_World_2_Global' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterp_1_Result) == 0x0002C8, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterp_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___To_World_2_World) == 0x0002E0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___To_World_2_World' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___To_World_2_Value) == 0x0002F8, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___To_World_2_Value' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Remap_1_Result) == 0x000310, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Remap_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterp_1_Force__IO) == 0x000318, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterp_1_Force__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterp_1_Velocity) == 0x000330, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterp_1_Velocity' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterp_1_SimulatedResult) == 0x000348, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterp_1_SimulatedResult' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterp_1_SpringState) == 0x000358, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterp_1_SpringState' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_4_Value__IO) == 0x000370, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_4_Value__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_4_CachedIndex) == 0x0003D0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_Transform) == 0x0003E0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_Transform' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_4_CachedIndex) == 0x000440, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_4_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_Value__IO) == 0x000450, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_Value__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_1_CachedIndex) == 0x0004B0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_1_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_Result) == 0x0004C0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_Transform) == 0x0004E0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_Transform' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_GetTransform_5_CachedIndex) == 0x000540, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_GetTransform_5_CachedIndex' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_Target) == 0x000550, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_Target' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Remap_2_Result) == 0x000570, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Remap_2_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Multiply_3_Result) == 0x000578, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Multiply_3_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Multiply_4_Result) == 0x000580, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Multiply_4_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___Absolute_1_Result) == 0x000588, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___Absolute_1_Result' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_Torque__IO) == 0x000590, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_Torque__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_AngularVelocity) == 0x0005A8, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_AngularVelocity' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_SimulatedResult) == 0x0005C0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_SimulatedResult' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___SpringInterpQuaternionV2_2_SpringState) == 0x0005D0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___SpringInterpQuaternionV2_2_SpringState' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_7_Value__IO) == 0x0005E0, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_7_Value__IO' has a wrong offset!");
static_assert(offsetof(RNG_BOOK_2H_CR::URigVMMemory_Work, RigVMModel___RigUnit_SetTransform_7_CachedIndex) == 0x000640, "Member 'RNG_BOOK_2H_CR::URigVMMemory_Work::RigVMModel___RigUnit_SetTransform_7_CachedIndex' has a wrong offset!");

}

