#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_JournalItem

#include "Basic.hpp"

#include "E_StoryArcObjectiveStates_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_JournalItem.WBP_JournalItem_C
// 0x0040 (0x1980 - 0x1940)
class UWBP_JournalItem_C final : public UJournalItem
{
public:
	class UImage*                                 UnreadNotifier;                                    // 0x1940(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	E_StoryArcObjectiveStates                     Objective_State;                                   // 0x1948(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1949[0x7];                                     // 0x1949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Label_Text;                                        // 0x1950(0x0018)(Edit, BlueprintVisible)
	bool                                          bTracked;                                          // 0x1968(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNearby;                                           // 0x1969(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_196A[0x6];                                     // 0x196A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnJournalItemClicked;                              // 0x1970(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	class UWidget* GetBreadcrumbWidget();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_JournalItem_C">();
	}
	static class UWBP_JournalItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_JournalItem_C>();
	}
};
static_assert(alignof(UWBP_JournalItem_C) == 0x000010, "Wrong alignment on UWBP_JournalItem_C");
static_assert(sizeof(UWBP_JournalItem_C) == 0x001980, "Wrong size on UWBP_JournalItem_C");
static_assert(offsetof(UWBP_JournalItem_C, UnreadNotifier) == 0x001940, "Member 'UWBP_JournalItem_C::UnreadNotifier' has a wrong offset!");
static_assert(offsetof(UWBP_JournalItem_C, Objective_State) == 0x001948, "Member 'UWBP_JournalItem_C::Objective_State' has a wrong offset!");
static_assert(offsetof(UWBP_JournalItem_C, Label_Text) == 0x001950, "Member 'UWBP_JournalItem_C::Label_Text' has a wrong offset!");
static_assert(offsetof(UWBP_JournalItem_C, bTracked) == 0x001968, "Member 'UWBP_JournalItem_C::bTracked' has a wrong offset!");
static_assert(offsetof(UWBP_JournalItem_C, bNearby) == 0x001969, "Member 'UWBP_JournalItem_C::bNearby' has a wrong offset!");
static_assert(offsetof(UWBP_JournalItem_C, OnJournalItemClicked) == 0x001970, "Member 'UWBP_JournalItem_C::OnJournalItemClicked' has a wrong offset!");

}

