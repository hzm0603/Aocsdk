#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STC_ExpressionBool

#include "Basic.hpp"

#include "GameSystemsPlugin_structs.hpp"


namespace SDK::Params
{

// Function STC_ExpressionBool.STC_ExpressionBool_C.ReceiveTestCondition
// 0x0268 (0x0268 - 0x0000)
struct STC_ExpressionBool_C_ReceiveTestCondition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_Source_ReturnValue;    // 0x0008(0x00C8)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FExprValue                             CallFunc_EvaluateExpression_SourceTarget_ReturnValue; // 0x00D8(0x00C8)()
	struct FExprValue                             CallFunc_EvaluateExpression_Target_ReturnValue;    // 0x01A0(0x00C8)()
};
static_assert(alignof(STC_ExpressionBool_C_ReceiveTestCondition) == 0x000008, "Wrong alignment on STC_ExpressionBool_C_ReceiveTestCondition");
static_assert(sizeof(STC_ExpressionBool_C_ReceiveTestCondition) == 0x000268, "Wrong size on STC_ExpressionBool_C_ReceiveTestCondition");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, ReturnValue) == 0x000000, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_EvaluateExpression_Source_ReturnValue) == 0x000008, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_EvaluateExpression_Source_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_IsValid_ReturnValue_2) == 0x0000D0, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_EvaluateExpression_SourceTarget_ReturnValue) == 0x0000D8, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_EvaluateExpression_SourceTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(STC_ExpressionBool_C_ReceiveTestCondition, CallFunc_EvaluateExpression_Target_ReturnValue) == 0x0001A0, "Member 'STC_ExpressionBool_C_ReceiveTestCondition::CallFunc_EvaluateExpression_Target_ReturnValue' has a wrong offset!");

}

