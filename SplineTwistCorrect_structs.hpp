#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SplineTwistCorrect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum SplineTwistCorrect.EMeshToUse
// NumValues: 0x0004
enum class EMeshToUse : uint8
{
	E_Default                                = 0,
	E_Array                                  = 1,
	E_Random                                 = 2,
	E_MAX                                    = 3,
};

// Enum SplineTwistCorrect.EMeshRollType
// NumValues: 0x0004
enum class EMeshRollType : uint8
{
	E_None                                   = 0,
	E_Incremental                            = 1,
	E_Random                                 = 2,
	E_MAX                                    = 3,
};

// Enum SplineTwistCorrect.EMeshScalingType
// NumValues: 0x0007
enum class EMeshScalingType : uint8
{
	E_None                                   = 0,
	E_Numerical                              = 1,
	E_SplineScale                            = 2,
	E_UniformCurve                           = 3,
	E_NonUniformCurve                        = 4,
	E_CurveScaled                            = 5,
	E_MAX                                    = 6,
};

// ScriptStruct SplineTwistCorrect.StartEndScale2
// 0x0020 (0x0020 - 0x0000)
struct FStartEndScale2 final
{
public:
	struct FVector2D                              Start;                                             // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              End;                                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStartEndScale2) == 0x000008, "Wrong alignment on FStartEndScale2");
static_assert(sizeof(FStartEndScale2) == 0x000020, "Wrong size on FStartEndScale2");
static_assert(offsetof(FStartEndScale2, Start) == 0x000000, "Member 'FStartEndScale2::Start' has a wrong offset!");
static_assert(offsetof(FStartEndScale2, End) == 0x000010, "Member 'FStartEndScale2::End' has a wrong offset!");

}

