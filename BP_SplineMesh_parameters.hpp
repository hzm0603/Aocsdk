#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SSplineMeshEntry_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineMesh.BP_SplineMesh_C.Add Meshes To Spline
// 0x1830 (0x1830 - 0x0000)
struct BP_SplineMesh_C_Add_Meshes_To_Spline final
{
public:
	class USplineComponent*                       Spline_Component;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSSplineMeshEntry>              In_Entries;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      In_Override_Entry_Start;                           // 0x0020(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshEntry                      In_Override_Entry_End;                             // 0x00C0(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0160(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ISM_Array_Starting_Length;                         // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ISM_Array_Index;                                   // 0x0168(0x0010)(Edit, BlueprintVisible)
	double                                        Current_Pivot_Offset;                              // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Override_Entry_Start_Pivot_Offset;                 // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Override_Entry_End_Pivot_Offset;                   // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Pivot_Offsets;                                     // 0x0190(0x0010)(Edit, BlueprintVisible)
	double                                        Override_Entry_End_Scale_With_Random;              // 0x01A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Override_Entry_Start_Scale_With_Random;            // 0x01A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Scale_With_Random;                         // 0x01B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Current_Position_With_Random;                      // 0x01B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spline_Length_Adjusted;                            // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stream_Equalizer;                                  // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8[0x8];                                      // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      Current_Entry;                                     // 0x01E0(0x00A0)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Current_Entry_Size;                                // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Stop_Execution;                             // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_First_Execution;                                // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Construction_Progress;                             // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Override_Entry_End;                            // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Override_Entry_Start;                          // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A2[0x6];                                      // 0x02A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Override_Entry_Start_Size;                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Override_Entry_End_Size;                           // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Entry_Sizes;                                       // 0x02B8(0x0010)(Edit, BlueprintVisible)
	bool                                          All_Static_Meshes_Valid;                           // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          Random_Stream;                                     // 0x02CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0xB];                                      // 0x02D5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x02E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_1;                              // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0380(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0390(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B9[0x7];                                      // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_2;                              // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0496(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0497(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue; // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x04F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_514[0x4];                                      // 0x0514(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_2;                              // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0538(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0568(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorArrayAverage_ReturnValue;        // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61C[0x4];                                      // 0x061C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item_1;                         // 0x0638(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0640(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65C[0x4];                                      // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_2;        // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_3;        // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_4;        // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x7];                                      // 0x06B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue; // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue; // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue; // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_721[0x7];                                      // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x0741(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_3;                              // 0x0742(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_743[0x5];                                      // 0x0743(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue;         // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue_1;       // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_773[0x1];                                      // 0x0773(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue_2;       // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77D[0x3];                                      // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_2; // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_3; // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default_3;                           // 0x07C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0xC];                                      // 0x07F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      CallFunc_Array_Get_Item_2;                         // 0x0800(0x00A0)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A5[0x3];                                      // 0x08A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D8[0x8];                                      // 0x08D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      CallFunc_Array_Get_Item_3;                         // 0x08E0(0x00A0)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue;                    // 0x0988(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin;              // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent;           // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius;        // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F5[0x3];                                      // 0x09F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A31[0x3];                                      // 0x0A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue_1;                  // 0x0A68(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA1[0x7];                                      // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin_1;            // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent_1;         // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius_1;      // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADC[0x4];                                      // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_7;                          // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_8;                          // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_6;                           // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B21[0xF];                                      // 0x0B21(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      CallFunc_Array_Get_Item_4;                         // 0x0B30(0x00A0)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoxSphereBounds                       CallFunc_GetBounds_ReturnValue_2;                  // 0x0BD8(0x0038)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C11[0x7];                                      // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakBoxSphereBounds_Origin_2;            // 0x0C18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakBoxSphereBounds_BoxExtent_2;         // 0x0C30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakBoxSphereBounds_SphereRadius_2;      // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_9;                          // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_10;                         // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_10;                         // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_10;                         // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_7;                           // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C91[0x3];                                      // 0x0C91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0C94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C99[0x7];                                      // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0CA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0CB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0CC8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_4; // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0CDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF1[0x3];                                      // 0x0CF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_5; // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFC[0x4];                                      // 0x0CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0D00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_6; // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2D[0x3];                                      // 0x0D2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0D30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_4;                              // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D41[0x7];                                      // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x0D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_Select_Default_8;                           // 0x0D60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D69[0x7];                                      // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable_1;                            // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1; // 0x0D88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA4[0x4];                                      // 0x0DA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0DA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_5;        // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_6;        // 0x0DD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_7;        // 0x0DE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_8;        // 0x0E00(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E19[0x3];                                      // 0x0E19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Temp_struct_Variable_2;                            // 0x0E20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector4_X;                           // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Y;                           // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_Z;                           // 0x0E48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector4_W;                           // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_7; // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_8; // 0x0E6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x0E70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x0E78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_5;                              // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E81[0x7];                                      // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0E88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default_9;                           // 0x0E98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB1[0x7];                                      // 0x0EB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0EB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0EC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default_10;                          // 0x0ED8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0EF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F09[0x7];                                      // 0x0F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0F10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F29[0x3];                                      // 0x0F29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue; // 0x0F2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F31[0x7];                                      // 0x0F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue; // 0x0F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_11;                          // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_14;          // 0x0F48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1; // 0x0F50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0F54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_12;                          // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_3;                            // 0x0F60(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0FC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_15;          // 0x0FC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInstancedStaticMeshComponent*          CallFunc_AddComponent_ReturnValue_1;               // 0x0FD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_16;          // 0x0FD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0FE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0FE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE5[0x3];                                      // 0x0FE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0FE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue_1;            // 0x0FEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF1[0x3];                                      // 0x0FF1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFA[0x6];                                      // 0x0FFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_11;                         // 0x1000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_11;                         // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_11;                         // 0x1010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x1018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x1020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_12;                         // 0x1028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_12;                         // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_12;                         // 0x1038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x1040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x1048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_17;          // 0x1050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_18;          // 0x1058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_19;          // 0x1060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_20;          // 0x1068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_21;          // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_22;          // 0x1078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x1080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue_3;       // 0x1081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1082[0x2];                                     // 0x1082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x1084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_13;                         // 0x1088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_13;                         // 0x1090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_13;                         // 0x1098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x10A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_9; // 0x10A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x10AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x10B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x10B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_9;        // 0x10B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x10D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x10D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10DC[0x4];                                     // 0x10DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x10E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x10F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x1100(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_10; // 0x11E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue_1;      // 0x11EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x11F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_23;          // 0x11F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable_4;                            // 0x1200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x1218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1219[0x7];                                     // 0x1219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Temp_struct_Variable_5;                            // 0x1220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x1238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1239[0x7];                                     // 0x1239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_13;                          // 0x1248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_22;     // 0x1260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x1268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x1280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x1298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_14;                         // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_14;                         // 0x12B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_14;                         // 0x12C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x12C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x12E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_23;     // 0x1340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_2;               // 0x1348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_24;     // 0x1350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x1358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135C[0x4];                                     // 0x135C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_10;       // 0x1360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_11;       // 0x1378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue_2;            // 0x1390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_1;              // 0x1394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1395[0x3];                                     // 0x1395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x1398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x139C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x139D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139E[0x2];                                     // 0x139E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x13A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x1400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1404[0x4];                                     // 0x1404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_15;                         // 0x1408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_15;                         // 0x1410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_15;                         // 0x1418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_16;                         // 0x1420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_16;                         // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_16;                         // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_25;     // 0x1438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x1440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x1448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue_2;              // 0x1449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144A[0x6];                                     // 0x144A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_26;     // 0x1450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_17;                         // 0x1458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_17;                         // 0x1460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_17;                         // 0x1468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_27;     // 0x1470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_24;          // 0x1478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_25;          // 0x1480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x1488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1489[0x7];                                     // 0x1489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_26;          // 0x1490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_1; // 0x1498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_2; // 0x149C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_14;                          // 0x14A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_15;                          // 0x14A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_27;          // 0x14A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_28;          // 0x14B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x14B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue_1;           // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_29;          // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_30;          // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_31;          // 0x14D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable_6;                              // 0x14E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14E1[0x7];                                     // 0x14E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_32;          // 0x14E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_1; // 0x14F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_16;                          // 0x1508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_17;                          // 0x1510(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x1528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1; // 0x1540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue; // 0x1558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x1570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x1588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x15A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_7;      // 0x15B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2; // 0x15D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_2; // 0x15E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x1600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_8;      // 0x1618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2; // 0x1630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1; // 0x1648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_9;      // 0x1660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x1678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x1690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_10;     // 0x16A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_3; // 0x16C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x16D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerFromStream_ReturnValue;      // 0x16F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x16F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x16F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x16FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast; // 0x1700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast; // 0x1704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast; // 0x170C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast; // 0x1718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x171C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast; // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1; // 0x1728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1; // 0x172C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2; // 0x1730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2; // 0x1734(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x1738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_173C[0x4];                                     // 0x173C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x1740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x1748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_3; // 0x1750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_3; // 0x1754(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x1758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_4; // 0x1760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_5; // 0x1764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_4; // 0x1768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_5; // 0x176C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x1770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x1778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_3;        // 0x1780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x1788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast; // 0x1790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1794[0x4];                                     // 0x1794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Construction_Progress_ImplicitCast; // 0x1798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1; // 0x17A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A4[0x4];                                     // 0x17A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Spline_Length_Adjusted_ImplicitCast; // 0x17A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_4;        // 0x17B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_6; // 0x17B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_6; // 0x17BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1; // 0x17C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x17C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x17D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast_1;             // 0x17D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x17E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x17E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x17EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_5;        // 0x17F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_6;        // 0x17F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStartRoll_StartRoll_ImplicitCast;      // 0x1800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetEndRoll_EndRoll_ImplicitCast;          // 0x1804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x1808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast; // 0x180C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x1810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x1814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_3; // 0x1818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x181C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x1820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_2; // 0x1824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Add_Meshes_To_Spline) == 0x000010, "Wrong alignment on BP_SplineMesh_C_Add_Meshes_To_Spline");
static_assert(sizeof(BP_SplineMesh_C_Add_Meshes_To_Spline) == 0x001830, "Wrong size on BP_SplineMesh_C_Add_Meshes_To_Spline");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Spline_Component) == 0x000000, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Spline_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, In_Entries) == 0x000008, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::In_Entries' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, In_Override_Entry_Start) == 0x000020, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::In_Override_Entry_Start' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, In_Override_Entry_End) == 0x0000C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::In_Override_Entry_End' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Success) == 0x000160, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Success' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, ISM_Array_Starting_Length) == 0x000164, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::ISM_Array_Starting_Length' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, ISM_Array_Index) == 0x000168, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::ISM_Array_Index' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Current_Pivot_Offset) == 0x000178, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Current_Pivot_Offset' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_Start_Pivot_Offset) == 0x000180, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_Start_Pivot_Offset' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_End_Pivot_Offset) == 0x000188, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_End_Pivot_Offset' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Pivot_Offsets) == 0x000190, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Pivot_Offsets' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_End_Scale_With_Random) == 0x0001A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_End_Scale_With_Random' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_Start_Scale_With_Random) == 0x0001A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_Start_Scale_With_Random' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Current_Scale_With_Random) == 0x0001B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Current_Scale_With_Random' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Current_Position_With_Random) == 0x0001B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Current_Position_With_Random' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Spline_Length_Adjusted) == 0x0001C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Spline_Length_Adjusted' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Stream_Equalizer) == 0x0001D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Stream_Equalizer' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Current_Entry) == 0x0001E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Current_Entry' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Array_Index) == 0x000280, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Array_Index' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Current_Entry_Size) == 0x000288, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Current_Entry_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Should_Stop_Execution) == 0x000290, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Should_Stop_Execution' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Is_First_Execution) == 0x000291, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Is_First_Execution' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Construction_Progress) == 0x000298, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Construction_Progress' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Use_Override_Entry_End) == 0x0002A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Use_Override_Entry_End' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Use_Override_Entry_Start) == 0x0002A1, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Use_Override_Entry_Start' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_Start_Size) == 0x0002A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_Start_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Override_Entry_End_Size) == 0x0002B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Override_Entry_End_Size' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Entry_Sizes) == 0x0002B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Entry_Sizes' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, All_Static_Meshes_Valid) == 0x0002C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::All_Static_Meshes_Valid' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Random_Stream) == 0x0002CC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Random_Stream' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue) == 0x0002D4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeTransform_ReturnValue) == 0x0002E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable) == 0x000340, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_AddComponent_ReturnValue) == 0x000348, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_1) == 0x000350, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetNumMaterials_ReturnValue) == 0x000354, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_1) == 0x000358, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_IntInt_ReturnValue) == 0x00035C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Loop_Counter_Variable) == 0x000360, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue) == 0x000364, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_True_if_break_was_hit_Variable) == 0x000368, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Array_Index_Variable) == 0x00036C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_IntToString_ReturnValue) == 0x000370, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Concat_StrStr_ReturnValue) == 0x000380, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000390, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x0003A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Array_Index_Variable_1) == 0x0003A4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Loop_Counter_Variable_1) == 0x0003A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_1) == 0x0003AC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0003B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Array_Index_Variable_2) == 0x0003B4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X) == 0x0003C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y) == 0x0003C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z) == 0x0003D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_1) == 0x0003D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_1) == 0x0003E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_1) == 0x0003E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Roll) == 0x0003F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Pitch) == 0x0003FC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Yaw) == 0x000400, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Roll_1) == 0x000404, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Pitch_1) == 0x000408, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Yaw_1) == 0x00040C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Variable) == 0x000410, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_2) == 0x000414, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_2) == 0x000418, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetActorScale3D_ReturnValue) == 0x000420, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_2) == 0x000438, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_2) == 0x000440, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_2) == 0x000448, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Variable_1) == 0x000450, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000460, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_3) == 0x000468, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000470, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000478, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_real_Variable) == 0x000490, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable) == 0x000494, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanAND_ReturnValue) == 0x000495, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_1) == 0x000496, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanAND_ReturnValue_1) == 0x000497, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanOR_ReturnValue) == 0x000498, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0004A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_real_Variable_1) == 0x0004B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_2) == 0x0004BC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0004C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0004C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0004D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0004D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0004E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0004E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue) == 0x0004F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Variable_2) == 0x0004F4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x0004F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue) == 0x000510, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000518, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_real_Variable_2) == 0x000530, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000538, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Normal_ReturnValue) == 0x000550, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_MakeArray_Array) == 0x000568, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000578, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetVectorArrayAverage_ReturnValue) == 0x000590, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetVectorArrayAverage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeRotFromX_ReturnValue) == 0x0005A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0005C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Roll_2) == 0x0005D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Pitch_2) == 0x0005DC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Yaw_2) == 0x0005E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_3) == 0x0005E4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeRotator_ReturnValue) == 0x0005E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeRotator_ReturnValue_1) == 0x000600, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Get_Item) == 0x000618, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000620, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Get_Item_1) == 0x000638, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Divide_VectorVector_ReturnValue) == 0x000640, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000658, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X) == 0x000660, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y) == 0x000668, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_2) == 0x000670, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_3) == 0x000688, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_4) == 0x0006A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_4) == 0x0006B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue) == 0x0006C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0006D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue) == 0x0006F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue) == 0x000708, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_5) == 0x000720, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000728, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_6) == 0x000740, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_7) == 0x000741, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_3) == 0x000742, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000748, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000750, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_3) == 0x000758, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_3) == 0x000760, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_3) == 0x000768, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_2) == 0x000770, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomBoolFromStream_ReturnValue) == 0x000771, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomBoolFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomBoolFromStream_ReturnValue_1) == 0x000772, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomBoolFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default) == 0x000774, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_1) == 0x000778, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomBoolFromStream_ReturnValue_2) == 0x00077C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomBoolFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000780, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_2) == 0x000784, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_2) == 0x000788, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_3) == 0x00078C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeRotator_ReturnValue_2) == 0x000790, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeRotator_ReturnValue_3) == 0x0007A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_3) == 0x0007C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0007D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0007E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x0007E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Length_ReturnValue) == 0x0007F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Get_Item_2) == 0x000800, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Length_ReturnValue_1) == 0x0008A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Less_IntInt_ReturnValue) == 0x0008A4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_4) == 0x0008A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_4) == 0x0008B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_4) == 0x0008B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanAND_ReturnValue_2) == 0x0008C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X_1) == 0x0008C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y_1) == 0x0008D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Get_Item_3) == 0x0008E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_3) == 0x000980, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetBounds_ReturnValue) == 0x000988, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_Origin) == 0x0009C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_BoxExtent) == 0x0009D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_SphereRadius) == 0x0009F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_4) == 0x0009F4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_5) == 0x0009F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_5) == 0x000A00, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_5) == 0x000A08, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_4) == 0x000A10, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_6) == 0x000A18, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_6) == 0x000A20, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_6) == 0x000A28, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000A30, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Length_ReturnValue_2) == 0x000A34, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X_2) == 0x000A38, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y_2) == 0x000A40, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000A48, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X_3) == 0x000A50, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y_3) == 0x000A58, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000A60, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetBounds_ReturnValue_1) == 0x000A68, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetBounds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_5) == 0x000AA0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_Origin_1) == 0x000AA8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_BoxExtent_1) == 0x000AC0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_SphereRadius_1) == 0x000AD8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_7) == 0x000AE0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_7) == 0x000AE8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_7) == 0x000AF0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_8) == 0x000AF8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_8) == 0x000B00, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_8) == 0x000B08, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_5) == 0x000B10, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_6) == 0x000B18, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000B20, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Get_Item_4) == 0x000B30, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000BD0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetBounds_ReturnValue_2) == 0x000BD8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetBounds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_6) == 0x000C10, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_Origin_2) == 0x000C18, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_Origin_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_BoxExtent_2) == 0x000C30, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_BoxExtent_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakBoxSphereBounds_SphereRadius_2) == 0x000C48, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakBoxSphereBounds_SphereRadius_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_9) == 0x000C50, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_9) == 0x000C58, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_9) == 0x000C60, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_10) == 0x000C68, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_10) == 0x000C70, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_10) == 0x000C78, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Length_ReturnValue_3) == 0x000C80, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_7) == 0x000C88, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Less_IntInt_ReturnValue_1) == 0x000C90, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_1) == 0x000C94, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanAND_ReturnValue_3) == 0x000C98, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000CA0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000CA8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000CB0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeVector2D_ReturnValue) == 0x000CB8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeVector2D_ReturnValue_1) == 0x000CC8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_4) == 0x000CD8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Variable_3) == 0x000CDC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000CE0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000CE8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000CF0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_4) == 0x000CF4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_5) == 0x000CF8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000D00, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000D08, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X_4) == 0x000D10, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y_4) == 0x000D18, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000D20, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_6) == 0x000D28, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Not_PreBool_ReturnValue_2) == 0x000D2C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000D30, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000D38, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_4) == 0x000D40, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable) == 0x000D48, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_8) == 0x000D60, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000D68, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable_1) == 0x000D70, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1) == 0x000D88, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDirectionAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_int_Loop_Counter_Variable_2) == 0x000DA0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_X_5) == 0x000DA8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector2D_Y_5) == 0x000DB0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_5) == 0x000DB8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_6) == 0x000DD0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_7) == 0x000DE8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_8) == 0x000E00, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Less_IntInt_ReturnValue_2) == 0x000E18, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_5) == 0x000E1C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable_2) == 0x000E20, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector4_X) == 0x000E38, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector4_Y) == 0x000E40, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector4_Z) == 0x000E48, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector4_W) == 0x000E50, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000E58, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000E60, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_7) == 0x000E68, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_8) == 0x000E6C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x000E70, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x000E78, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_5) == 0x000E80, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeVector2D_ReturnValue_2) == 0x000E88, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_9) == 0x000E98, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_8) == 0x000EB0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000EB8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000EC0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_10) == 0x000ED8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_ComposeRotators_ReturnValue) == 0x000EF0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000F08, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_ComposeRotators_ReturnValue_1) == 0x000F10, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_7) == 0x000F28, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue) == 0x000F2C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_FindInputKeyClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BooleanAND_ReturnValue_4) == 0x000F30, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000F38, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue) == 0x000F40, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_11) == 0x000F44, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_14) == 0x000F48, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1) == 0x000F50, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetSplineLength_ReturnValue) == 0x000F54, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_12) == 0x000F58, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_2) == 0x000F5C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable_3) == 0x000F60, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000FC0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_15) == 0x000FC8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_AddComponent_ReturnValue_1) == 0x000FD0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_16) == 0x000FD8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_3) == 0x000FE0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000FE4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_4) == 0x000FE8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetNumMaterials_ReturnValue_1) == 0x000FEC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetNumMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SetStaticMesh_ReturnValue) == 0x000FF0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000FF4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_8) == 0x000FF8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000FF9, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_11) == 0x001000, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_11) == 0x001008, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_11) == 0x001010, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x001018, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x001020, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_12) == 0x001028, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_12) == 0x001030, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_12) == 0x001038, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_12' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x001040, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x001048, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_17) == 0x001050, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_18) == 0x001058, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_19) == 0x001060, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_20) == 0x001068, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_21) == 0x001070, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_22) == 0x001078, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Less_DoubleDouble_ReturnValue) == 0x001080, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomBoolFromStream_ReturnValue_3) == 0x001081, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomBoolFromStream_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatFromStream_ReturnValue) == 0x001084, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_13) == 0x001088, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_13) == 0x001090, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_13) == 0x001098, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0010A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_9) == 0x0010A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Roll_3) == 0x0010AC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Pitch_3) == 0x0010B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Yaw_3) == 0x0010B4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_9) == 0x0010B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Roll_4) == 0x0010D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Pitch_4) == 0x0010D4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakRotator_Yaw_4) == 0x0010D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0010E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SelectFloat_ReturnValue) == 0x0010F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x001100, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_ReturnValue_10) == 0x0011E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatFromStream_ReturnValue_1) == 0x0011EC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SelectFloat_ReturnValue_1) == 0x0011F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_23) == 0x0011F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable_4) == 0x001200, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_9) == 0x001218, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_struct_Variable_5) == 0x001220, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_bool_Variable_10) == 0x001238, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x001240, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_13) == 0x001248, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_22) == 0x001260, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x001268, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue) == 0x001280, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_1) == 0x001298, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_14) == 0x0012B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_14) == 0x0012B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_14) == 0x0012C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0012C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeTransform_ReturnValue_1) == 0x0012E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_23) == 0x001340, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_AddComponent_ReturnValue_2) == 0x001348, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_24) == 0x001350, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_5) == 0x001358, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_10) == 0x001360, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_ReturnValue_11) == 0x001378, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetNumMaterials_ReturnValue_2) == 0x001390, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetNumMaterials_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SetStaticMesh_ReturnValue_1) == 0x001394, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SetStaticMesh_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x001398, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_9) == 0x00139C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00139D, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_MakeTransform_ReturnValue_2) == 0x0013A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_AddInstance_ReturnValue) == 0x001400, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_15) == 0x001408, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_15) == 0x001410, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_15) == 0x001418, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_16) == 0x001420, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_16) == 0x001428, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_16) == 0x001430, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_25) == 0x001438, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_FMax_ReturnValue) == 0x001440, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_IsValid_ReturnValue_10) == 0x001448, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SetStaticMesh_ReturnValue_2) == 0x001449, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SetStaticMesh_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_26) == 0x001450, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_X_17) == 0x001458, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_X_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Y_17) == 0x001460, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Y_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_BreakVector_Z_17) == 0x001468, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_BreakVector_Z_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_DoubleDouble_ReturnValue_27) == 0x001470, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_24) == 0x001478, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_25) == 0x001480, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x001488, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_26) == 0x001490, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_1) == 0x001498, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_2) == 0x00149C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_14) == 0x0014A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_15) == 0x0014A4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_27) == 0x0014A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_28) == 0x0014B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_DegreesToRadians_ReturnValue) == 0x0014B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_DegreesToRadians_ReturnValue_1) == 0x0014C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_DegreesToRadians_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_29) == 0x0014C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_30) == 0x0014D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_31) == 0x0014D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, Temp_byte_Variable_6) == 0x0014E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_ReturnValue_32) == 0x0014E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_1) == 0x0014F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_16) == 0x001508, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_Select_Default_17) == 0x001510, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x001528, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1) == 0x001540, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue) == 0x001558, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x001570, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Normal_ReturnValue_1) == 0x001588, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0015A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_7) == 0x0015B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2) == 0x0015D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_2) == 0x0015E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_4) == 0x001600, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_8) == 0x001618, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2) == 0x001630, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1) == 0x001648, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetTangentAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_9) == 0x001660, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Normal_ReturnValue_2) == 0x001678, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_5) == 0x001690, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Multiply_VectorVector_ReturnValue_10) == 0x0016A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Multiply_VectorVector_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_3) == 0x0016C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_VectorVector_ReturnValue_6) == 0x0016D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomIntegerFromStream_ReturnValue) == 0x0016F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomIntegerFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_IntInt_ReturnValue_6) == 0x0016F4, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Percent_IntInt_ReturnValue) == 0x0016F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Array_Add_ReturnValue_6) == 0x0016FC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast) == 0x001700, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast) == 0x001704, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001708, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00170C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001710, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001714, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast) == 0x001718, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x00171C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast) == 0x001720, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1) == 0x001728, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1) == 0x00172C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2) == 0x001730, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2) == 0x001734, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x001738, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDirectionAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x001740, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x001748, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_3) == 0x001750, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_3) == 0x001754, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x001758, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_4) == 0x001760, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_5) == 0x001764, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_4) == 0x001768, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_5) == 0x00176C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x001770, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x001778, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_3) == 0x001780, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x001788, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast) == 0x001790, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_VariableSet_Construction_Progress_ImplicitCast) == 0x001798, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_VariableSet_Construction_Progress_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1) == 0x0017A0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetDistanceAlongSplineAtSplineInputKey_InKey_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, K2Node_VariableSet_Spline_Length_Adjusted_ImplicitCast) == 0x0017A8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::K2Node_VariableSet_Spline_Length_Adjusted_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_4) == 0x0017B0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_6) == 0x0017B8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Max_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_6) == 0x0017BC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_RandomFloatInRangeFromStream_Min_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1) == 0x0017C0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Conv_DoubleToVector_InDouble_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SelectFloat_B_ImplicitCast) == 0x0017C8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SelectFloat_A_ImplicitCast) == 0x0017D0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SelectFloat_B_ImplicitCast_1) == 0x0017D8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SelectFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x0017E0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0017E8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x0017EC, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRollAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_5) == 0x0017F0, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_Add_DoubleDouble_A_ImplicitCast_6) == 0x0017F8, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_Add_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SetStartRoll_StartRoll_ImplicitCast) == 0x001800, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SetStartRoll_StartRoll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_SetEndRoll_EndRoll_ImplicitCast) == 0x001804, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_SetEndRoll_EndRoll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x001808, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast) == 0x00180C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x001810, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x001814, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_3) == 0x001818, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x00181C, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetTangentAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x001820, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetRightVectorAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Add_Meshes_To_Spline, CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_2) == 0x001824, "Member 'BP_SplineMesh_C_Add_Meshes_To_Spline::CallFunc_GetUpVectorAtDistanceAlongSpline_Distance_ImplicitCast_2' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Bake
// 0x0298 (0x0298 - 0x0000)
struct BP_SplineMesh_C_Bake final
{
public:
	TArray<struct FVector>                        Vector_Array;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSplinePoint>                   Out_Spline_Points;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint;            // 0x00B8(0x0088)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           CallFunc_Array_Get_Item;                           // 0x0150(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast;  // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Bake) == 0x000008, "Wrong alignment on BP_SplineMesh_C_Bake");
static_assert(sizeof(BP_SplineMesh_C_Bake) == 0x000298, "Wrong size on BP_SplineMesh_C_Bake");
static_assert(offsetof(BP_SplineMesh_C_Bake, Vector_Array) == 0x000000, "Member 'BP_SplineMesh_C_Bake::Vector_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Out_Spline_Points) == 0x000010, "Member 'BP_SplineMesh_C_Bake::Out_Spline_Points' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Temp_int_Variable) == 0x000020, "Member 'BP_SplineMesh_C_Bake::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_Bake::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_SplineMesh_C_Bake::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000068, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000080, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000098, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0000B0, "Member 'BP_SplineMesh_C_Bake::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, UniqueObjectNameForCooking_SplinePoint) == 0x0000B8, "Member 'BP_SplineMesh_C_Bake::UniqueObjectNameForCooking_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Subtract_IntInt_ReturnValue) == 0x000140, "Member 'BP_SplineMesh_C_Bake::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000144, "Member 'BP_SplineMesh_C_Bake::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Temp_int_Array_Index_Variable) == 0x000148, "Member 'BP_SplineMesh_C_Bake::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Temp_int_Array_Index_Variable_1) == 0x00014C, "Member 'BP_SplineMesh_C_Bake::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Length_ReturnValue) == 0x0001D8, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Length_ReturnValue_1) == 0x000268, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Temp_int_Loop_Counter_Variable) == 0x00026C, "Member 'BP_SplineMesh_C_Bake::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Less_IntInt_ReturnValue) == 0x000270, "Member 'BP_SplineMesh_C_Bake::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Add_IntInt_ReturnValue_1) == 0x000274, "Member 'BP_SplineMesh_C_Bake::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Add_ReturnValue) == 0x000278, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, Temp_int_Loop_Counter_Variable_1) == 0x00027C, "Member 'BP_SplineMesh_C_Bake::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Array_Add_ReturnValue_1) == 0x000280, "Member 'BP_SplineMesh_C_Bake::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Less_IntInt_ReturnValue_1) == 0x000284, "Member 'BP_SplineMesh_C_Bake::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_Add_IntInt_ReturnValue_2) == 0x000288, "Member 'BP_SplineMesh_C_Bake::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, CallFunc_IsValid_ReturnValue) == 0x00028C, "Member 'BP_SplineMesh_C_Bake::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Bake, UniqueObjectNameForCooking_InputKey_ImplicitCast) == 0x000290, "Member 'BP_SplineMesh_C_Bake::UniqueObjectNameForCooking_InputKey_ImplicitCast' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Build Spline Mesh Actor
// 0x0090 (0x0090 - 0x0000)
struct BP_SplineMesh_C_Build_Spline_Mesh_Actor final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Add_Meshes_To_Spline_Success;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Build_Spline_Mesh_Actor) == 0x000010, "Wrong alignment on BP_SplineMesh_C_Build_Spline_Mesh_Actor");
static_assert(sizeof(BP_SplineMesh_C_Build_Spline_Mesh_Actor) == 0x000090, "Wrong size on BP_SplineMesh_C_Build_Spline_Mesh_Actor");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, CallFunc_Add_Meshes_To_Spline_Success) == 0x000001, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::CallFunc_Add_Meshes_To_Spline_Success' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, Temp_struct_Variable) == 0x000010, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, CallFunc_GetComponentByClass_ReturnValue) == 0x000080, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Build_Spline_Mesh_Actor, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_SplineMesh_C_Build_Spline_Mesh_Actor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Clear Previous Meshes
// 0x0058 (0x0058 - 0x0000)
struct BP_SplineMesh_C_Clear_Previous_Meshes final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInstancedStaticMeshComponent*          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Clear_Previous_Meshes) == 0x000008, "Wrong alignment on BP_SplineMesh_C_Clear_Previous_Meshes");
static_assert(sizeof(BP_SplineMesh_C_Clear_Previous_Meshes) == 0x000058, "Wrong size on BP_SplineMesh_C_Clear_Previous_Meshes");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Less_IntInt_ReturnValue_1) == 0x00003D, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Get_Item_2) == 0x000048, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Clear_Previous_Meshes, CallFunc_Less_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_SplineMesh_C_Clear_Previous_Meshes::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.disable
// 0x0014 (0x0014 - 0x0000)
struct BP_SplineMesh_C_disable final
{
public:
	struct FLinearColor                           CallFunc_LinearColor_White_ReturnValue;            // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_disable) == 0x000004, "Wrong alignment on BP_SplineMesh_C_disable");
static_assert(sizeof(BP_SplineMesh_C_disable) == 0x000014, "Wrong size on BP_SplineMesh_C_disable");
static_assert(offsetof(BP_SplineMesh_C_disable, CallFunc_LinearColor_White_ReturnValue) == 0x000000, "Member 'BP_SplineMesh_C_disable::CallFunc_LinearColor_White_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_disable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_SplineMesh_C_disable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Enable
// 0x0014 (0x0014 - 0x0000)
struct BP_SplineMesh_C_Enable final
{
public:
	struct FLinearColor                           CallFunc_LinearColor_Red_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Enable) == 0x000004, "Wrong alignment on BP_SplineMesh_C_Enable");
static_assert(sizeof(BP_SplineMesh_C_Enable) == 0x000014, "Wrong size on BP_SplineMesh_C_Enable");
static_assert(offsetof(BP_SplineMesh_C_Enable, CallFunc_LinearColor_Red_ReturnValue) == 0x000000, "Member 'BP_SplineMesh_C_Enable::CallFunc_LinearColor_Red_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Enable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_SplineMesh_C_Enable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Join
// 0x08E0 (0x08E0 - 0x0000)
struct BP_SplineMesh_C_Join final
{
public:
	class ABP_SplineMesh_C*                       New_SplineMesh;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_Vector;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        Vector_Array;                                      // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSplinePoint>                   Out_Spline_Points;                                 // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_1;      // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue_1;   // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1; // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint;            // 0x0178(0x0088)(NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1; // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_2;   // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_3;   // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_4;   // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_5;   // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint_1;          // 0x02F8(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0xC];                                      // 0x0384(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSplineMeshEntry                      CallFunc_Array_Get_Item;                           // 0x0390(0x00A0)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_475[0x3];                                      // 0x0475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_6;   // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_2;      // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue_2;   // 0x04B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Vector_Distance_ReturnValue_2;            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_2; // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_2; // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_7;   // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524[0x4];                                      // 0x0524(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint_2;          // 0x0528(0x0088)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x3];                                      // 0x05B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BA[0x2];                                      // 0x05BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           CallFunc_Array_Get_Item_1;                         // 0x05C8(0x0088)(NoDestructor)
	struct FSplinePoint                           CallFunc_Array_Get_Item_2;                         // 0x0650(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E2[0x2];                                      // 0x06E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x06E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F4[0x4];                                      // 0x06F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSplineMeshEntry                      CallFunc_Array_Get_Item_3;                         // 0x0710(0x00A0)(NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x07B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineMesh_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_829[0x3];                                      // 0x0829(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0844(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_845[0x3];                                      // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_8;   // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_4;    // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_3;            // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_874[0x4];                                      // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_4;            // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_9;   // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue_5;            // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_6;            // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x7];                                      // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast;  // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast_1; // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast_2; // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Join) == 0x000010, "Wrong alignment on BP_SplineMesh_C_Join");
static_assert(sizeof(BP_SplineMesh_C_Join) == 0x0008E0, "Wrong size on BP_SplineMesh_C_Join");
static_assert(offsetof(BP_SplineMesh_C_Join, New_SplineMesh) == 0x000000, "Member 'BP_SplineMesh_C_Join::New_SplineMesh' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_Vector) == 0x000008, "Member 'BP_SplineMesh_C_Join::Temp_Vector' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Vector_Array) == 0x000020, "Member 'BP_SplineMesh_C_Join::Vector_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Out_Spline_Points) == 0x000030, "Member 'BP_SplineMesh_C_Join::Out_Spline_Points' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_SplineMesh_C_Join::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_SplineMesh_C_Join::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_IsClosed_Variable) == 0x00004C, "Member 'BP_SplineMesh_C_Join::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_Join::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Array_Index_Variable_1) == 0x000068, "Member 'BP_SplineMesh_C_Join::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Variable) == 0x00006C, "Member 'BP_SplineMesh_C_Join::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000078, "Member 'BP_SplineMesh_C_Join::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Variable_1) == 0x000084, "Member 'BP_SplineMesh_C_Join::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_3) == 0x000088, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000090, "Member 'BP_SplineMesh_C_Join::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_SplineMesh_C_Join::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_4) == 0x00009C, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Variable_2) == 0x0000A0, "Member 'BP_SplineMesh_C_Join::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000A4, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0000A8, "Member 'BP_SplineMesh_C_Join::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000B0, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x0000B8, "Member 'BP_SplineMesh_C_Join::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x0000D0, "Member 'BP_SplineMesh_C_Join::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetScaleAtSplinePoint_ReturnValue_1) == 0x0000E8, "Member 'BP_SplineMesh_C_Join::CallFunc_GetScaleAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetRotationAtSplinePoint_ReturnValue_1) == 0x000100, "Member 'BP_SplineMesh_C_Join::CallFunc_GetRotationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000118, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x000130, "Member 'BP_SplineMesh_C_Join::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000148, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1) == 0x000160, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_SplinePoint) == 0x000178, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000200, "Member 'BP_SplineMesh_C_Join::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1) == 0x000218, "Member 'BP_SplineMesh_C_Join::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x000230, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_2) == 0x000248, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000260, "Member 'BP_SplineMesh_C_Join::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Subtract_IntInt_ReturnValue) == 0x000264, "Member 'BP_SplineMesh_C_Join::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000268, "Member 'BP_SplineMesh_C_Join::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_3) == 0x000270, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000288, "Member 'BP_SplineMesh_C_Join::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x00028C, "Member 'BP_SplineMesh_C_Join::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000290, "Member 'BP_SplineMesh_C_Join::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000294, "Member 'BP_SplineMesh_C_Join::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_4) == 0x000298, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_5) == 0x0002B0, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x0002C8, "Member 'BP_SplineMesh_C_Join::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'BP_SplineMesh_C_Join::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_SplinePoint_1) == 0x0002F8, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_SplinePoint_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Get_Item) == 0x000390, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Length_ReturnValue_1) == 0x000430, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_AddUnique_ReturnValue) == 0x000434, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_IsValid_ReturnValue) == 0x000438, "Member 'BP_SplineMesh_C_Join::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Array_Index_Variable_2) == 0x00043C, "Member 'BP_SplineMesh_C_Join::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetObjectClass_ReturnValue) == 0x000440, "Member 'BP_SplineMesh_C_Join::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_LastIndex_ReturnValue) == 0x000448, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_LastIndex_ReturnValue_1) == 0x00044C, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue) == 0x000450, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000458, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_1) == 0x000460, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000468, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Loop_Counter_Variable_1) == 0x00046C, "Member 'BP_SplineMesh_C_Join::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_7) == 0x000470, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_Has_Been_Initd_Variable) == 0x000474, "Member 'BP_SplineMesh_C_Join::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_6) == 0x000478, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000490, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetScaleAtSplinePoint_ReturnValue_2) == 0x000498, "Member 'BP_SplineMesh_C_Join::CallFunc_GetScaleAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetRotationAtSplinePoint_ReturnValue_2) == 0x0004B0, "Member 'BP_SplineMesh_C_Join::CallFunc_GetRotationAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_2) == 0x0004C8, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_2) == 0x0004D0, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0004E8, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_2) == 0x0004F0, "Member 'BP_SplineMesh_C_Join::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_7) == 0x000508, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Loop_Counter_Variable_2) == 0x000520, "Member 'BP_SplineMesh_C_Join::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_SplinePoint_2) == 0x000528, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_SplinePoint_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_IntInt_ReturnValue) == 0x0005B0, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_8) == 0x0005B4, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_Has_Been_Initd_Variable_1) == 0x0005B8, "Member 'BP_SplineMesh_C_Join::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_IsClosed_Variable_1) == 0x0005B9, "Member 'BP_SplineMesh_C_Join::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Loop_Counter_Variable_3) == 0x0005BC, "Member 'BP_SplineMesh_C_Join::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005C0, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_IntInt_ReturnValue_9) == 0x0005C4, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Get_Item_1) == 0x0005C8, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Get_Item_2) == 0x000650, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Length_ReturnValue_2) == 0x0006D8, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Length_ReturnValue_3) == 0x0006DC, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_IntInt_ReturnValue_2) == 0x0006E0, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_IntInt_ReturnValue_3) == 0x0006E1, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Length_ReturnValue_4) == 0x0006E4, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_Has_Been_Initd_Variable_2) == 0x0006E8, "Member 'BP_SplineMesh_C_Join::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Divide_IntInt_ReturnValue) == 0x0006EC, "Member 'BP_SplineMesh_C_Join::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_int_Array_Index_Variable_3) == 0x0006F0, "Member 'BP_SplineMesh_C_Join::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Add_VectorVector_ReturnValue) == 0x0006F8, "Member 'BP_SplineMesh_C_Join::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Get_Item_3) == 0x000710, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_MakeTransform_ReturnValue) == 0x0007B0, "Member 'BP_SplineMesh_C_Join::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000810, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000818, "Member 'BP_SplineMesh_C_Join::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_FinishSpawningActor_ReturnValue) == 0x000820, "Member 'BP_SplineMesh_C_Join::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, Temp_bool_IsClosed_Variable_2) == 0x000828, "Member 'BP_SplineMesh_C_Join::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Add_ReturnValue) == 0x00082C, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Add_ReturnValue_1) == 0x000830, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Add_ReturnValue_2) == 0x000834, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x000838, "Member 'BP_SplineMesh_C_Join::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00083C, "Member 'BP_SplineMesh_C_Join::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Array_Add_ReturnValue_3) == 0x000840, "Member 'BP_SplineMesh_C_Join::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000844, "Member 'BP_SplineMesh_C_Join::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_8) == 0x000848, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetNumberOfSplinePoints_ReturnValue_4) == 0x000860, "Member 'BP_SplineMesh_C_Join::CallFunc_GetNumberOfSplinePoints_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_3) == 0x000868, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000870, "Member 'BP_SplineMesh_C_Join::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_4) == 0x000878, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_GetLocationAtSplinePoint_ReturnValue_9) == 0x000880, "Member 'BP_SplineMesh_C_Join::CallFunc_GetLocationAtSplinePoint_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000898, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_5) == 0x0008A0, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_SelectFloat_ReturnValue) == 0x0008A8, "Member 'BP_SplineMesh_C_Join::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Vector_Distance_ReturnValue_6) == 0x0008B0, "Member 'BP_SplineMesh_C_Join::CallFunc_Vector_Distance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x0008B8, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_SelectFloat_ReturnValue_1) == 0x0008C0, "Member 'BP_SplineMesh_C_Join::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x0008C8, "Member 'BP_SplineMesh_C_Join::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_InputKey_ImplicitCast) == 0x0008CC, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_InputKey_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_InputKey_ImplicitCast_1) == 0x0008D0, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_InputKey_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Join, UniqueObjectNameForCooking_InputKey_ImplicitCast_2) == 0x0008D4, "Member 'BP_SplineMesh_C_Join::UniqueObjectNameForCooking_InputKey_ImplicitCast_2' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Show Indices
// 0x00E0 (0x00E0 - 0x0000)
struct BP_SplineMesh_C_Show_Indices final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0xC];                                       // 0x0054(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Show_Indices) == 0x000010, "Wrong alignment on BP_SplineMesh_C_Show_Indices");
static_assert(sizeof(BP_SplineMesh_C_Show_Indices) == 0x0000E0, "Wrong size on BP_SplineMesh_C_Show_Indices");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, Temp_int_Variable) == 0x000000, "Member 'BP_SplineMesh_C_Show_Indices::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, K2Node_DynamicCast_AsMaterial_Interface) == 0x000028, "Member 'BP_SplineMesh_C_Show_Indices::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SplineMesh_C_Show_Indices::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000038, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_AddComponent_ReturnValue) == 0x0000C8, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Show_Indices, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_SplineMesh_C_Show_Indices::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Snap Spline to Ground
// 0x02E0 (0x02E0 - 0x0000)
struct BP_SplineMesh_C_Snap_Spline_to_Ground final
{
public:
	class USplineComponent*                       Spline_Component;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_To_Ignore;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                Sample_Location;                                   // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AActor*                           Temp_object_Variable;                              // 0x0038(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBegunPlay_ReturnValue;                 // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Snap_Spline_to_Ground) == 0x000008, "Wrong alignment on BP_SplineMesh_C_Snap_Spline_to_Ground");
static_assert(sizeof(BP_SplineMesh_C_Snap_Spline_to_Ground) == 0x0002E0, "Wrong size on BP_SplineMesh_C_Snap_Spline_to_Ground");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Spline_Component) == 0x000000, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Spline_Component' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Actors_To_Ignore) == 0x000008, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Actors_To_Ignore' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Sample_Location) == 0x000018, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Sample_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Temp_int_Variable) == 0x000030, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Temp_object_Variable) == 0x000038, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000068, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Temp_bool_Has_Been_Initd_Variable) == 0x00007C, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000080, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_LineTraceSingle_OutHit) == 0x000098, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_LineTraceSingle_ReturnValue) == 0x000180, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000188, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0001A0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C5, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_bBlockingHit) == 0x0001C6, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001C7, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_Time) == 0x0001C8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_Distance) == 0x0001CC, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_Location) == 0x0001D0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_ImpactPoint) == 0x0001E8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_Normal) == 0x000200, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_ImpactNormal) == 0x000218, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_BoneName) == 0x000250, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_HitItem) == 0x000258, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_ElementIndex) == 0x00025C, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_FaceIndex) == 0x000260, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_TraceStart) == 0x000268, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_BreakHitResult_TraceEnd) == 0x000280, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_GetObjectClass_ReturnValue) == 0x000298, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x0002A0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_IsWithEditor_ReturnValue) == 0x0002A1, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Temp_bool_IsClosed_Variable) == 0x0002A2, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_GetGameState_ReturnValue) == 0x0002A8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_IsValid_ReturnValue) == 0x0002B0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_HasBegunPlay_ReturnValue) == 0x0002B1, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_HasBegunPlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, Temp_int_Variable_1) == 0x0002B4, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002B8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_SelectVector_ReturnValue) == 0x0002C0, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Snap_Spline_to_Ground, CallFunc_Less_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_SplineMesh_C_Snap_Spline_to_Ground::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.Split
// 0x06F0 (0x06F0 - 0x0000)
struct BP_SplineMesh_C_Split final
{
public:
	TArray<struct FVector>                        Vector_Array;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSplinePoint>                   Out_Road_2_Points;                                 // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSplinePoint>                   Out_Road_1_Points;                                 // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           CallFunc_Array_Get_Item;                           // 0x0098(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           CallFunc_Array_Get_Item_1;                         // 0x0130(0x0088)(NoDestructor)
	struct FSplinePoint                           CallFunc_Array_Get_Item_2;                         // 0x01B8(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           CallFunc_Array_Get_Item_3;                         // 0x0258(0x0088)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue; // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1; // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2; // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1; // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x03E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineMesh_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SplineMesh_C*                       CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue;        // 0x0460(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue; // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue; // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint;            // 0x04E0(0x0088)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_574[0x4];                                      // 0x0574(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaleAtSplinePoint_ReturnValue_1;      // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue_1;   // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1; // 0x05A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1; // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x05D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSplinePoint                           UniqueObjectNameForCooking_SplinePoint_1;          // 0x05F0(0x0088)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_2;    // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0690(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A1[0x7];                                      // 0x06A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x06A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_3;    // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD[0x3];                                      // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x06C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x06C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C7[0x1];                                      // 0x06C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast;  // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UniqueObjectNameForCooking_InputKey_ImplicitCast_1; // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1; // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMesh_C_Split) == 0x000010, "Wrong alignment on BP_SplineMesh_C_Split");
static_assert(sizeof(BP_SplineMesh_C_Split) == 0x0006F0, "Wrong size on BP_SplineMesh_C_Split");
static_assert(offsetof(BP_SplineMesh_C_Split, Vector_Array) == 0x000000, "Member 'BP_SplineMesh_C_Split::Vector_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Out_Road_2_Points) == 0x000010, "Member 'BP_SplineMesh_C_Split::Out_Road_2_Points' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Out_Road_1_Points) == 0x000020, "Member 'BP_SplineMesh_C_Split::Out_Road_1_Points' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_SplineMesh_C_Split::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Variable) == 0x000034, "Member 'BP_SplineMesh_C_Split::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_SplineMesh_C_Split::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Variable_1) == 0x00004C, "Member 'BP_SplineMesh_C_Split::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000050, "Member 'BP_SplineMesh_C_Split::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Loop_Counter_Variable_1) == 0x00005C, "Member 'BP_SplineMesh_C_Split::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Array_Index_Variable) == 0x000060, "Member 'BP_SplineMesh_C_Split::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetObjectClass_ReturnValue) == 0x000068, "Member 'BP_SplineMesh_C_Split::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetObjectClass_ReturnValue_1) == 0x000070, "Member 'BP_SplineMesh_C_Split::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Loop_Counter_Variable_2) == 0x000078, "Member 'BP_SplineMesh_C_Split::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue_4) == 0x00007C, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'BP_SplineMesh_C_Split::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_SplineMesh_C_Split::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Less_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_SplineMesh_C_Split::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Get_Item) == 0x000098, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Length_ReturnValue_2) == 0x000120, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Add_ReturnValue) == 0x000124, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Array_Index_Variable_2) == 0x000128, "Member 'BP_SplineMesh_C_Split::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Get_Item_2) == 0x0001B8, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Length_ReturnValue_3) == 0x000240, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Add_ReturnValue_1) == 0x000244, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Less_IntInt_ReturnValue_2) == 0x000248, "Member 'BP_SplineMesh_C_Split::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Loop_Counter_Variable_3) == 0x00024C, "Member 'BP_SplineMesh_C_Split::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, Temp_int_Array_Index_Variable_3) == 0x000250, "Member 'BP_SplineMesh_C_Split::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Get_Item_3) == 0x000258, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002E0, "Member 'BP_SplineMesh_C_Split::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_IntInt_ReturnValue_5) == 0x0002E4, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x0002E8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue) == 0x0002EC, "Member 'BP_SplineMesh_C_Split::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002F0, "Member 'BP_SplineMesh_C_Split::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1) == 0x0002F4, "Member 'BP_SplineMesh_C_Split::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2) == 0x0002F8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetDistanceAlongSplineAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000300, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000308, "Member 'BP_SplineMesh_C_Split::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'BP_SplineMesh_C_Split::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000318, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1) == 0x000330, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_VectorVector_ReturnValue) == 0x000348, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000360, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_SplineMesh_C_Split::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_MakeTransform_ReturnValue_1) == 0x0003E0, "Member 'BP_SplineMesh_C_Split::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000440, "Member 'BP_SplineMesh_C_Split::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000448, "Member 'BP_SplineMesh_C_Split::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_FinishSpawningActor_ReturnValue) == 0x000450, "Member 'BP_SplineMesh_C_Split::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000458, "Member 'BP_SplineMesh_C_Split::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetScaleAtSplinePoint_ReturnValue) == 0x000460, "Member 'BP_SplineMesh_C_Split::CallFunc_GetScaleAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000478, "Member 'BP_SplineMesh_C_Split::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue) == 0x000490, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue) == 0x0004A8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x0004C0, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x0004D8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, UniqueObjectNameForCooking_SplinePoint) == 0x0004E0, "Member 'BP_SplineMesh_C_Split::UniqueObjectNameForCooking_SplinePoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000568, "Member 'BP_SplineMesh_C_Split::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00056C, "Member 'BP_SplineMesh_C_Split::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Add_ReturnValue_2) == 0x000570, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetScaleAtSplinePoint_ReturnValue_1) == 0x000578, "Member 'BP_SplineMesh_C_Split::CallFunc_GetScaleAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetRotationAtSplinePoint_ReturnValue_1) == 0x000590, "Member 'BP_SplineMesh_C_Split::CallFunc_GetRotationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1) == 0x0005A8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLeaveTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1) == 0x0005C0, "Member 'BP_SplineMesh_C_Split::CallFunc_GetArriveTangentAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x0005D8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, UniqueObjectNameForCooking_SplinePoint_1) == 0x0005F0, "Member 'BP_SplineMesh_C_Split::UniqueObjectNameForCooking_SplinePoint_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Array_Add_ReturnValue_3) == 0x000678, "Member 'BP_SplineMesh_C_Split::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetNumberOfSplinePoints_ReturnValue_2) == 0x00067C, "Member 'BP_SplineMesh_C_Split::CallFunc_GetNumberOfSplinePoints_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Conv_IntToString_ReturnValue) == 0x000680, "Member 'BP_SplineMesh_C_Split::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Concat_StrStr_ReturnValue) == 0x000690, "Member 'BP_SplineMesh_C_Split::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0006A0, "Member 'BP_SplineMesh_C_Split::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0006A8, "Member 'BP_SplineMesh_C_Split::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetNumberOfSplinePoints_ReturnValue_3) == 0x0006B8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetNumberOfSplinePoints_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0006BC, "Member 'BP_SplineMesh_C_Split::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0006C0, "Member 'BP_SplineMesh_C_Split::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0006C4, "Member 'BP_SplineMesh_C_Split::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Greater_IntInt_ReturnValue) == 0x0006C5, "Member 'BP_SplineMesh_C_Split::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_BooleanOR_ReturnValue) == 0x0006C6, "Member 'BP_SplineMesh_C_Split::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, UniqueObjectNameForCooking_InputKey_ImplicitCast) == 0x0006C8, "Member 'BP_SplineMesh_C_Split::UniqueObjectNameForCooking_InputKey_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, UniqueObjectNameForCooking_InputKey_ImplicitCast_1) == 0x0006CC, "Member 'BP_SplineMesh_C_Split::UniqueObjectNameForCooking_InputKey_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0006D0, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0006D8, "Member 'BP_SplineMesh_C_Split::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0006E0, "Member 'BP_SplineMesh_C_Split::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0006E8, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_Split, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1) == 0x0006EC, "Member 'BP_SplineMesh_C_Split::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast_1' has a wrong offset!");

// Function BP_SplineMesh.BP_SplineMesh_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct BP_SplineMesh_C_UserConstructionScript final
{
public:
	TArray<struct FVector>                        Vector_Array;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSplinePoint>                   Spline_Points;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_SplineMesh_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SplineMesh_C_UserConstructionScript");
static_assert(sizeof(BP_SplineMesh_C_UserConstructionScript) == 0x000020, "Wrong size on BP_SplineMesh_C_UserConstructionScript");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, Vector_Array) == 0x000000, "Member 'BP_SplineMesh_C_UserConstructionScript::Vector_Array' has a wrong offset!");
static_assert(offsetof(BP_SplineMesh_C_UserConstructionScript, Spline_Points) == 0x000010, "Member 'BP_SplineMesh_C_UserConstructionScript::Spline_Points' has a wrong offset!");

}

