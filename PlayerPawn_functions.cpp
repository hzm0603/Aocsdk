#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn

#include "Basic.hpp"

#include "PlayerPawn_classes.hpp"
#include "PlayerPawn_parameters.hpp"


namespace SDK
{

// Function PlayerPawn.PlayerPawn_C.CaravanQuestCompletedBP
// (BlueprintEvent)

void APlayerPawn_C::CaravanQuestCompletedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "CaravanQuestCompletedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.CaravanQuestFailedBP
// (BlueprintEvent)

void APlayerPawn_C::CaravanQuestFailedBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "CaravanQuestFailedBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.CreateAndShowDeathWidget
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::CreateAndShowDeathWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "CreateAndShowDeathWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.DamageFlinchBP
// (BlueprintEvent)
// Parameters:
// TSubclassOf<class UDamageType>          DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void APlayerPawn_C::DamageFlinchBP(TSubclassOf<class UDamageType> DamageType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "DamageFlinchBP");

	Params::PlayerPawn_C_DamageFlinchBP Parms{};

	Parms.DamageType = DamageType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.DialogueServerEvent
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ANPCPawn_C*                       NPC                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// const class FString&                    Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void APlayerPawn_C::DialogueServerEvent(class ANPCPawn_C* NPC, const class FString& Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "DialogueServerEvent");

	Params::PlayerPawn_C_DialogueServerEvent Parms{};

	Parms.NPC = NPC;
	Parms.Tag = std::move(Tag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.DodgeCameraLagEnd__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::DodgeCameraLagEnd__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "DodgeCameraLagEnd__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.DodgeCameraLagEnd__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::DodgeCameraLagEnd__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "DodgeCameraLagEnd__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.EnableCursor
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::EnableCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "EnableCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.ExecuteUbergraph_PlayerPawn
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::ExecuteUbergraph_PlayerPawn(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "ExecuteUbergraph_PlayerPawn");

	Params::PlayerPawn_C_ExecuteUbergraph_PlayerPawn Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.FOVZoom__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::FOVZoom__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "FOVZoom__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.FOVZoom__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::FOVZoom__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "FOVZoom__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.GapCloseCameraLagEnd__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::GapCloseCameraLagEnd__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "GapCloseCameraLagEnd__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.GapCloseCameraLagEnd__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::GapCloseCameraLagEnd__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "GapCloseCameraLagEnd__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.GetCameraManager
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AAoCCameraManager**               CameraManager                                          (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::GetCameraManager(class AAoCCameraManager** CameraManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "GetCameraManager");

	Params::PlayerPawn_C_GetCameraManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CameraManager != nullptr)
		*CameraManager = Parms.CameraManager;
}


// Function PlayerPawn.PlayerPawn_C.GetDrivenSiegeWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USiegeWeaponComponent**           SiegeWeaponComponent                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::GetDrivenSiegeWeapon(class USiegeWeaponComponent** SiegeWeaponComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "GetDrivenSiegeWeapon");

	Params::PlayerPawn_C_GetDrivenSiegeWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SiegeWeaponComponent != nullptr)
		*SiegeWeaponComponent = Parms.SiegeWeaponComponent;
}


// Function PlayerPawn.PlayerPawn_C.InternalBlur__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::InternalBlur__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "InternalBlur__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.InternalBlur__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::InternalBlur__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "InternalBlur__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Left Click On Hover
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::Left_Click_On_Hover()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Left Click On Hover");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Mouse Mode Changed
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::Mouse_Mode_Changed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Mouse Mode Changed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.OnBlendOut_1F40CC6D49EF4D93F75E2E94FCC7F325
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnBlendOut_1F40CC6D49EF4D93F75E2E94FCC7F325(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnBlendOut_1F40CC6D49EF4D93F75E2E94FCC7F325");

	Params::PlayerPawn_C_OnBlendOut_1F40CC6D49EF4D93F75E2E94FCC7F325 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnCameraZoomClient
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bZoomIn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnCameraZoomClient(bool bZoomIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnCameraZoomClient");

	Params::PlayerPawn_C_OnCameraZoomClient Parms{};

	Parms.bZoomIn = bZoomIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnChannelingBP
// (Event, Public, BlueprintEvent)

void APlayerPawn_C::OnChannelingBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnChannelingBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.OnCompleted_1F40CC6D49EF4D93F75E2E94FCC7F325
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnCompleted_1F40CC6D49EF4D93F75E2E94FCC7F325(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnCompleted_1F40CC6D49EF4D93F75E2E94FCC7F325");

	Params::PlayerPawn_C_OnCompleted_1F40CC6D49EF4D93F75E2E94FCC7F325 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnDeathBP
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::OnDeathBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnDeathBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.OnInterrupted_1F40CC6D49EF4D93F75E2E94FCC7F325
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnInterrupted_1F40CC6D49EF4D93F75E2E94FCC7F325(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnInterrupted_1F40CC6D49EF4D93F75E2E94FCC7F325");

	Params::PlayerPawn_C_OnInterrupted_1F40CC6D49EF4D93F75E2E94FCC7F325 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnNotifyBegin_1F40CC6D49EF4D93F75E2E94FCC7F325
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnNotifyBegin_1F40CC6D49EF4D93F75E2E94FCC7F325(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnNotifyBegin_1F40CC6D49EF4D93F75E2E94FCC7F325");

	Params::PlayerPawn_C_OnNotifyBegin_1F40CC6D49EF4D93F75E2E94FCC7F325 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnNotifyEnd_1F40CC6D49EF4D93F75E2E94FCC7F325
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnNotifyEnd_1F40CC6D49EF4D93F75E2E94FCC7F325(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnNotifyEnd_1F40CC6D49EF4D93F75E2E94FCC7F325");

	Params::PlayerPawn_C_OnNotifyEnd_1F40CC6D49EF4D93F75E2E94FCC7F325 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnReviveBP
// (BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   RevHealthPercent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReviveManaPercent                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReviveStaminaPercent                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnReviveBP(class ABaseCharacter* Target, float RevHealthPercent, float ReviveManaPercent, float ReviveStaminaPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnReviveBP");

	Params::PlayerPawn_C_OnReviveBP Parms{};

	Parms.Target = Target;
	Parms.RevHealthPercent = RevHealthPercent;
	Parms.ReviveManaPercent = ReviveManaPercent;
	Parms.ReviveStaminaPercent = ReviveStaminaPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnSetLastDeathLocationBP
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// const struct FVector&                   Location                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnSetLastDeathLocationBP(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnSetLastDeathLocationBP");

	Params::PlayerPawn_C_OnSetLastDeathLocationBP Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnStopChannelingBP
// (Event, Public, BlueprintEvent)

void APlayerPawn_C::OnStopChannelingBP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnStopChannelingBP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.OnSuccessfulBlockServerBP
// (BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnSuccessfulBlockServerBP(class ABaseCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnSuccessfulBlockServerBP");

	Params::PlayerPawn_C_OnSuccessfulBlockServerBP Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnSuccessfulEvasionServerBP
// (BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   Attacker                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnSuccessfulEvasionServerBP(class ABaseCharacter* Attacker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnSuccessfulEvasionServerBP");

	Params::PlayerPawn_C_OnSuccessfulEvasionServerBP Parms{};

	Parms.Attacker = Attacker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnToggleGMTagBP
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::OnToggleGMTagBP(bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnToggleGMTagBP");

	Params::PlayerPawn_C_OnToggleGMTagBP Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.OnUpdateQuestSidebar
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::OnUpdateQuestSidebar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "OnUpdateQuestSidebar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.PCFlag_Clear
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FlagName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::PCFlag_Clear(class FName FlagName, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "PCFlag_Clear");

	Params::PlayerPawn_C_PCFlag_Clear Parms{};

	Parms.FlagName = FlagName;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function PlayerPawn.PlayerPawn_C.PCFlag_Set
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             FlagName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::PCFlag_Set(class FName FlagName, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "PCFlag_Set");

	Params::PlayerPawn_C_PCFlag_Set Parms{};

	Parms.FlagName = FlagName;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function PlayerPawn.PlayerPawn_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APlayerPawn_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void APlayerPawn_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "ReceivePossessed");

	Params::PlayerPawn_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.Set Targeting Decal Distance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::Set_Targeting_Decal_Distance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Set Targeting Decal Distance");

	Params::PlayerPawn_C_Set_Targeting_Decal_Distance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.SetTargetingMeshDistance
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::SetTargetingMeshDistance(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "SetTargetingMeshDistance");

	Params::PlayerPawn_C_SetTargetingMeshDistance Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.SprintLogic
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SprintActive                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::SprintLogic(double DeltaTime, bool SprintActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "SprintLogic");

	Params::PlayerPawn_C_SprintLogic Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.SprintActive = SprintActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.StartCameraLag
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  CameraLagSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Falling                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dodging                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::StartCameraLag(double CameraLagSpeed, bool Falling, bool Dodging)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "StartCameraLag");

	Params::PlayerPawn_C_StartCameraLag Parms{};

	Parms.CameraLagSpeed = CameraLagSpeed;
	Parms.Falling = Falling;
	Parms.Dodging = Dodging;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.StartCameraLagBP
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   CameraLagSpeed                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::StartCameraLagBP(float CameraLagSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "StartCameraLagBP");

	Params::PlayerPawn_C_StartCameraLagBP Parms{};

	Parms.CameraLagSpeed = CameraLagSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.StopCameraLag
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    WasFalling                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Dodging                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  PreviousCameraLagValue                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::StopCameraLag(bool WasFalling, bool Dodging, double PreviousCameraLagValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "StopCameraLag");

	Params::PlayerPawn_C_StopCameraLag Parms{};

	Parms.WasFalling = WasFalling;
	Parms.Dodging = Dodging;
	Parms.PreviousCameraLagValue = PreviousCameraLagValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.StopCameraLagBP
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   OldCameraLagSpeed                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APlayerPawn_C::StopCameraLagBP(float OldCameraLagSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "StopCameraLagBP");

	Params::PlayerPawn_C_StopCameraLagBP Parms{};

	Parms.OldCameraLagSpeed = OldCameraLagSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_2__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_2__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_2__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_2__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_2__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_2__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_4__FinishedFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.Timeline_4__UpdateFunc
// (BlueprintEvent)

void APlayerPawn_C::Timeline_4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "Timeline_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.ToggleGMTag
// (BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::ToggleGMTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "ToggleGMTag");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerPawn.PlayerPawn_C.UpdateQuestSidebar
// (Public, BlueprintCallable, BlueprintEvent)

void APlayerPawn_C::UpdateQuestSidebar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerPawn_C", "UpdateQuestSidebar");

	UObject::ProcessEvent(Func, nullptr);
}

}

