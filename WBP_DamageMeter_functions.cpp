#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_DamageMeter

#include "Basic.hpp"

#include "WBP_DamageMeter_classes.hpp"
#include "WBP_DamageMeter_parameters.hpp"


namespace SDK
{

// Function WBP_DamageMeter.WBP_DamageMeter_C.UpdateTitleText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::UpdateTitleText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "UpdateTitleText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.UpdateMeter
// (BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::UpdateMeter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "UpdateMeter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.UpdateHoverText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::UpdateHoverText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "UpdateHoverText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.UpdateDPS
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_DamageMeterBarData>&  BarData_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UWBP_DamageMeterBar_C*>&   Bars_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UVerticalBox*                     vertBox                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::UpdateDPS(TArray<struct FST_DamageMeterBarData>& BarData_0, TArray<class UWBP_DamageMeterBar_C*>& Bars_0, class UVerticalBox* vertBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "UpdateDPS");

	Params::WBP_DamageMeter_C_UpdateDPS Parms{};

	Parms.BarData_0 = std::move(BarData_0);
	Parms.Bars_0 = std::move(Bars_0);
	Parms.vertBox = vertBox;

	UObject::ProcessEvent(Func, &Parms);

	BarData_0 = std::move(Parms.BarData_0);
	Bars_0 = std::move(Parms.Bars_0);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.UpdateBars
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  dataMax                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  dataTotal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FST_DamageMeterBarData>&  BarData_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class UWBP_DamageMeterBar_C*>&   barList                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UVerticalBox*                     VerticalBox                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::UpdateBars(double dataMax, double dataTotal, TArray<struct FST_DamageMeterBarData>& BarData_0, TArray<class UWBP_DamageMeterBar_C*>& barList, class UVerticalBox* VerticalBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "UpdateBars");

	Params::WBP_DamageMeter_C_UpdateBars Parms{};

	Parms.dataMax = dataMax;
	Parms.dataTotal = dataTotal;
	Parms.BarData_0 = std::move(BarData_0);
	Parms.barList = std::move(barList);
	Parms.VerticalBox = VerticalBox;

	UObject::ProcessEvent(Func, &Parms);

	BarData_0 = std::move(Parms.BarData_0);
	barList = std::move(Parms.barList);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.Trim Bars
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UWBP_DamageMeterBar_C*>&   Bars_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// int32                                   needed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UVerticalBox*                     vertBox                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::Trim_Bars(TArray<class UWBP_DamageMeterBar_C*>& Bars_0, int32 needed, class UVerticalBox* vertBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "Trim Bars");

	Params::WBP_DamageMeter_C_Trim_Bars Parms{};

	Parms.Bars_0 = std::move(Bars_0);
	Parms.needed = needed;
	Parms.vertBox = vertBox;

	UObject::ProcessEvent(Func, &Parms);

	Bars_0 = std::move(Parms.Bars_0);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "Tick");

	Params::WBP_DamageMeter_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.SetAbilityData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int64, struct FST_DamageMeterHitData>&Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_DamageMeter_C::SetAbilityData(TMap<int64, struct FST_DamageMeterHitData>& Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "SetAbilityData");

	Params::WBP_DamageMeter_C_SetAbilityData Parms{};

	Parms.Map = std::move(Map);

	UObject::ProcessEvent(Func, &Parms);

	Map = std::move(Parms.Map);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.ProcessHit
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitInst&                  HitInst                                                (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)

void UWBP_DamageMeter_C::ProcessHit(const struct FHitInst& HitInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "ProcessHit");

	Params::WBP_DamageMeter_C_ProcessHit Parms{};

	Parms.HitInst = std::move(HitInst);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.OnClicked_Event
// (BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::OnClicked_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "OnClicked_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.OnAbilityEventBP_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FHitInst&                  HitInst                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWBP_DamageMeter_C::OnAbilityEventBP_Event(const struct FHitInst& HitInst)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "OnAbilityEventBP_Event");

	Params::WBP_DamageMeter_C_OnAbilityEventBP_Event Parms{};

	Parms.HitInst = std::move(HitInst);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.InsertIntoBarData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DamageMeterBarData&          Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// TArray<struct FST_DamageMeterBarData>&  BarData_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32*                                  Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::InsertIntoBarData(struct FST_DamageMeterBarData& Data, TArray<struct FST_DamageMeterBarData>& BarData_0, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "InsertIntoBarData");

	Params::WBP_DamageMeter_C_InsertIntoBarData Parms{};

	Parms.Data = std::move(Data);
	Parms.BarData_0 = std::move(BarData_0);

	UObject::ProcessEvent(Func, &Parms);

	Data = std::move(Parms.Data);
	BarData_0 = std::move(Parms.BarData_0);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.InsertFlagBars
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<int64, struct FST_DamageMeterHitData>&Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWBP_DamageMeter_C::InsertFlagBars(TMap<int64, struct FST_DamageMeterHitData>& Map)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "InsertFlagBars");

	Params::WBP_DamageMeter_C_InsertFlagBars Parms{};

	Parms.Map = std::move(Map);

	UObject::ProcessEvent(Func, &Parms);

	Map = std::move(Parms.Map);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.InsertExtraBars
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::InsertExtraBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "InsertExtraBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.Handle Window Content Loaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAoCWindow*                       Window                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::Handle_Window_Content_Loaded(class UAoCWindow* Window)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "Handle Window Content Loaded");

	Params::WBP_DamageMeter_C_Handle_Window_Content_Loaded Parms{};

	Parms.Window = Window;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.GetTargetTotals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::GetTargetTotals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "GetTargetTotals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.GetPlayerTotals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::GetPlayerTotals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "GetPlayerTotals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.GetInstigatorInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   Instigator                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor*                    Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECharacterClass*                        Class_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::GetInstigatorInfo(class ABaseCharacter* Instigator, struct FLinearColor* Color, ECharacterClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "GetInstigatorInfo");

	Params::WBP_DamageMeter_C_GetInstigatorInfo Parms{};

	Parms.Instigator = Instigator;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);

	if (Class_0 != nullptr)
		*Class_0 = Parms.Class_0;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.GetBarAtIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UWBP_DamageMeterBar_C*>&   barList                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// class UVerticalBox*                     vertBox                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UWBP_DamageMeterBar_C**           bar                                                    (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::GetBarAtIndex(int32 Index_0, TArray<class UWBP_DamageMeterBar_C*>& barList, class UVerticalBox* vertBox, class UWBP_DamageMeterBar_C** bar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "GetBarAtIndex");

	Params::WBP_DamageMeter_C_GetBarAtIndex Parms{};

	Parms.Index_0 = Index_0;
	Parms.barList = std::move(barList);
	Parms.vertBox = vertBox;

	UObject::ProcessEvent(Func, &Parms);

	barList = std::move(Parms.barList);

	if (bar != nullptr)
		*bar = Parms.bar;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.GetAbilityTotals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWBP_DamageMeter_C::GetAbilityTotals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "GetAbilityTotals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.FindMinMax
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_DamageMeterBarData>&  BarData_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double*                                 dataMax                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 dataTotal                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::FindMinMax(TArray<struct FST_DamageMeterBarData>& BarData_0, double* dataMax, double* dataTotal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "FindMinMax");

	Params::WBP_DamageMeter_C_FindMinMax Parms{};

	Parms.BarData_0 = std::move(BarData_0);

	UObject::ProcessEvent(Func, &Parms);

	BarData_0 = std::move(Parms.BarData_0);

	if (dataMax != nullptr)
		*dataMax = Parms.dataMax;

	if (dataTotal != nullptr)
		*dataTotal = Parms.dataTotal;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.ExecuteUbergraph_WBP_DamageMeter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::ExecuteUbergraph_WBP_DamageMeter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "ExecuteUbergraph_WBP_DamageMeter");

	Params::WBP_DamageMeter_C_ExecuteUbergraph_WBP_DamageMeter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.EnsureCharacterData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABaseCharacter*                   instigatorChar                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool*                                   Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::EnsureCharacterData(class ABaseCharacter* instigatorChar, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "EnsureCharacterData");

	Params::WBP_DamageMeter_C_EnsureCharacterData Parms{};

	Parms.instigatorChar = instigatorChar;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_DamageMeter_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_DamageMeter_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.CalcHitColorName
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FGameplayTag>&            Tags                                                   (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FName*                            hitName                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::CalcHitColorName(TArray<struct FGameplayTag>& Tags, class FName* hitName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "CalcHitColorName");

	Params::WBP_DamageMeter_C_CalcHitColorName Parms{};

	Parms.Tags = std::move(Tags);

	UObject::ProcessEvent(Func, &Parms);

	Tags = std::move(Parms.Tags);

	if (hitName != nullptr)
		*hitName = Parms.hitName;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.CalcCombatTime
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FGuid&                     PlayerGuid                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double*                                 Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   IsActive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::CalcCombatTime(const struct FGuid& PlayerGuid, double* Time, bool* IsActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "CalcCombatTime");

	Params::WBP_DamageMeter_C_CalcCombatTime Parms{};

	Parms.PlayerGuid = std::move(PlayerGuid);

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;

	if (IsActive != nullptr)
		*IsActive = Parms.IsActive;
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BndEvt__DesignDamageMeter_CheckBox_301_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::BndEvt__DesignDamageMeter_CheckBox_301_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BndEvt__DesignDamageMeter_CheckBox_301_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::WBP_DamageMeter_C_BndEvt__DesignDamageMeter_CheckBox_301_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BndEvt__DamageMeter_InstigatorCBString_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::BndEvt__DamageMeter_InstigatorCBString_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BndEvt__DamageMeter_InstigatorCBString_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature");

	Params::WBP_DamageMeter_C_BndEvt__DamageMeter_InstigatorCBString_K2Node_ComponentBoundEvent_5_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BndEvt__DamageMeter_IconsCB_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bIsChecked                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::BndEvt__DamageMeter_IconsCB_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BndEvt__DamageMeter_IconsCB_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature");

	Params::WBP_DamageMeter_C_BndEvt__DamageMeter_IconsCB_K2Node_ComponentBoundEvent_1_OnCheckBoxComponentStateChanged__DelegateSignature Parms{};

	Parms.bIsChecked = bIsChecked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BndEvt__DamageMeter_DeathLogButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UWBP_DamageMeter_C::BndEvt__DamageMeter_DeathLogButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BndEvt__DamageMeter_DeathLogButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BndEvt__DamageMeter_DamageCBString_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// const class FString&                    SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::BndEvt__DamageMeter_DamageCBString_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BndEvt__DamageMeter_DamageCBString_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature");

	Params::WBP_DamageMeter_C_BndEvt__DamageMeter_DamageCBString_K2Node_ComponentBoundEvent_4_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.BarClicked
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isMain                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    rightMouse                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::BarClicked(int32 Index_0, bool isMain, bool rightMouse)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "BarClicked");

	Params::WBP_DamageMeter_C_BarClicked Parms{};

	Parms.Index_0 = Index_0;
	Parms.isMain = isMain;
	Parms.rightMouse = rightMouse;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.AddMissToTargetMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGuid, int32>&              TargetIndexMap                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FST_DamageMeterMapData>&  TargetMap                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGuid&                     Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   HitGuid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::AddMissToTargetMap(TMap<struct FGuid, int32>& TargetIndexMap, TArray<struct FST_DamageMeterMapData>& TargetMap, const struct FGuid& Target, int64 HitGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "AddMissToTargetMap");

	Params::WBP_DamageMeter_C_AddMissToTargetMap Parms{};

	Parms.TargetIndexMap = std::move(TargetIndexMap);
	Parms.TargetMap = std::move(TargetMap);
	Parms.Target = std::move(Target);
	Parms.HitGuid = HitGuid;

	UObject::ProcessEvent(Func, &Parms);

	TargetIndexMap = std::move(Parms.TargetIndexMap);
	TargetMap = std::move(Parms.TargetMap);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.AddMissToMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DamageMeterMapData&          Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// int64                                   HitGuid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::AddMissToMap(struct FST_DamageMeterMapData& Map, int64 HitGuid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "AddMissToMap");

	Params::WBP_DamageMeter_C_AddMissToMap Parms{};

	Parms.Map = std::move(Map);
	Parms.HitGuid = HitGuid;

	UObject::ProcessEvent(Func, &Parms);

	Map = std::move(Parms.Map);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.AddDataToTargetMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FGuid, int32>&              TargetIndexMap                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FST_DamageMeterMapData>&  TargetMap                                              (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGuid&                     Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   HitGuid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Flags_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::AddDataToTargetMap(TMap<struct FGuid, int32>& TargetIndexMap, TArray<struct FST_DamageMeterMapData>& TargetMap, const struct FGuid& Target, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "AddDataToTargetMap");

	Params::WBP_DamageMeter_C_AddDataToTargetMap Parms{};

	Parms.TargetIndexMap = std::move(TargetIndexMap);
	Parms.TargetMap = std::move(TargetMap);
	Parms.Target = std::move(Target);
	Parms.Value = Value;
	Parms.EffectiveValue = EffectiveValue;
	Parms.HitGuid = HitGuid;
	Parms.Flags_0 = Flags_0;

	UObject::ProcessEvent(Func, &Parms);

	TargetIndexMap = std::move(Parms.TargetIndexMap);
	TargetMap = std::move(Parms.TargetMap);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.AddDataToMaps
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DamageMeterMapData&          Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// TMap<struct FGuid, int32>&              indexMap                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<struct FST_DamageMeterMapData>&  targetArary                                            (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// const struct FGuid&                     Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   HitGuid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Flags_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::AddDataToMaps(struct FST_DamageMeterMapData& Map, TMap<struct FGuid, int32>& indexMap, TArray<struct FST_DamageMeterMapData>& targetArary, const struct FGuid& Target, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "AddDataToMaps");

	Params::WBP_DamageMeter_C_AddDataToMaps Parms{};

	Parms.Map = std::move(Map);
	Parms.indexMap = std::move(indexMap);
	Parms.targetArary = std::move(targetArary);
	Parms.Target = std::move(Target);
	Parms.Value = Value;
	Parms.EffectiveValue = EffectiveValue;
	Parms.HitGuid = HitGuid;
	Parms.Flags_0 = Flags_0;

	UObject::ProcessEvent(Func, &Parms);

	Map = std::move(Parms.Map);
	indexMap = std::move(Parms.indexMap);
	targetArary = std::move(Parms.targetArary);
}


// Function WBP_DamageMeter.WBP_DamageMeter_C.AddDataToMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DamageMeterMapData&          Map                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  EffectiveValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int64                                   HitGuid                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Flags_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_DamageMeter_C::AddDataToMap(struct FST_DamageMeterMapData& Map, double Value, double EffectiveValue, int64 HitGuid, uint8 Flags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_DamageMeter_C", "AddDataToMap");

	Params::WBP_DamageMeter_C_AddDataToMap Parms{};

	Parms.Map = std::move(Map);
	Parms.Value = Value;
	Parms.EffectiveValue = EffectiveValue;
	Parms.HitGuid = HitGuid;
	Parms.Flags_0 = Flags_0;

	UObject::ProcessEvent(Func, &Parms);

	Map = std::move(Parms.Map);
}

}

