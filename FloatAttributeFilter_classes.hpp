#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FloatAttributeFilter

#include "Basic.hpp"

#include "PCG_structs.hpp"
#include "PCG_classes.hpp"
#include "ENUM_PointFilterOperator_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FloatAttributeFilter.FloatAttributeFilter_C
// 0x0038 (0x00C0 - 0x0088)
class UFloatAttributeFilter_C final : public UPCGBlueprintElement
{
public:
	class UPCGSpatialData*                        Spatial_Data;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPCGPoint>                      All_Points;                                        // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UPCGMetadata*                           MetaData;                                          // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   Target_Attribute;                                  // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PointFilterOperator                      Operator;                                          // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteWithContext(struct FPCGContext& InContext, const struct FPCGDataCollection& Input, struct FPCGDataCollection* Output);

	struct FLinearColor NodeColorOverride() const;
	class FName NodeTitleOverride() const;
	bool PointLoopBody(const struct FPCGContext& InContext, const class UPCGPointData* InData, const struct FPCGPoint& InPoint, struct FPCGPoint* OutPoint, class UPCGMetadata* OutMetadata) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FloatAttributeFilter_C">();
	}
	static class UFloatAttributeFilter_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFloatAttributeFilter_C>();
	}
};
static_assert(alignof(UFloatAttributeFilter_C) == 0x000008, "Wrong alignment on UFloatAttributeFilter_C");
static_assert(sizeof(UFloatAttributeFilter_C) == 0x0000C0, "Wrong size on UFloatAttributeFilter_C");
static_assert(offsetof(UFloatAttributeFilter_C, Spatial_Data) == 0x000088, "Member 'UFloatAttributeFilter_C::Spatial_Data' has a wrong offset!");
static_assert(offsetof(UFloatAttributeFilter_C, All_Points) == 0x000090, "Member 'UFloatAttributeFilter_C::All_Points' has a wrong offset!");
static_assert(offsetof(UFloatAttributeFilter_C, MetaData) == 0x0000A0, "Member 'UFloatAttributeFilter_C::MetaData' has a wrong offset!");
static_assert(offsetof(UFloatAttributeFilter_C, Target_Attribute) == 0x0000A8, "Member 'UFloatAttributeFilter_C::Target_Attribute' has a wrong offset!");
static_assert(offsetof(UFloatAttributeFilter_C, Operator) == 0x0000B0, "Member 'UFloatAttributeFilter_C::Operator' has a wrong offset!");
static_assert(offsetof(UFloatAttributeFilter_C, Value) == 0x0000B8, "Member 'UFloatAttributeFilter_C::Value' has a wrong offset!");

}

