#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_RoadTrackDecal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_RoadTrackDecal.BP_RoadTrackDecal_C
// 0x0030 (0x0378 - 0x0348)
class ABP_RoadTrackDecal_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDecalComponent*                        Decal;                                             // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Decal_Mat;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_LandscapeBrushRoad_C*               Owning_Road;                                       // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Owning_Proxy;                                      // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_RoadTrackDecal(int32 EntryPoint);
	void Get_Decal_Data(TArray<TSoftObjectPtr<class UMaterialInterface>>* Decals);
	void Retrieve_Decals();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_RoadTrackDecal_C">();
	}
	static class ABP_RoadTrackDecal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_RoadTrackDecal_C>();
	}
};
static_assert(alignof(ABP_RoadTrackDecal_C) == 0x000008, "Wrong alignment on ABP_RoadTrackDecal_C");
static_assert(sizeof(ABP_RoadTrackDecal_C) == 0x000378, "Wrong size on ABP_RoadTrackDecal_C");
static_assert(offsetof(ABP_RoadTrackDecal_C, UberGraphFrame) == 0x000348, "Member 'ABP_RoadTrackDecal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_RoadTrackDecal_C, Decal) == 0x000350, "Member 'ABP_RoadTrackDecal_C::Decal' has a wrong offset!");
static_assert(offsetof(ABP_RoadTrackDecal_C, DefaultSceneRoot) == 0x000358, "Member 'ABP_RoadTrackDecal_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_RoadTrackDecal_C, Decal_Mat) == 0x000360, "Member 'ABP_RoadTrackDecal_C::Decal_Mat' has a wrong offset!");
static_assert(offsetof(ABP_RoadTrackDecal_C, Owning_Road) == 0x000368, "Member 'ABP_RoadTrackDecal_C::Owning_Road' has a wrong offset!");
static_assert(offsetof(ABP_RoadTrackDecal_C, Owning_Proxy) == 0x000370, "Member 'ABP_RoadTrackDecal_C::Owning_Proxy' has a wrong offset!");

}

