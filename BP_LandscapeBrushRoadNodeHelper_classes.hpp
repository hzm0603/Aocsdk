#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LandscapeBrushRoadNodeHelper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_LandscapeBrushRoad_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LandscapeBrushRoadNodeHelper.BP_LandscapeBrushRoadNodeHelper_C
// 0x0008 (0x0938 - 0x0930)
class ABP_LandscapeBrushRoadNodeHelper_C final : public ABP_LandscapeBrushRoad_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_LandscapeBrushRoadNodeHelper_C;  // 0x0930(0x0008)(ZeroConstructor, Transient, DuplicateTransient)

public:
	void Build_Road();
	void Capture_Minimap(bool Is_Capturing, double Height_Offset, double Width_Scale);
	void ExecuteUbergraph_BP_LandscapeBrushRoadNodeHelper(int32 EntryPoint);
	void OnRoadActiveStateUpdatedBP(const bool bIsRoadActive);
	void OnRoadAppearanceUpdatedBP(const struct FLoadedRoadAppearance& LoadedRoadAppearance);
	void OnRoadBaseAppearanceUpdatedBP(const struct FLoadedRoadBaseAppearance& LoadedRoadBaseAppearance);
	void OnUpdateActiveRoadStatus();
	void OnUpdateLoadedRoadAppearance();
	void Set_Road_Levels(int32 Road_Level);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LandscapeBrushRoadNodeHelper_C">();
	}
	static class ABP_LandscapeBrushRoadNodeHelper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LandscapeBrushRoadNodeHelper_C>();
	}
};
static_assert(alignof(ABP_LandscapeBrushRoadNodeHelper_C) == 0x000008, "Wrong alignment on ABP_LandscapeBrushRoadNodeHelper_C");
static_assert(sizeof(ABP_LandscapeBrushRoadNodeHelper_C) == 0x000938, "Wrong size on ABP_LandscapeBrushRoadNodeHelper_C");
static_assert(offsetof(ABP_LandscapeBrushRoadNodeHelper_C, UberGraphFrame_BP_LandscapeBrushRoadNodeHelper_C) == 0x000930, "Member 'ABP_LandscapeBrushRoadNodeHelper_C::UberGraphFrame_BP_LandscapeBrushRoadNodeHelper_C' has a wrong offset!");

}

