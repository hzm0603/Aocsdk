#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IntrepidNet

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "IntrepidNetCore_structs.hpp"
#include "IntrepidNet_structs.hpp"


namespace SDK::Params
{

// Function IntrepidNet.IntrepidNetDebugComponent.ClientTransferDataRPC
// 0x0008 (0x0008 - 0x0000)
struct IntrepidNetDebugComponent_ClientTransferDataRPC final
{
public:
	struct FTimespan                              TimePromotionTook;                                 // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetDebugComponent_ClientTransferDataRPC) == 0x000008, "Wrong alignment on IntrepidNetDebugComponent_ClientTransferDataRPC");
static_assert(sizeof(IntrepidNetDebugComponent_ClientTransferDataRPC) == 0x000008, "Wrong size on IntrepidNetDebugComponent_ClientTransferDataRPC");
static_assert(offsetof(IntrepidNetDebugComponent_ClientTransferDataRPC, TimePromotionTook) == 0x000000, "Member 'IntrepidNetDebugComponent_ClientTransferDataRPC::TimePromotionTook' has a wrong offset!");

// Function IntrepidNet.IntrepidNetDebugComponent.OnPromotion
// 0x0001 (0x0001 - 0x0000)
struct IntrepidNetDebugComponent_OnPromotion final
{
public:
	bool                                          bWasProxy;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetDebugComponent_OnPromotion) == 0x000001, "Wrong alignment on IntrepidNetDebugComponent_OnPromotion");
static_assert(sizeof(IntrepidNetDebugComponent_OnPromotion) == 0x000001, "Wrong size on IntrepidNetDebugComponent_OnPromotion");
static_assert(offsetof(IntrepidNetDebugComponent_OnPromotion, bWasProxy) == 0x000000, "Member 'IntrepidNetDebugComponent_OnPromotion::bWasProxy' has a wrong offset!");

// Function IntrepidNet.IntrepidNetDebugComponent.ServerSplitServerCell
// 0x000C (0x000C - 0x0000)
struct IntrepidNetDebugComponent_ServerSplitServerCell final
{
public:
	ESubdivisionAxis                              SubdivisionAxis;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseLocation;                                      // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetDebugComponent_ServerSplitServerCell) == 0x000004, "Wrong alignment on IntrepidNetDebugComponent_ServerSplitServerCell");
static_assert(sizeof(IntrepidNetDebugComponent_ServerSplitServerCell) == 0x00000C, "Wrong size on IntrepidNetDebugComponent_ServerSplitServerCell");
static_assert(offsetof(IntrepidNetDebugComponent_ServerSplitServerCell, SubdivisionAxis) == 0x000000, "Member 'IntrepidNetDebugComponent_ServerSplitServerCell::SubdivisionAxis' has a wrong offset!");
static_assert(offsetof(IntrepidNetDebugComponent_ServerSplitServerCell, Value) == 0x000004, "Member 'IntrepidNetDebugComponent_ServerSplitServerCell::Value' has a wrong offset!");
static_assert(offsetof(IntrepidNetDebugComponent_ServerSplitServerCell, bUseLocation) == 0x000008, "Member 'IntrepidNetDebugComponent_ServerSplitServerCell::bUseLocation' has a wrong offset!");

// Function IntrepidNet.IntrepidNetDebugComponent.SplitServerCell
// 0x0018 (0x0018 - 0x0000)
struct IntrepidNetDebugComponent_SplitServerCell final
{
public:
	class FString                                 Axis;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SplitRatio;                                        // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetDebugComponent_SplitServerCell) == 0x000008, "Wrong alignment on IntrepidNetDebugComponent_SplitServerCell");
static_assert(sizeof(IntrepidNetDebugComponent_SplitServerCell) == 0x000018, "Wrong size on IntrepidNetDebugComponent_SplitServerCell");
static_assert(offsetof(IntrepidNetDebugComponent_SplitServerCell, Axis) == 0x000000, "Member 'IntrepidNetDebugComponent_SplitServerCell::Axis' has a wrong offset!");
static_assert(offsetof(IntrepidNetDebugComponent_SplitServerCell, SplitRatio) == 0x000010, "Member 'IntrepidNetDebugComponent_SplitServerCell::SplitRatio' has a wrong offset!");

// Function IntrepidNet.IntrepidNetDebugComponent.SplitServerCellAt
// 0x0018 (0x0018 - 0x0000)
struct IntrepidNetDebugComponent_SplitServerCellAt final
{
public:
	class FString                                 Axis;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Position;                                          // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetDebugComponent_SplitServerCellAt) == 0x000008, "Wrong alignment on IntrepidNetDebugComponent_SplitServerCellAt");
static_assert(sizeof(IntrepidNetDebugComponent_SplitServerCellAt) == 0x000018, "Wrong size on IntrepidNetDebugComponent_SplitServerCellAt");
static_assert(offsetof(IntrepidNetDebugComponent_SplitServerCellAt, Axis) == 0x000000, "Member 'IntrepidNetDebugComponent_SplitServerCellAt::Axis' has a wrong offset!");
static_assert(offsetof(IntrepidNetDebugComponent_SplitServerCellAt, Position) == 0x000010, "Member 'IntrepidNetDebugComponent_SplitServerCellAt::Position' has a wrong offset!");

// Function IntrepidNet.IntrepidNetDebugComponent.IsDrawingServerRegions
// 0x0001 (0x0001 - 0x0000)
struct IntrepidNetDebugComponent_IsDrawingServerRegions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetDebugComponent_IsDrawingServerRegions) == 0x000001, "Wrong alignment on IntrepidNetDebugComponent_IsDrawingServerRegions");
static_assert(sizeof(IntrepidNetDebugComponent_IsDrawingServerRegions) == 0x000001, "Wrong size on IntrepidNetDebugComponent_IsDrawingServerRegions");
static_assert(offsetof(IntrepidNetDebugComponent_IsDrawingServerRegions, ReturnValue) == 0x000000, "Member 'IntrepidNetDebugComponent_IsDrawingServerRegions::ReturnValue' has a wrong offset!");

// Function IntrepidNet.IntrepidNetServerPackageMap.OnObjectDestroyed
// 0x0008 (0x0008 - 0x0000)
struct IntrepidNetServerPackageMap_OnObjectDestroyed final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetServerPackageMap_OnObjectDestroyed) == 0x000008, "Wrong alignment on IntrepidNetServerPackageMap_OnObjectDestroyed");
static_assert(sizeof(IntrepidNetServerPackageMap_OnObjectDestroyed) == 0x000008, "Wrong size on IntrepidNetServerPackageMap_OnObjectDestroyed");
static_assert(offsetof(IntrepidNetServerPackageMap_OnObjectDestroyed, Object) == 0x000000, "Member 'IntrepidNetServerPackageMap_OnObjectDestroyed::Object' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.BuildServerGrid
// 0x0038 (0x0038 - 0x0000)
struct IntrepidNetUtilitySubsystem_BuildServerGrid final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Extents;                                           // 0x0018(0x0018)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumX;                                              // 0x0030(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumY;                                              // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetUtilitySubsystem_BuildServerGrid) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_BuildServerGrid");
static_assert(sizeof(IntrepidNetUtilitySubsystem_BuildServerGrid) == 0x000038, "Wrong size on IntrepidNetUtilitySubsystem_BuildServerGrid");
static_assert(offsetof(IntrepidNetUtilitySubsystem_BuildServerGrid, Origin) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_BuildServerGrid::Origin' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_BuildServerGrid, Extents) == 0x000018, "Member 'IntrepidNetUtilitySubsystem_BuildServerGrid::Extents' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_BuildServerGrid, NumX) == 0x000030, "Member 'IntrepidNetUtilitySubsystem_BuildServerGrid::NumX' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_BuildServerGrid, NumY) == 0x000034, "Member 'IntrepidNetUtilitySubsystem_BuildServerGrid::NumY' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.GetIntrepidNetConfigProfiles
// 0x0010 (0x0010 - 0x0000)
struct IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles");
static_assert(sizeof(IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles) == 0x000010, "Wrong size on IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles");
static_assert(offsetof(IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles, ReturnValue) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_GetIntrepidNetConfigProfiles::ReturnValue' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.MakeIntrepidNetConfig
// 0x0060 (0x0060 - 0x0000)
struct IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldOrigin;                                       // 0x0010(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                WorldSize;                                         // 0x0028(0x0018)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GridNodesX;                                        // 0x0040(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         GridNodesY;                                        // 0x0044(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        PlayerStartLocations;                              // 0x0048(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig");
static_assert(sizeof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig) == 0x000060, "Wrong size on IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, Name_0) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::Name_0' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, WorldOrigin) == 0x000010, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::WorldOrigin' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, WorldSize) == 0x000028, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::WorldSize' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, GridNodesX) == 0x000040, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::GridNodesX' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, GridNodesY) == 0x000044, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::GridNodesY' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, PlayerStartLocations) == 0x000048, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::PlayerStartLocations' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig, ReturnValue) == 0x000058, "Member 'IntrepidNetUtilitySubsystem_MakeIntrepidNetConfig::ReturnValue' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.OnConfigUpdated
// 0x0010 (0x0010 - 0x0000)
struct IntrepidNetUtilitySubsystem_OnConfigUpdated final
{
public:
	class FString                                 NewConfigFile;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidNetUtilitySubsystem_OnConfigUpdated) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_OnConfigUpdated");
static_assert(sizeof(IntrepidNetUtilitySubsystem_OnConfigUpdated) == 0x000010, "Wrong size on IntrepidNetUtilitySubsystem_OnConfigUpdated");
static_assert(offsetof(IntrepidNetUtilitySubsystem_OnConfigUpdated, NewConfigFile) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_OnConfigUpdated::NewConfigFile' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.ReadConfig
// 0x0098 (0x0098 - 0x0000)
struct IntrepidNetUtilitySubsystem_ReadConfig final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntrepidNetConfigUnreal               OutConfig;                                         // 0x0010(0x0070)(Parm, OutParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetUtilitySubsystem_ReadConfig) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_ReadConfig");
static_assert(sizeof(IntrepidNetUtilitySubsystem_ReadConfig) == 0x000098, "Wrong size on IntrepidNetUtilitySubsystem_ReadConfig");
static_assert(offsetof(IntrepidNetUtilitySubsystem_ReadConfig, Filename) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_ReadConfig::Filename' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_ReadConfig, OutConfig) == 0x000010, "Member 'IntrepidNetUtilitySubsystem_ReadConfig::OutConfig' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_ReadConfig, Error) == 0x000080, "Member 'IntrepidNetUtilitySubsystem_ReadConfig::Error' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_ReadConfig, ReturnValue) == 0x000090, "Member 'IntrepidNetUtilitySubsystem_ReadConfig::ReturnValue' has a wrong offset!");

// Function IntrepidNet.IntrepidNetUtilitySubsystem.WriteConfig
// 0x0098 (0x0098 - 0x0000)
struct IntrepidNetUtilitySubsystem_WriteConfig final
{
public:
	class FString                                 Filename;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FIntrepidNetConfigUnreal               Config;                                            // 0x0010(0x0070)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Error;                                             // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0090(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(IntrepidNetUtilitySubsystem_WriteConfig) == 0x000008, "Wrong alignment on IntrepidNetUtilitySubsystem_WriteConfig");
static_assert(sizeof(IntrepidNetUtilitySubsystem_WriteConfig) == 0x000098, "Wrong size on IntrepidNetUtilitySubsystem_WriteConfig");
static_assert(offsetof(IntrepidNetUtilitySubsystem_WriteConfig, Filename) == 0x000000, "Member 'IntrepidNetUtilitySubsystem_WriteConfig::Filename' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_WriteConfig, Config) == 0x000010, "Member 'IntrepidNetUtilitySubsystem_WriteConfig::Config' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_WriteConfig, Error) == 0x000080, "Member 'IntrepidNetUtilitySubsystem_WriteConfig::Error' has a wrong offset!");
static_assert(offsetof(IntrepidNetUtilitySubsystem_WriteConfig, ReturnValue) == 0x000090, "Member 'IntrepidNetUtilitySubsystem_WriteConfig::ReturnValue' has a wrong offset!");

// Function IntrepidNet.IntrepidRepKeyComponent.GetReplicationKey
// 0x0004 (0x0004 - 0x0000)
struct IntrepidRepKeyComponent_GetReplicationKey final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(IntrepidRepKeyComponent_GetReplicationKey) == 0x000004, "Wrong alignment on IntrepidRepKeyComponent_GetReplicationKey");
static_assert(sizeof(IntrepidRepKeyComponent_GetReplicationKey) == 0x000004, "Wrong size on IntrepidRepKeyComponent_GetReplicationKey");
static_assert(offsetof(IntrepidRepKeyComponent_GetReplicationKey, ReturnValue) == 0x000000, "Member 'IntrepidRepKeyComponent_GetReplicationKey::ReturnValue' has a wrong offset!");

}

