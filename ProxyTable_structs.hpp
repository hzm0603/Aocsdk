#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ProxyTable

#include "Basic.hpp"

#include "Chooser_structs.hpp"
#include "StructUtils_structs.hpp"


namespace SDK
{

// ScriptStruct ProxyTable.ChooserParameterProxyTableBase
// 0x0000 (0x0008 - 0x0008)
struct FChooserParameterProxyTableBase : public FChooserParameterBase
{
};
static_assert(alignof(FChooserParameterProxyTableBase) == 0x000008, "Wrong alignment on FChooserParameterProxyTableBase");
static_assert(sizeof(FChooserParameterProxyTableBase) == 0x000008, "Wrong size on FChooserParameterProxyTableBase");

// ScriptStruct ProxyTable.ProxyTableContextProperty
// 0x0018 (0x0020 - 0x0008)
struct FProxyTableContextProperty final : public FChooserParameterProxyTableBase
{
public:
	struct FChooserPropertyBinding                Binding;                                           // 0x0008(0x0018)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FProxyTableContextProperty) == 0x000008, "Wrong alignment on FProxyTableContextProperty");
static_assert(sizeof(FProxyTableContextProperty) == 0x000020, "Wrong size on FProxyTableContextProperty");
static_assert(offsetof(FProxyTableContextProperty, Binding) == 0x000008, "Member 'FProxyTableContextProperty::Binding' has a wrong offset!");

// ScriptStruct ProxyTable.LookupProxyWithOverrideTable
// 0x0010 (0x0018 - 0x0008)
struct FLookupProxyWithOverrideTable final : public FObjectChooserBase
{
public:
	class UProxyAsset*                            Proxy;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProxyTable*                            OverrideProxyTable;                                // 0x0010(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLookupProxyWithOverrideTable) == 0x000008, "Wrong alignment on FLookupProxyWithOverrideTable");
static_assert(sizeof(FLookupProxyWithOverrideTable) == 0x000018, "Wrong size on FLookupProxyWithOverrideTable");
static_assert(offsetof(FLookupProxyWithOverrideTable, Proxy) == 0x000008, "Member 'FLookupProxyWithOverrideTable::Proxy' has a wrong offset!");
static_assert(offsetof(FLookupProxyWithOverrideTable, OverrideProxyTable) == 0x000010, "Member 'FLookupProxyWithOverrideTable::OverrideProxyTable' has a wrong offset!");

// ScriptStruct ProxyTable.LookupProxy
// 0x0018 (0x0020 - 0x0008)
struct FLookupProxy final : public FObjectChooserBase
{
public:
	class UProxyAsset*                            Proxy;                                             // 0x0008(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ProxyTable;                                        // 0x0010(0x0010)(Edit, NoClear, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLookupProxy) == 0x000008, "Wrong alignment on FLookupProxy");
static_assert(sizeof(FLookupProxy) == 0x000020, "Wrong size on FLookupProxy");
static_assert(offsetof(FLookupProxy, Proxy) == 0x000008, "Member 'FLookupProxy::Proxy' has a wrong offset!");
static_assert(offsetof(FLookupProxy, ProxyTable) == 0x000010, "Member 'FLookupProxy::ProxyTable' has a wrong offset!");

// ScriptStruct ProxyTable.ProxyStructOutput
// 0x0028 (0x0028 - 0x0000)
struct FProxyStructOutput final
{
public:
	struct FChooserStructPropertyBinding          Binding;                                           // 0x0000(0x0018)(Edit, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       Value;                                             // 0x0018(0x0010)(Edit, NoClear, NativeAccessSpecifierPublic)
};
static_assert(alignof(FProxyStructOutput) == 0x000008, "Wrong alignment on FProxyStructOutput");
static_assert(sizeof(FProxyStructOutput) == 0x000028, "Wrong size on FProxyStructOutput");
static_assert(offsetof(FProxyStructOutput, Binding) == 0x000000, "Member 'FProxyStructOutput::Binding' has a wrong offset!");
static_assert(offsetof(FProxyStructOutput, Value) == 0x000018, "Member 'FProxyStructOutput::Value' has a wrong offset!");

// ScriptStruct ProxyTable.ProxyEntry
// 0x0030 (0x0030 - 0x0000)
struct FProxyEntry final
{
public:
	class UProxyAsset*                            Proxy;                                             // 0x0000(0x0008)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   Key;                                               // 0x0008(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInstancedStruct                       ValueStruct;                                       // 0x0010(0x0010)(Edit, NoClear, NativeAccessSpecifierPublic)
	TArray<struct FProxyStructOutput>             OutputStructData;                                  // 0x0020(0x0010)(Edit, ZeroConstructor, NoClear, NativeAccessSpecifierPublic)
};
static_assert(alignof(FProxyEntry) == 0x000008, "Wrong alignment on FProxyEntry");
static_assert(sizeof(FProxyEntry) == 0x000030, "Wrong size on FProxyEntry");
static_assert(offsetof(FProxyEntry, Proxy) == 0x000000, "Member 'FProxyEntry::Proxy' has a wrong offset!");
static_assert(offsetof(FProxyEntry, Key) == 0x000008, "Member 'FProxyEntry::Key' has a wrong offset!");
static_assert(offsetof(FProxyEntry, ValueStruct) == 0x000010, "Member 'FProxyEntry::ValueStruct' has a wrong offset!");
static_assert(offsetof(FProxyEntry, OutputStructData) == 0x000020, "Member 'FProxyEntry::OutputStructData' has a wrong offset!");

// ScriptStruct ProxyTable.RuntimeProxyValue
// 0x0020 (0x0020 - 0x0000)
struct FRuntimeProxyValue final
{
public:
	struct FInstancedStruct                       Value;                                             // 0x0000(0x0010)(NativeAccessSpecifierPublic)
	TArray<struct FProxyStructOutput>             OutputStructData;                                  // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRuntimeProxyValue) == 0x000008, "Wrong alignment on FRuntimeProxyValue");
static_assert(sizeof(FRuntimeProxyValue) == 0x000020, "Wrong size on FRuntimeProxyValue");
static_assert(offsetof(FRuntimeProxyValue, Value) == 0x000000, "Member 'FRuntimeProxyValue::Value' has a wrong offset!");
static_assert(offsetof(FRuntimeProxyValue, OutputStructData) == 0x000010, "Member 'FRuntimeProxyValue::OutputStructData' has a wrong offset!");

}

