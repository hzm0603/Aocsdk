#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_ElderDragon_Fire_TrackAirBreathTargetStatus

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STT_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass STT_ElderDragon_Fire_TrackAirBreathTargetStatus.STT_ElderDragon_Fire_TrackAirBreathTargetStatus_C
// 0x0040 (0x00B8 - 0x0078)
class USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C final : public USTT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0078(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AElderDragon_Fire_C*                    Agent;                                             // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	double                                        MinTargetDis;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTargetDis;                                      // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetAngle;                                       // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasTargetAtFront;                                  // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnceHasTargetAtFront;                              // 0x00A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TimeSinceOnceHasTargetatFront;                     // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeSinceNoTargetatFront;                          // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_STT_ElderDragon_Fire_TrackAirBreathTargetStatus(int32 EntryPoint);
	void ReceiveLatentEnterState(const struct FStateTreeTransitionResult& Transition);
	void ReceiveLatentTick(const float DeltaTime);
	void Update_Target_Status();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"STT_ElderDragon_Fire_TrackAirBreathTargetStatus_C">();
	}
	static class USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C>();
	}
};
static_assert(alignof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C) == 0x000008, "Wrong alignment on USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C");
static_assert(sizeof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C) == 0x0000B8, "Wrong size on USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, UberGraphFrame) == 0x000078, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, Agent) == 0x000080, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::Agent' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, MinTargetDis) == 0x000088, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::MinTargetDis' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, MaxTargetDis) == 0x000090, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::MaxTargetDis' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, TargetAngle) == 0x000098, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::TargetAngle' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, HasTargetAtFront) == 0x0000A0, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::HasTargetAtFront' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, OnceHasTargetAtFront) == 0x0000A1, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::OnceHasTargetAtFront' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, TimeSinceOnceHasTargetatFront) == 0x0000A8, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::TimeSinceOnceHasTargetatFront' has a wrong offset!");
static_assert(offsetof(USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C, TimeSinceNoTargetatFront) == 0x0000B0, "Member 'USTT_ElderDragon_Fire_TrackAirBreathTargetStatus_C::TimeSinceNoTargetatFront' has a wrong offset!");

}

