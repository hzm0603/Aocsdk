#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AoCFunctionLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.GetActorBackwardsVector
// 0x0058 (0x0058 - 0x0000)
struct AoCFunctionLibrary_C_GetActorBackwardsVector final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BackwardsVector;                                   // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCFunctionLibrary_C_GetActorBackwardsVector) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_GetActorBackwardsVector");
static_assert(sizeof(AoCFunctionLibrary_C_GetActorBackwardsVector) == 0x000058, "Wrong size on AoCFunctionLibrary_C_GetActorBackwardsVector");
static_assert(offsetof(AoCFunctionLibrary_C_GetActorBackwardsVector, Actor) == 0x000000, "Member 'AoCFunctionLibrary_C_GetActorBackwardsVector::Actor' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetActorBackwardsVector, __WorldContext) == 0x000008, "Member 'AoCFunctionLibrary_C_GetActorBackwardsVector::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetActorBackwardsVector, BackwardsVector) == 0x000010, "Member 'AoCFunctionLibrary_C_GetActorBackwardsVector::BackwardsVector' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetActorBackwardsVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000028, "Member 'AoCFunctionLibrary_C_GetActorBackwardsVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetActorBackwardsVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'AoCFunctionLibrary_C_GetActorBackwardsVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.GetClosestAndFurthest
// 0x0078 (0x0078 - 0x0000)
struct AoCFunctionLibrary_C_GetClosestAndFurthest final
{
public:
	class AActor*                                 Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ArrayOfTargets;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Closest;                                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Furthest;                                          // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        FarDistance;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CloseDistance;                                     // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         TargetArray;                                       // 0x0040(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 SourceRef;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FurthestTarget;                                    // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ClosestTarget;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetClosestAndFurthest_Closest;            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetClosestAndFurthest_Farthest;           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCFunctionLibrary_C_GetClosestAndFurthest) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_GetClosestAndFurthest");
static_assert(sizeof(AoCFunctionLibrary_C_GetClosestAndFurthest) == 0x000078, "Wrong size on AoCFunctionLibrary_C_GetClosestAndFurthest");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, Source) == 0x000000, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::Source' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, ArrayOfTargets) == 0x000008, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::ArrayOfTargets' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, __WorldContext) == 0x000018, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, Closest) == 0x000020, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::Closest' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, Furthest) == 0x000028, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::Furthest' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, FarDistance) == 0x000030, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::FarDistance' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, CloseDistance) == 0x000038, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::CloseDistance' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, TargetArray) == 0x000040, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::TargetArray' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, SourceRef) == 0x000050, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::SourceRef' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, FurthestTarget) == 0x000058, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::FurthestTarget' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, ClosestTarget) == 0x000060, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::ClosestTarget' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, CallFunc_GetClosestAndFurthest_Closest) == 0x000068, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::CallFunc_GetClosestAndFurthest_Closest' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetClosestAndFurthest, CallFunc_GetClosestAndFurthest_Farthest) == 0x000070, "Member 'AoCFunctionLibrary_C_GetClosestAndFurthest::CallFunc_GetClosestAndFurthest_Farthest' has a wrong offset!");

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.GetGroupMembers
// 0x00A8 (0x00A8 - 0x0000)
struct AoCFunctionLibrary_C_GetGroupMembers final
{
public:
	class ABaseCharacter*                         BaseCharacter;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         GroupNameArray;                                    // 0x0010(0x0010)(Parm, OutParm)
	TArray<class AAoCPlayerController*>           PlayerControllerArray;                             // 0x0020(0x0010)(Parm, OutParm)
	TArray<class APlayerCharacter*>               CharacterReferences;                               // 0x0030(0x0010)(Parm, OutParm)
	class AAoCPlayerController*                   MyController;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerCharacter*>               CharacterReferenceArray;                           // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class AAoCPlayerController*>           CharacterControllerArray;                          // 0x0058(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class FString>                         GroupMembers;                                      // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CallFunc_GetGroupMembers_Names;                    // 0x0078(0x0010)(ReferenceParm)
	TArray<class AAoCPlayerController*>           CallFunc_GetGroupMembers_Controllers;              // 0x0088(0x0010)(ReferenceParm)
	TArray<class APlayerCharacter*>               CallFunc_GetGroupMembers_Players;                  // 0x0098(0x0010)(ReferenceParm)
};
static_assert(alignof(AoCFunctionLibrary_C_GetGroupMembers) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_GetGroupMembers");
static_assert(sizeof(AoCFunctionLibrary_C_GetGroupMembers) == 0x0000A8, "Wrong size on AoCFunctionLibrary_C_GetGroupMembers");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, BaseCharacter) == 0x000000, "Member 'AoCFunctionLibrary_C_GetGroupMembers::BaseCharacter' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, __WorldContext) == 0x000008, "Member 'AoCFunctionLibrary_C_GetGroupMembers::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, GroupNameArray) == 0x000010, "Member 'AoCFunctionLibrary_C_GetGroupMembers::GroupNameArray' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, PlayerControllerArray) == 0x000020, "Member 'AoCFunctionLibrary_C_GetGroupMembers::PlayerControllerArray' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CharacterReferences) == 0x000030, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CharacterReferences' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, MyController) == 0x000040, "Member 'AoCFunctionLibrary_C_GetGroupMembers::MyController' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CharacterReferenceArray) == 0x000048, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CharacterReferenceArray' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CharacterControllerArray) == 0x000058, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CharacterControllerArray' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, GroupMembers) == 0x000068, "Member 'AoCFunctionLibrary_C_GetGroupMembers::GroupMembers' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CallFunc_GetGroupMembers_Names) == 0x000078, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CallFunc_GetGroupMembers_Names' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CallFunc_GetGroupMembers_Controllers) == 0x000088, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CallFunc_GetGroupMembers_Controllers' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetGroupMembers, CallFunc_GetGroupMembers_Players) == 0x000098, "Member 'AoCFunctionLibrary_C_GetGroupMembers::CallFunc_GetGroupMembers_Players' has a wrong offset!");

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.GetPlayerPrimaryWeaponMesh
// 0x0020 (0x0020 - 0x0000)
struct AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh final
{
public:
	class APlayerCharacter*                       PlayerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          WeaponMesh;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPrimary;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh");
static_assert(sizeof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh) == 0x000020, "Wrong size on AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh, PlayerPawn) == 0x000000, "Member 'AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh, __WorldContext) == 0x000008, "Member 'AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh, WeaponMesh) == 0x000010, "Member 'AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh::WeaponMesh' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh, HasPrimary) == 0x000018, "Member 'AoCFunctionLibrary_C_GetPlayerPrimaryWeaponMesh::HasPrimary' has a wrong offset!");

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.GetPlayersInRadiusUsingOctree
// 0x0078 (0x0078 - 0x0000)
struct AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree final
{
public:
	struct FVector                                Center;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                WorldContextObject;                                // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerCharacter*>               Players;                                           // 0x0030(0x0010)(Parm, OutParm)
	bool                                          PlayersFound;                                      // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerCharacter*>               OutPlayers;                                        // 0x0048(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class APlayerCharacter*>               CallFunc_GetPlayersInRadius_Players;               // 0x0058(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayersInRadius_Radius_ImplicitCast;   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree");
static_assert(sizeof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree) == 0x000078, "Wrong size on AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, Center) == 0x000000, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::Center' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, Radius) == 0x000018, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::Radius' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, WorldContextObject) == 0x000020, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::WorldContextObject' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, __WorldContext) == 0x000028, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, Players) == 0x000030, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::Players' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, PlayersFound) == 0x000040, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::PlayersFound' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, OutPlayers) == 0x000048, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::OutPlayers' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, CallFunc_GetPlayersInRadius_Players) == 0x000058, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::CallFunc_GetPlayersInRadius_Players' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree, CallFunc_GetPlayersInRadius_Radius_ImplicitCast) == 0x000070, "Member 'AoCFunctionLibrary_C_GetPlayersInRadiusUsingOctree::CallFunc_GetPlayersInRadius_Radius_ImplicitCast' has a wrong offset!");

// Function AoCFunctionLibrary.AoCFunctionLibrary_C.IsDeadPure
// 0x0018 (0x0018 - 0x0000)
struct AoCFunctionLibrary_C_IsDeadPure final
{
public:
	class ABaseCharacter*                         Source;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Dead;                                              // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AoCFunctionLibrary_C_IsDeadPure) == 0x000008, "Wrong alignment on AoCFunctionLibrary_C_IsDeadPure");
static_assert(sizeof(AoCFunctionLibrary_C_IsDeadPure) == 0x000018, "Wrong size on AoCFunctionLibrary_C_IsDeadPure");
static_assert(offsetof(AoCFunctionLibrary_C_IsDeadPure, Source) == 0x000000, "Member 'AoCFunctionLibrary_C_IsDeadPure::Source' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_IsDeadPure, __WorldContext) == 0x000008, "Member 'AoCFunctionLibrary_C_IsDeadPure::__WorldContext' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_IsDeadPure, Dead) == 0x000010, "Member 'AoCFunctionLibrary_C_IsDeadPure::Dead' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_IsDeadPure, CallFunc_IsDead_ReturnValue) == 0x000011, "Member 'AoCFunctionLibrary_C_IsDeadPure::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(AoCFunctionLibrary_C_IsDeadPure, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'AoCFunctionLibrary_C_IsDeadPure::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

