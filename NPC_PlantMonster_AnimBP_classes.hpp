#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_PlantMonster_AnimBP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "NPC_PlantMonster_AnimBP_structs.hpp"
#include "Engine_structs.hpp"
#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass NPC_PlantMonster_AnimBP.NPC_PlantMonster_AnimBP_C
// 0x2280 (0x3EA0 - 0x1C20)
class UNPC_PlantMonster_AnimBP_C final : public UAoCNPCAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1C20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct NPC_PlantMonster_AnimBP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x1C28(0x004C)(HasGetValueTypeHash)
	uint8                                         Pad_1C74[0x4];                                     // 0x1C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x1C78(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x1C80(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1C88(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1CA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1CD0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x1CF8(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x1D40(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_4;          // 0x1D88(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x1EA0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x1EE8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1F30(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1F58(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1F80(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1FA8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1FD0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1FF8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2020(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x2048(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x2070(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x20B8(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x2100(0x0118)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x2218(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x2260(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x2280(0x0118)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x2398(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x23C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x23E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2410(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x2438(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2480(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x24A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x24E8(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2508(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x2528(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x25F0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2610(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2638(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x2660(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x2688(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x26B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x26D8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x2700(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x2748(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x2768(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x27B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x27F8(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_2;                    // 0x2840(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x2888(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x28D0(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x28F0(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x29B8(0x0020)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x29D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x29F8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2A40(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2A60(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2AA8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x2AC8(0x00C8)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x2B90(0x0118)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2CA8(0x0020)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x2CC8(0x0118)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x2DE0(0x0070)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2E50(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x2E70(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x2F38(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2F58(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x3020(0x0080)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x30A0(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x31C8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x31E8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x3208(0x0128)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_9;                              // 0x3330(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_8;                              // 0x3378(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x33C0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x33E8(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x3468(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x3490(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_7;                              // 0x34D8(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt_1;                    // 0x3520(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_6;                              // 0x3568(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_5;                              // 0x35B0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x35F8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x3640(0x0048)()
	struct FAnimNode_BlendListByInt               AnimGraphNode_BlendListByInt;                      // 0x3688(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x36D0(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x3718(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x3760(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x37A8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x37D0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x37F8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x3820(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x3868(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x3890(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x38B8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x38E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x3908(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x3930(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x3978(0x0080)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x39F8(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x3A20(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x3B10(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend_1;                       // 0x3B38(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x3C00(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x3C28(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x3C50(0x00F0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x3D40(0x0028)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x3D68(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x3E30(0x0028)()
	double                                        SpeedForward;                                      // 0x3E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              OnAttackStart;                                     // 0x3E60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnAttackEnd;                                       // 0x3E70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          OpenBulb;                                          // 0x3E80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E81[0x7];                                     // 0x3E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpeedRight;                                        // 0x3E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewVar;                                            // 0x3E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_NPCNotAttacking();
	void AnimNotify_OpenBulb();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_NPC_PlantMonster_AnimBP(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_PlantMonster_AnimBP_C">();
	}
	static class UNPC_PlantMonster_AnimBP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UNPC_PlantMonster_AnimBP_C>();
	}
};
static_assert(alignof(UNPC_PlantMonster_AnimBP_C) == 0x000010, "Wrong alignment on UNPC_PlantMonster_AnimBP_C");
static_assert(sizeof(UNPC_PlantMonster_AnimBP_C) == 0x003EA0, "Wrong size on UNPC_PlantMonster_AnimBP_C");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, UberGraphFrame) == 0x001C20, "Member 'UNPC_PlantMonster_AnimBP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, __AnimBlueprintMutables) == 0x001C28, "Member 'UNPC_PlantMonster_AnimBP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimBlueprintExtension_PropertyAccess) == 0x001C78, "Member 'UNPC_PlantMonster_AnimBP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimBlueprintExtension_Base) == 0x001C80, "Member 'UNPC_PlantMonster_AnimBP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Root) == 0x001C88, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_20) == 0x001CA8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_19) == 0x001CD0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_12) == 0x001CF8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByBool_4) == 0x001D40, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_4) == 0x001D88, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_11) == 0x001EA0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_14) == 0x001EE8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_18) == 0x001F08, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_17) == 0x001F30, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_16) == 0x001F58, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_15) == 0x001F80, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_14) == 0x001FA8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_13) == 0x001FD0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_12) == 0x001FF8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_11) == 0x002020, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_10) == 0x002048, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_10) == 0x002070, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByBool_3) == 0x0020B8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x002100, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_9) == 0x002218, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_13) == 0x002260, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x002280, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_9) == 0x002398, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_8) == 0x0023C0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_7) == 0x0023E8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_6) == 0x002410, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_8) == 0x002438, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_12) == 0x002480, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_7) == 0x0024A0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_11) == 0x0024E8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_10) == 0x002508, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateMachine_4) == 0x002528, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_9) == 0x0025F0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_5) == 0x002610, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_4) == 0x002638, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_3) == 0x002660, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_2) == 0x002688, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult_1) == 0x0026B0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TransitionResult) == 0x0026D8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_6) == 0x002700, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_8) == 0x002748, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_5) == 0x002768, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_4) == 0x0027B0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_3) == 0x0027F8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByInt_2) == 0x002840, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByInt_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_2) == 0x002888, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_7) == 0x0028D0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateMachine_3) == 0x0028F0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_6) == 0x0029B8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_5) == 0x0029D8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer_1) == 0x0029F8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_4) == 0x002A40, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SequencePlayer) == 0x002A60, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_3) == 0x002AA8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateMachine_2) == 0x002AC8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x002B90, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_2) == 0x002CA8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x002CC8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendSpacePlayer) == 0x002DE0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult_1) == 0x002E50, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateMachine_1) == 0x002E70, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateResult) == 0x002F38, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_StateMachine) == 0x002F58, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SaveCachedPose_2) == 0x003020, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_ModifyBone_1) == 0x0030A0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_LocalToComponentSpace) == 0x0031C8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_ComponentToLocalSpace) == 0x0031E8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_ModifyBone) == 0x003208, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_9) == 0x003330, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_9' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_8) == 0x003378, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_8' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_15) == 0x0033C0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SaveCachedPose_1) == 0x0033E8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_14) == 0x003468, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByBool_2) == 0x003490, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_7) == 0x0034D8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_7' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByInt_1) == 0x003520, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByInt_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_6) == 0x003568, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_6' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_5) == 0x0035B0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_5' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByBool_1) == 0x0035F8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_4) == 0x003640, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByInt) == 0x003688, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByInt' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_3) == 0x0036D0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_2) == 0x003718, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot_1) == 0x003760, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_13) == 0x0037A8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_12) == 0x0037D0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_11) == 0x0037F8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_Slot) == 0x003820, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_10) == 0x003868, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_9) == 0x003890, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_8) == 0x0038B8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_7) == 0x0038E0, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_6) == 0x003908, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_BlendListByBool) == 0x003930, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_SaveCachedPose) == 0x003978, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_5) == 0x0039F8, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1) == 0x003A20, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_4) == 0x003B10, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TwoWayBlend_1) == 0x003B38, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TwoWayBlend_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_3) == 0x003C00, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_2) == 0x003C28, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_LayeredBoneBlend) == 0x003C50, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose_1) == 0x003D40, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_TwoWayBlend) == 0x003D68, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, AnimGraphNode_UseCachedPose) == 0x003E30, "Member 'UNPC_PlantMonster_AnimBP_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, SpeedForward) == 0x003E58, "Member 'UNPC_PlantMonster_AnimBP_C::SpeedForward' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, OnAttackStart) == 0x003E60, "Member 'UNPC_PlantMonster_AnimBP_C::OnAttackStart' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, OnAttackEnd) == 0x003E70, "Member 'UNPC_PlantMonster_AnimBP_C::OnAttackEnd' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, OpenBulb) == 0x003E80, "Member 'UNPC_PlantMonster_AnimBP_C::OpenBulb' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, SpeedRight) == 0x003E88, "Member 'UNPC_PlantMonster_AnimBP_C::SpeedRight' has a wrong offset!");
static_assert(offsetof(UNPC_PlantMonster_AnimBP_C, NewVar) == 0x003E90, "Member 'UNPC_PlantMonster_AnimBP_C::NewVar' has a wrong offset!");

}

