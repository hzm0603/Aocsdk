#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CommissionAccordion

#include "Basic.hpp"

#include "GameSystemsPlugin_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CommissionAccordion.WBP_CommissionAccordion_C
// 0x0040 (0x0428 - 0x03E8)
class UWBP_CommissionAccordion_C final : public UAccordion
{
public:
	class UNamedSlot*                             NamedSlot;                                         // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem;                                   // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_1;                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_2;                                 // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_3;                                 // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_4;                                 // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_5;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_JournalItem_C*                     WBP_JournalItem_6;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CommissionAccordion_C">();
	}
	static class UWBP_CommissionAccordion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CommissionAccordion_C>();
	}
};
static_assert(alignof(UWBP_CommissionAccordion_C) == 0x000008, "Wrong alignment on UWBP_CommissionAccordion_C");
static_assert(sizeof(UWBP_CommissionAccordion_C) == 0x000428, "Wrong size on UWBP_CommissionAccordion_C");
static_assert(offsetof(UWBP_CommissionAccordion_C, NamedSlot) == 0x0003E8, "Member 'UWBP_CommissionAccordion_C::NamedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem) == 0x0003F0, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_1) == 0x0003F8, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_1' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_2) == 0x000400, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_2' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_3) == 0x000408, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_3' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_4) == 0x000410, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_4' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_5) == 0x000418, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_5' has a wrong offset!");
static_assert(offsetof(UWBP_CommissionAccordion_C, WBP_JournalItem_6) == 0x000420, "Member 'UWBP_CommissionAccordion_C::WBP_JournalItem_6' has a wrong offset!");

}

