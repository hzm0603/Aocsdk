#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STT_InterruptOnCrowdControl

#include "Basic.hpp"


namespace SDK::Params
{

// Function STT_InterruptOnCrowdControl.STT_InterruptOnCrowdControl_C.ExecuteUbergraph_STT_InterruptOnCrowdControl
// 0x0020 (0x0020 - 0x0000)
struct STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABaseCharacter*                         K2Node_DynamicCast_AsBase_Character;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStunned_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl) == 0x000008, "Wrong alignment on STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl");
static_assert(sizeof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl) == 0x000020, "Wrong size on STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, EntryPoint) == 0x000000, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::EntryPoint' has a wrong offset!");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, K2Node_Event_DeltaTime) == 0x000004, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, K2Node_DynamicCast_AsBase_Character) == 0x000010, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::K2Node_DynamicCast_AsBase_Character' has a wrong offset!");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl, CallFunc_IsStunned_ReturnValue) == 0x000019, "Member 'STT_InterruptOnCrowdControl_C_ExecuteUbergraph_STT_InterruptOnCrowdControl::CallFunc_IsStunned_ReturnValue' has a wrong offset!");

// Function STT_InterruptOnCrowdControl.STT_InterruptOnCrowdControl_C.ReceiveLatentTick
// 0x0004 (0x0004 - 0x0000)
struct STT_InterruptOnCrowdControl_C_ReceiveLatentTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(STT_InterruptOnCrowdControl_C_ReceiveLatentTick) == 0x000004, "Wrong alignment on STT_InterruptOnCrowdControl_C_ReceiveLatentTick");
static_assert(sizeof(STT_InterruptOnCrowdControl_C_ReceiveLatentTick) == 0x000004, "Wrong size on STT_InterruptOnCrowdControl_C_ReceiveLatentTick");
static_assert(offsetof(STT_InterruptOnCrowdControl_C_ReceiveLatentTick, DeltaTime) == 0x000000, "Member 'STT_InterruptOnCrowdControl_C_ReceiveLatentTick::DeltaTime' has a wrong offset!");

}

